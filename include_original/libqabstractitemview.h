#pragma once
#ifndef SRCC_LIBQABSTRACTITEMVIEW_H
#define SRCC_LIBQABSTRACTITEMVIEW_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QAbstractItemView* QAbstractItemView_new(QWidget* parent);
QAbstractItemView* QAbstractItemView_new2();
QMetaObject* QAbstractItemView_MetaObject(const QAbstractItemView* self);
void* QAbstractItemView_Metacast(QAbstractItemView* self, const char* param1);
int QAbstractItemView_Metacall(QAbstractItemView* self, int param1, int param2, void** param3);
libqt_string QAbstractItemView_Tr(const char* s);
void QAbstractItemView_SetModel(QAbstractItemView* self, QAbstractItemModel* model);
QAbstractItemModel* QAbstractItemView_Model(const QAbstractItemView* self);
void QAbstractItemView_SetSelectionModel(QAbstractItemView* self, QItemSelectionModel* selectionModel);
QItemSelectionModel* QAbstractItemView_SelectionModel(const QAbstractItemView* self);
void QAbstractItemView_SetItemDelegate(QAbstractItemView* self, QAbstractItemDelegate* delegate);
QAbstractItemDelegate* QAbstractItemView_ItemDelegate(const QAbstractItemView* self);
void QAbstractItemView_SetSelectionMode(QAbstractItemView* self, int mode);
int QAbstractItemView_SelectionMode(const QAbstractItemView* self);
void QAbstractItemView_SetSelectionBehavior(QAbstractItemView* self, int behavior);
int QAbstractItemView_SelectionBehavior(const QAbstractItemView* self);
QModelIndex* QAbstractItemView_CurrentIndex(const QAbstractItemView* self);
QModelIndex* QAbstractItemView_RootIndex(const QAbstractItemView* self);
void QAbstractItemView_SetEditTriggers(QAbstractItemView* self, int triggers);
int QAbstractItemView_EditTriggers(const QAbstractItemView* self);
void QAbstractItemView_SetVerticalScrollMode(QAbstractItemView* self, int mode);
int QAbstractItemView_VerticalScrollMode(const QAbstractItemView* self);
void QAbstractItemView_ResetVerticalScrollMode(QAbstractItemView* self);
void QAbstractItemView_SetHorizontalScrollMode(QAbstractItemView* self, int mode);
int QAbstractItemView_HorizontalScrollMode(const QAbstractItemView* self);
void QAbstractItemView_ResetHorizontalScrollMode(QAbstractItemView* self);
void QAbstractItemView_SetAutoScroll(QAbstractItemView* self, bool enable);
bool QAbstractItemView_HasAutoScroll(const QAbstractItemView* self);
void QAbstractItemView_SetAutoScrollMargin(QAbstractItemView* self, int margin);
int QAbstractItemView_AutoScrollMargin(const QAbstractItemView* self);
void QAbstractItemView_SetTabKeyNavigation(QAbstractItemView* self, bool enable);
bool QAbstractItemView_TabKeyNavigation(const QAbstractItemView* self);
void QAbstractItemView_SetDropIndicatorShown(QAbstractItemView* self, bool enable);
bool QAbstractItemView_ShowDropIndicator(const QAbstractItemView* self);
void QAbstractItemView_SetDragEnabled(QAbstractItemView* self, bool enable);
bool QAbstractItemView_DragEnabled(const QAbstractItemView* self);
void QAbstractItemView_SetDragDropOverwriteMode(QAbstractItemView* self, bool overwrite);
bool QAbstractItemView_DragDropOverwriteMode(const QAbstractItemView* self);
void QAbstractItemView_SetDragDropMode(QAbstractItemView* self, int behavior);
int QAbstractItemView_DragDropMode(const QAbstractItemView* self);
void QAbstractItemView_SetDefaultDropAction(QAbstractItemView* self, int dropAction);
int QAbstractItemView_DefaultDropAction(const QAbstractItemView* self);
void QAbstractItemView_SetAlternatingRowColors(QAbstractItemView* self, bool enable);
bool QAbstractItemView_AlternatingRowColors(const QAbstractItemView* self);
void QAbstractItemView_SetIconSize(QAbstractItemView* self, const QSize* size);
QSize* QAbstractItemView_IconSize(const QAbstractItemView* self);
void QAbstractItemView_SetTextElideMode(QAbstractItemView* self, int mode);
int QAbstractItemView_TextElideMode(const QAbstractItemView* self);
void QAbstractItemView_KeyboardSearch(QAbstractItemView* self, const libqt_string search);
QRect* QAbstractItemView_VisualRect(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_ScrollTo(QAbstractItemView* self, const QModelIndex* index, int hint);
QModelIndex* QAbstractItemView_IndexAt(const QAbstractItemView* self, const QPoint* point);
QSize* QAbstractItemView_SizeHintForIndex(const QAbstractItemView* self, const QModelIndex* index);
int QAbstractItemView_SizeHintForRow(const QAbstractItemView* self, int row);
int QAbstractItemView_SizeHintForColumn(const QAbstractItemView* self, int column);
void QAbstractItemView_OpenPersistentEditor(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_ClosePersistentEditor(QAbstractItemView* self, const QModelIndex* index);
bool QAbstractItemView_IsPersistentEditorOpen(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_SetIndexWidget(QAbstractItemView* self, const QModelIndex* index, QWidget* widget);
QWidget* QAbstractItemView_IndexWidget(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_SetItemDelegateForRow(QAbstractItemView* self, int row, QAbstractItemDelegate* delegate);
QAbstractItemDelegate* QAbstractItemView_ItemDelegateForRow(const QAbstractItemView* self, int row);
void QAbstractItemView_SetItemDelegateForColumn(QAbstractItemView* self, int column, QAbstractItemDelegate* delegate);
QAbstractItemDelegate* QAbstractItemView_ItemDelegateForColumn(const QAbstractItemView* self, int column);
QAbstractItemDelegate* QAbstractItemView_ItemDelegate2(const QAbstractItemView* self, const QModelIndex* index);
QAbstractItemDelegate* QAbstractItemView_ItemDelegateForIndex(const QAbstractItemView* self, const QModelIndex* index);
QVariant* QAbstractItemView_InputMethodQuery(const QAbstractItemView* self, int query);
void QAbstractItemView_Reset(QAbstractItemView* self);
void QAbstractItemView_SetRootIndex(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_DoItemsLayout(QAbstractItemView* self);
void QAbstractItemView_SelectAll(QAbstractItemView* self);
void QAbstractItemView_Edit(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_ClearSelection(QAbstractItemView* self);
void QAbstractItemView_SetCurrentIndex(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_ScrollToTop(QAbstractItemView* self);
void QAbstractItemView_ScrollToBottom(QAbstractItemView* self);
void QAbstractItemView_Update(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_DataChanged(QAbstractItemView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QAbstractItemView_RowsInserted(QAbstractItemView* self, const QModelIndex* parent, int start, int end);
void QAbstractItemView_RowsAboutToBeRemoved(QAbstractItemView* self, const QModelIndex* parent, int start, int end);
void QAbstractItemView_SelectionChanged(QAbstractItemView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QAbstractItemView_CurrentChanged(QAbstractItemView* self, const QModelIndex* current, const QModelIndex* previous);
void QAbstractItemView_UpdateEditorData(QAbstractItemView* self);
void QAbstractItemView_UpdateEditorGeometries(QAbstractItemView* self);
void QAbstractItemView_UpdateGeometries(QAbstractItemView* self);
void QAbstractItemView_VerticalScrollbarAction(QAbstractItemView* self, int action);
void QAbstractItemView_HorizontalScrollbarAction(QAbstractItemView* self, int action);
void QAbstractItemView_VerticalScrollbarValueChanged(QAbstractItemView* self, int value);
void QAbstractItemView_HorizontalScrollbarValueChanged(QAbstractItemView* self, int value);
void QAbstractItemView_CloseEditor(QAbstractItemView* self, QWidget* editor, int hint);
void QAbstractItemView_CommitData(QAbstractItemView* self, QWidget* editor);
void QAbstractItemView_EditorDestroyed(QAbstractItemView* self, QObject* editor);
void QAbstractItemView_Pressed(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_Connect_Pressed(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_Clicked(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_Connect_Clicked(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_DoubleClicked(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_Connect_DoubleClicked(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_Activated(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_Connect_Activated(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_Entered(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_Connect_Entered(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_ViewportEntered(QAbstractItemView* self);
void QAbstractItemView_Connect_ViewportEntered(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_IconSizeChanged(QAbstractItemView* self, const QSize* size);
void QAbstractItemView_Connect_IconSizeChanged(QAbstractItemView* self, intptr_t slot);
QModelIndex* QAbstractItemView_MoveCursor(QAbstractItemView* self, int cursorAction, int modifiers);
int QAbstractItemView_HorizontalOffset(const QAbstractItemView* self);
int QAbstractItemView_VerticalOffset(const QAbstractItemView* self);
bool QAbstractItemView_IsIndexHidden(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_SetSelection(QAbstractItemView* self, const QRect* rect, int command);
QRegion* QAbstractItemView_VisualRegionForSelection(const QAbstractItemView* self, const QItemSelection* selection);
libqt_list /* of QModelIndex* */ QAbstractItemView_SelectedIndexes(const QAbstractItemView* self);
bool QAbstractItemView_Edit2(QAbstractItemView* self, const QModelIndex* index, int trigger, QEvent* event);
int QAbstractItemView_SelectionCommand(const QAbstractItemView* self, const QModelIndex* index, const QEvent* event);
void QAbstractItemView_StartDrag(QAbstractItemView* self, int supportedActions);
void QAbstractItemView_InitViewItemOption(const QAbstractItemView* self, QStyleOptionViewItem* option);
bool QAbstractItemView_FocusNextPrevChild(QAbstractItemView* self, bool next);
bool QAbstractItemView_Event(QAbstractItemView* self, QEvent* event);
bool QAbstractItemView_ViewportEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_MousePressEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_MouseMoveEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_MouseReleaseEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_MouseDoubleClickEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_DragEnterEvent(QAbstractItemView* self, QDragEnterEvent* event);
void QAbstractItemView_DragMoveEvent(QAbstractItemView* self, QDragMoveEvent* event);
void QAbstractItemView_DragLeaveEvent(QAbstractItemView* self, QDragLeaveEvent* event);
void QAbstractItemView_DropEvent(QAbstractItemView* self, QDropEvent* event);
void QAbstractItemView_FocusInEvent(QAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_FocusOutEvent(QAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_KeyPressEvent(QAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_ResizeEvent(QAbstractItemView* self, QResizeEvent* event);
void QAbstractItemView_TimerEvent(QAbstractItemView* self, QTimerEvent* event);
void QAbstractItemView_InputMethodEvent(QAbstractItemView* self, QInputMethodEvent* event);
bool QAbstractItemView_EventFilter(QAbstractItemView* self, QObject* object, QEvent* event);
QSize* QAbstractItemView_ViewportSizeHint(const QAbstractItemView* self);
libqt_string QAbstractItemView_Tr2(const char* s, const char* c);
libqt_string QAbstractItemView_Tr3(const char* s, const char* c, int n);
void QAbstractItemView_OnMetacall(QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseMetacall(QAbstractItemView* self, int param1, int param2, void** param3);
void QAbstractItemView_OnSetModel(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetModel(QAbstractItemView* self, QAbstractItemModel* model);
void QAbstractItemView_OnSetSelectionModel(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetSelectionModel(QAbstractItemView* self, QItemSelectionModel* selectionModel);
void QAbstractItemView_OnKeyboardSearch(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseKeyboardSearch(QAbstractItemView* self, const libqt_string search);
void QAbstractItemView_OnVisualRect(const QAbstractItemView* self, intptr_t slot);
QRect* QAbstractItemView_QBaseVisualRect(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_OnScrollTo(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseScrollTo(QAbstractItemView* self, const QModelIndex* index, int hint);
void QAbstractItemView_OnIndexAt(const QAbstractItemView* self, intptr_t slot);
QModelIndex* QAbstractItemView_QBaseIndexAt(const QAbstractItemView* self, const QPoint* point);
void QAbstractItemView_OnSizeHintForRow(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseSizeHintForRow(const QAbstractItemView* self, int row);
void QAbstractItemView_OnSizeHintForColumn(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseSizeHintForColumn(const QAbstractItemView* self, int column);
void QAbstractItemView_OnItemDelegateForIndex(const QAbstractItemView* self, intptr_t slot);
QAbstractItemDelegate* QAbstractItemView_QBaseItemDelegateForIndex(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_OnInputMethodQuery(const QAbstractItemView* self, intptr_t slot);
QVariant* QAbstractItemView_QBaseInputMethodQuery(const QAbstractItemView* self, int query);
void QAbstractItemView_OnReset(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseReset(QAbstractItemView* self);
void QAbstractItemView_OnSetRootIndex(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetRootIndex(QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_OnDoItemsLayout(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDoItemsLayout(QAbstractItemView* self);
void QAbstractItemView_OnSelectAll(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSelectAll(QAbstractItemView* self);
void QAbstractItemView_OnDataChanged(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDataChanged(QAbstractItemView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QAbstractItemView_OnRowsInserted(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseRowsInserted(QAbstractItemView* self, const QModelIndex* parent, int start, int end);
void QAbstractItemView_OnRowsAboutToBeRemoved(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseRowsAboutToBeRemoved(QAbstractItemView* self, const QModelIndex* parent, int start, int end);
void QAbstractItemView_OnSelectionChanged(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSelectionChanged(QAbstractItemView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QAbstractItemView_OnCurrentChanged(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseCurrentChanged(QAbstractItemView* self, const QModelIndex* current, const QModelIndex* previous);
void QAbstractItemView_OnUpdateEditorData(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseUpdateEditorData(QAbstractItemView* self);
void QAbstractItemView_OnUpdateEditorGeometries(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseUpdateEditorGeometries(QAbstractItemView* self);
void QAbstractItemView_OnUpdateGeometries(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseUpdateGeometries(QAbstractItemView* self);
void QAbstractItemView_OnVerticalScrollbarAction(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseVerticalScrollbarAction(QAbstractItemView* self, int action);
void QAbstractItemView_OnHorizontalScrollbarAction(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseHorizontalScrollbarAction(QAbstractItemView* self, int action);
void QAbstractItemView_OnVerticalScrollbarValueChanged(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseVerticalScrollbarValueChanged(QAbstractItemView* self, int value);
void QAbstractItemView_OnHorizontalScrollbarValueChanged(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseHorizontalScrollbarValueChanged(QAbstractItemView* self, int value);
void QAbstractItemView_OnCloseEditor(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseCloseEditor(QAbstractItemView* self, QWidget* editor, int hint);
void QAbstractItemView_OnCommitData(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseCommitData(QAbstractItemView* self, QWidget* editor);
void QAbstractItemView_OnEditorDestroyed(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseEditorDestroyed(QAbstractItemView* self, QObject* editor);
void QAbstractItemView_OnMoveCursor(QAbstractItemView* self, intptr_t slot);
QModelIndex* QAbstractItemView_QBaseMoveCursor(QAbstractItemView* self, int cursorAction, int modifiers);
void QAbstractItemView_OnHorizontalOffset(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseHorizontalOffset(const QAbstractItemView* self);
void QAbstractItemView_OnVerticalOffset(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseVerticalOffset(const QAbstractItemView* self);
void QAbstractItemView_OnIsIndexHidden(const QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseIsIndexHidden(const QAbstractItemView* self, const QModelIndex* index);
void QAbstractItemView_OnSetSelection(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetSelection(QAbstractItemView* self, const QRect* rect, int command);
void QAbstractItemView_OnVisualRegionForSelection(const QAbstractItemView* self, intptr_t slot);
QRegion* QAbstractItemView_QBaseVisualRegionForSelection(const QAbstractItemView* self, const QItemSelection* selection);
void QAbstractItemView_OnSelectedIndexes(const QAbstractItemView* self, intptr_t slot);
libqt_list /* of QModelIndex* */ QAbstractItemView_QBaseSelectedIndexes(const QAbstractItemView* self);
void QAbstractItemView_OnEdit2(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseEdit2(QAbstractItemView* self, const QModelIndex* index, int trigger, QEvent* event);
void QAbstractItemView_OnSelectionCommand(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseSelectionCommand(const QAbstractItemView* self, const QModelIndex* index, const QEvent* event);
void QAbstractItemView_OnStartDrag(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseStartDrag(QAbstractItemView* self, int supportedActions);
void QAbstractItemView_OnInitViewItemOption(const QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseInitViewItemOption(const QAbstractItemView* self, QStyleOptionViewItem* option);
void QAbstractItemView_OnFocusNextPrevChild(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseFocusNextPrevChild(QAbstractItemView* self, bool next);
void QAbstractItemView_OnEvent(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_OnViewportEvent(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseViewportEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_OnMousePressEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseMousePressEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_OnMouseMoveEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseMouseMoveEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_OnMouseReleaseEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseMouseReleaseEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_OnMouseDoubleClickEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseMouseDoubleClickEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_OnDragEnterEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDragEnterEvent(QAbstractItemView* self, QDragEnterEvent* event);
void QAbstractItemView_OnDragMoveEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDragMoveEvent(QAbstractItemView* self, QDragMoveEvent* event);
void QAbstractItemView_OnDragLeaveEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDragLeaveEvent(QAbstractItemView* self, QDragLeaveEvent* event);
void QAbstractItemView_OnDropEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDropEvent(QAbstractItemView* self, QDropEvent* event);
void QAbstractItemView_OnFocusInEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseFocusInEvent(QAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_OnFocusOutEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseFocusOutEvent(QAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_OnKeyPressEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseKeyPressEvent(QAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_OnResizeEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseResizeEvent(QAbstractItemView* self, QResizeEvent* event);
void QAbstractItemView_OnTimerEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseTimerEvent(QAbstractItemView* self, QTimerEvent* event);
void QAbstractItemView_OnInputMethodEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseInputMethodEvent(QAbstractItemView* self, QInputMethodEvent* event);
void QAbstractItemView_OnEventFilter(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseEventFilter(QAbstractItemView* self, QObject* object, QEvent* event);
void QAbstractItemView_OnViewportSizeHint(const QAbstractItemView* self, intptr_t slot);
QSize* QAbstractItemView_QBaseViewportSizeHint(const QAbstractItemView* self);
QSize* QAbstractItemView_MinimumSizeHint(const QAbstractItemView* self);
void QAbstractItemView_OnMinimumSizeHint(const QAbstractItemView* self, intptr_t slot);
QSize* QAbstractItemView_QBaseMinimumSizeHint(const QAbstractItemView* self);
QSize* QAbstractItemView_SizeHint(const QAbstractItemView* self);
void QAbstractItemView_OnSizeHint(const QAbstractItemView* self, intptr_t slot);
QSize* QAbstractItemView_QBaseSizeHint(const QAbstractItemView* self);
void QAbstractItemView_SetupViewport(QAbstractItemView* self, QWidget* viewport);
void QAbstractItemView_OnSetupViewport(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetupViewport(QAbstractItemView* self, QWidget* viewport);
void QAbstractItemView_PaintEvent(QAbstractItemView* self, QPaintEvent* param1);
void QAbstractItemView_OnPaintEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBasePaintEvent(QAbstractItemView* self, QPaintEvent* param1);
void QAbstractItemView_WheelEvent(QAbstractItemView* self, QWheelEvent* param1);
void QAbstractItemView_OnWheelEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseWheelEvent(QAbstractItemView* self, QWheelEvent* param1);
void QAbstractItemView_ContextMenuEvent(QAbstractItemView* self, QContextMenuEvent* param1);
void QAbstractItemView_OnContextMenuEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseContextMenuEvent(QAbstractItemView* self, QContextMenuEvent* param1);
void QAbstractItemView_ScrollContentsBy(QAbstractItemView* self, int dx, int dy);
void QAbstractItemView_OnScrollContentsBy(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseScrollContentsBy(QAbstractItemView* self, int dx, int dy);
void QAbstractItemView_ChangeEvent(QAbstractItemView* self, QEvent* param1);
void QAbstractItemView_OnChangeEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseChangeEvent(QAbstractItemView* self, QEvent* param1);
void QAbstractItemView_InitStyleOption(const QAbstractItemView* self, QStyleOptionFrame* option);
void QAbstractItemView_OnInitStyleOption(const QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseInitStyleOption(const QAbstractItemView* self, QStyleOptionFrame* option);
int QAbstractItemView_DevType(const QAbstractItemView* self);
void QAbstractItemView_OnDevType(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseDevType(const QAbstractItemView* self);
void QAbstractItemView_SetVisible(QAbstractItemView* self, bool visible);
void QAbstractItemView_OnSetVisible(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetVisible(QAbstractItemView* self, bool visible);
int QAbstractItemView_HeightForWidth(const QAbstractItemView* self, int param1);
void QAbstractItemView_OnHeightForWidth(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseHeightForWidth(const QAbstractItemView* self, int param1);
bool QAbstractItemView_HasHeightForWidth(const QAbstractItemView* self);
void QAbstractItemView_OnHasHeightForWidth(const QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseHasHeightForWidth(const QAbstractItemView* self);
QPaintEngine* QAbstractItemView_PaintEngine(const QAbstractItemView* self);
void QAbstractItemView_OnPaintEngine(const QAbstractItemView* self, intptr_t slot);
QPaintEngine* QAbstractItemView_QBasePaintEngine(const QAbstractItemView* self);
void QAbstractItemView_KeyReleaseEvent(QAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_OnKeyReleaseEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseKeyReleaseEvent(QAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_EnterEvent(QAbstractItemView* self, QEnterEvent* event);
void QAbstractItemView_OnEnterEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseEnterEvent(QAbstractItemView* self, QEnterEvent* event);
void QAbstractItemView_LeaveEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_OnLeaveEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseLeaveEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_MoveEvent(QAbstractItemView* self, QMoveEvent* event);
void QAbstractItemView_OnMoveEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseMoveEvent(QAbstractItemView* self, QMoveEvent* event);
void QAbstractItemView_CloseEvent(QAbstractItemView* self, QCloseEvent* event);
void QAbstractItemView_OnCloseEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseCloseEvent(QAbstractItemView* self, QCloseEvent* event);
void QAbstractItemView_TabletEvent(QAbstractItemView* self, QTabletEvent* event);
void QAbstractItemView_OnTabletEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseTabletEvent(QAbstractItemView* self, QTabletEvent* event);
void QAbstractItemView_ActionEvent(QAbstractItemView* self, QActionEvent* event);
void QAbstractItemView_OnActionEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseActionEvent(QAbstractItemView* self, QActionEvent* event);
void QAbstractItemView_ShowEvent(QAbstractItemView* self, QShowEvent* event);
void QAbstractItemView_OnShowEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseShowEvent(QAbstractItemView* self, QShowEvent* event);
void QAbstractItemView_HideEvent(QAbstractItemView* self, QHideEvent* event);
void QAbstractItemView_OnHideEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseHideEvent(QAbstractItemView* self, QHideEvent* event);
bool QAbstractItemView_NativeEvent(QAbstractItemView* self, const libqt_string eventType, void* message, intptr_t* result);
void QAbstractItemView_OnNativeEvent(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseNativeEvent(QAbstractItemView* self, const libqt_string eventType, void* message, intptr_t* result);
int QAbstractItemView_Metric(const QAbstractItemView* self, int param1);
void QAbstractItemView_OnMetric(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseMetric(const QAbstractItemView* self, int param1);
void QAbstractItemView_InitPainter(const QAbstractItemView* self, QPainter* painter);
void QAbstractItemView_OnInitPainter(const QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseInitPainter(const QAbstractItemView* self, QPainter* painter);
QPaintDevice* QAbstractItemView_Redirected(const QAbstractItemView* self, QPoint* offset);
void QAbstractItemView_OnRedirected(const QAbstractItemView* self, intptr_t slot);
QPaintDevice* QAbstractItemView_QBaseRedirected(const QAbstractItemView* self, QPoint* offset);
QPainter* QAbstractItemView_SharedPainter(const QAbstractItemView* self);
void QAbstractItemView_OnSharedPainter(const QAbstractItemView* self, intptr_t slot);
QPainter* QAbstractItemView_QBaseSharedPainter(const QAbstractItemView* self);
void QAbstractItemView_ChildEvent(QAbstractItemView* self, QChildEvent* event);
void QAbstractItemView_OnChildEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseChildEvent(QAbstractItemView* self, QChildEvent* event);
void QAbstractItemView_CustomEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_OnCustomEvent(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseCustomEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_ConnectNotify(QAbstractItemView* self, const QMetaMethod* signal);
void QAbstractItemView_OnConnectNotify(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseConnectNotify(QAbstractItemView* self, const QMetaMethod* signal);
void QAbstractItemView_DisconnectNotify(QAbstractItemView* self, const QMetaMethod* signal);
void QAbstractItemView_OnDisconnectNotify(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDisconnectNotify(QAbstractItemView* self, const QMetaMethod* signal);
int QAbstractItemView_State(const QAbstractItemView* self);
void QAbstractItemView_OnState(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseState(const QAbstractItemView* self);
void QAbstractItemView_SetState(QAbstractItemView* self, int state);
void QAbstractItemView_OnSetState(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetState(QAbstractItemView* self, int state);
void QAbstractItemView_ScheduleDelayedItemsLayout(QAbstractItemView* self);
void QAbstractItemView_OnScheduleDelayedItemsLayout(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseScheduleDelayedItemsLayout(QAbstractItemView* self);
void QAbstractItemView_ExecuteDelayedItemsLayout(QAbstractItemView* self);
void QAbstractItemView_OnExecuteDelayedItemsLayout(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseExecuteDelayedItemsLayout(QAbstractItemView* self);
void QAbstractItemView_SetDirtyRegion(QAbstractItemView* self, const QRegion* region);
void QAbstractItemView_OnSetDirtyRegion(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetDirtyRegion(QAbstractItemView* self, const QRegion* region);
void QAbstractItemView_ScrollDirtyRegion(QAbstractItemView* self, int dx, int dy);
void QAbstractItemView_OnScrollDirtyRegion(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseScrollDirtyRegion(QAbstractItemView* self, int dx, int dy);
QPoint* QAbstractItemView_DirtyRegionOffset(const QAbstractItemView* self);
void QAbstractItemView_OnDirtyRegionOffset(const QAbstractItemView* self, intptr_t slot);
QPoint* QAbstractItemView_QBaseDirtyRegionOffset(const QAbstractItemView* self);
void QAbstractItemView_StartAutoScroll(QAbstractItemView* self);
void QAbstractItemView_OnStartAutoScroll(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseStartAutoScroll(QAbstractItemView* self);
void QAbstractItemView_StopAutoScroll(QAbstractItemView* self);
void QAbstractItemView_OnStopAutoScroll(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseStopAutoScroll(QAbstractItemView* self);
void QAbstractItemView_DoAutoScroll(QAbstractItemView* self);
void QAbstractItemView_OnDoAutoScroll(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDoAutoScroll(QAbstractItemView* self);
int QAbstractItemView_DropIndicatorPosition(const QAbstractItemView* self);
void QAbstractItemView_OnDropIndicatorPosition(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseDropIndicatorPosition(const QAbstractItemView* self);
void QAbstractItemView_SetViewportMargins(QAbstractItemView* self, int left, int top, int right, int bottom);
void QAbstractItemView_OnSetViewportMargins(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseSetViewportMargins(QAbstractItemView* self, int left, int top, int right, int bottom);
QMargins* QAbstractItemView_ViewportMargins(const QAbstractItemView* self);
void QAbstractItemView_OnViewportMargins(const QAbstractItemView* self, intptr_t slot);
QMargins* QAbstractItemView_QBaseViewportMargins(const QAbstractItemView* self);
void QAbstractItemView_DrawFrame(QAbstractItemView* self, QPainter* param1);
void QAbstractItemView_OnDrawFrame(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDrawFrame(QAbstractItemView* self, QPainter* param1);
void QAbstractItemView_UpdateMicroFocus(QAbstractItemView* self);
void QAbstractItemView_OnUpdateMicroFocus(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseUpdateMicroFocus(QAbstractItemView* self);
void QAbstractItemView_Create(QAbstractItemView* self);
void QAbstractItemView_OnCreate(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseCreate(QAbstractItemView* self);
void QAbstractItemView_Destroy(QAbstractItemView* self);
void QAbstractItemView_OnDestroy(QAbstractItemView* self, intptr_t slot);
void QAbstractItemView_QBaseDestroy(QAbstractItemView* self);
bool QAbstractItemView_FocusNextChild(QAbstractItemView* self);
void QAbstractItemView_OnFocusNextChild(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseFocusNextChild(QAbstractItemView* self);
bool QAbstractItemView_FocusPreviousChild(QAbstractItemView* self);
void QAbstractItemView_OnFocusPreviousChild(QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseFocusPreviousChild(QAbstractItemView* self);
QObject* QAbstractItemView_Sender(const QAbstractItemView* self);
void QAbstractItemView_OnSender(const QAbstractItemView* self, intptr_t slot);
QObject* QAbstractItemView_QBaseSender(const QAbstractItemView* self);
int QAbstractItemView_SenderSignalIndex(const QAbstractItemView* self);
void QAbstractItemView_OnSenderSignalIndex(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseSenderSignalIndex(const QAbstractItemView* self);
int QAbstractItemView_Receivers(const QAbstractItemView* self, const char* signal);
void QAbstractItemView_OnReceivers(const QAbstractItemView* self, intptr_t slot);
int QAbstractItemView_QBaseReceivers(const QAbstractItemView* self, const char* signal);
bool QAbstractItemView_IsSignalConnected(const QAbstractItemView* self, const QMetaMethod* signal);
void QAbstractItemView_OnIsSignalConnected(const QAbstractItemView* self, intptr_t slot);
bool QAbstractItemView_QBaseIsSignalConnected(const QAbstractItemView* self, const QMetaMethod* signal);
double QAbstractItemView_GetDecodedMetricF(const QAbstractItemView* self, int metricA, int metricB);
void QAbstractItemView_OnGetDecodedMetricF(const QAbstractItemView* self, intptr_t slot);
double QAbstractItemView_QBaseGetDecodedMetricF(const QAbstractItemView* self, int metricA, int metricB);
void QAbstractItemView_Delete(QAbstractItemView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
