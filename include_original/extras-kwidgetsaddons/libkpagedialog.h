#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKPAGEDIALOG_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKPAGEDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KPageDialog KPageDialog;
typedef struct KPageWidget KPageWidget;
typedef struct KPageWidgetItem KPageWidgetItem;
typedef struct QAbstractButton QAbstractButton;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDialogButtonBox QDialogButtonBox;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QPushButton QPushButton;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KPageDialog* KPageDialog_new(QWidget* parent);
KPageDialog* KPageDialog_new2();
KPageDialog* KPageDialog_new3(QWidget* parent, int flags);
QMetaObject* KPageDialog_MetaObject(const KPageDialog* self);
void* KPageDialog_Metacast(KPageDialog* self, const char* param1);
int KPageDialog_Metacall(KPageDialog* self, int param1, int param2, void** param3);
libqt_string KPageDialog_Tr(const char* s);
void KPageDialog_SetFaceType(KPageDialog* self, int faceType);
KPageWidgetItem* KPageDialog_AddPage(KPageDialog* self, QWidget* widget, const libqt_string name);
void KPageDialog_AddPage2(KPageDialog* self, KPageWidgetItem* item);
KPageWidgetItem* KPageDialog_InsertPage(KPageDialog* self, KPageWidgetItem* before, QWidget* widget, const libqt_string name);
void KPageDialog_InsertPage2(KPageDialog* self, KPageWidgetItem* before, KPageWidgetItem* item);
KPageWidgetItem* KPageDialog_AddSubPage(KPageDialog* self, KPageWidgetItem* parent, QWidget* widget, const libqt_string name);
void KPageDialog_AddSubPage2(KPageDialog* self, KPageWidgetItem* parent, KPageWidgetItem* item);
void KPageDialog_RemovePage(KPageDialog* self, KPageWidgetItem* item);
void KPageDialog_SetCurrentPage(KPageDialog* self, KPageWidgetItem* item);
KPageWidgetItem* KPageDialog_CurrentPage(const KPageDialog* self);
void KPageDialog_SetStandardButtons(KPageDialog* self, int buttons);
QPushButton* KPageDialog_Button(const KPageDialog* self, int which);
void KPageDialog_AddActionButton(KPageDialog* self, QAbstractButton* button);
void KPageDialog_CurrentPageChanged(KPageDialog* self, KPageWidgetItem* current, KPageWidgetItem* before);
void KPageDialog_Connect_CurrentPageChanged(KPageDialog* self, intptr_t slot);
void KPageDialog_PageRemoved(KPageDialog* self, KPageWidgetItem* page);
void KPageDialog_Connect_PageRemoved(KPageDialog* self, intptr_t slot);
libqt_string KPageDialog_Tr2(const char* s, const char* c);
libqt_string KPageDialog_Tr3(const char* s, const char* c, int n);
void KPageDialog_OnMetacall(KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseMetacall(KPageDialog* self, int param1, int param2, void** param3);
void KPageDialog_SetVisible(KPageDialog* self, bool visible);
void KPageDialog_OnSetVisible(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseSetVisible(KPageDialog* self, bool visible);
QSize* KPageDialog_SizeHint(const KPageDialog* self);
void KPageDialog_OnSizeHint(const KPageDialog* self, intptr_t slot);
QSize* KPageDialog_QBaseSizeHint(const KPageDialog* self);
QSize* KPageDialog_MinimumSizeHint(const KPageDialog* self);
void KPageDialog_OnMinimumSizeHint(const KPageDialog* self, intptr_t slot);
QSize* KPageDialog_QBaseMinimumSizeHint(const KPageDialog* self);
void KPageDialog_Open(KPageDialog* self);
void KPageDialog_OnOpen(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseOpen(KPageDialog* self);
int KPageDialog_Exec(KPageDialog* self);
void KPageDialog_OnExec(KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseExec(KPageDialog* self);
void KPageDialog_Done(KPageDialog* self, int param1);
void KPageDialog_OnDone(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDone(KPageDialog* self, int param1);
void KPageDialog_Accept(KPageDialog* self);
void KPageDialog_OnAccept(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseAccept(KPageDialog* self);
void KPageDialog_Reject(KPageDialog* self);
void KPageDialog_OnReject(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseReject(KPageDialog* self);
void KPageDialog_KeyPressEvent(KPageDialog* self, QKeyEvent* param1);
void KPageDialog_OnKeyPressEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseKeyPressEvent(KPageDialog* self, QKeyEvent* param1);
void KPageDialog_CloseEvent(KPageDialog* self, QCloseEvent* param1);
void KPageDialog_OnCloseEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseCloseEvent(KPageDialog* self, QCloseEvent* param1);
void KPageDialog_ShowEvent(KPageDialog* self, QShowEvent* param1);
void KPageDialog_OnShowEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseShowEvent(KPageDialog* self, QShowEvent* param1);
void KPageDialog_ResizeEvent(KPageDialog* self, QResizeEvent* param1);
void KPageDialog_OnResizeEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseResizeEvent(KPageDialog* self, QResizeEvent* param1);
void KPageDialog_ContextMenuEvent(KPageDialog* self, QContextMenuEvent* param1);
void KPageDialog_OnContextMenuEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseContextMenuEvent(KPageDialog* self, QContextMenuEvent* param1);
bool KPageDialog_EventFilter(KPageDialog* self, QObject* param1, QEvent* param2);
void KPageDialog_OnEventFilter(KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseEventFilter(KPageDialog* self, QObject* param1, QEvent* param2);
int KPageDialog_DevType(const KPageDialog* self);
void KPageDialog_OnDevType(const KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseDevType(const KPageDialog* self);
int KPageDialog_HeightForWidth(const KPageDialog* self, int param1);
void KPageDialog_OnHeightForWidth(const KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseHeightForWidth(const KPageDialog* self, int param1);
bool KPageDialog_HasHeightForWidth(const KPageDialog* self);
void KPageDialog_OnHasHeightForWidth(const KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseHasHeightForWidth(const KPageDialog* self);
QPaintEngine* KPageDialog_PaintEngine(const KPageDialog* self);
void KPageDialog_OnPaintEngine(const KPageDialog* self, intptr_t slot);
QPaintEngine* KPageDialog_QBasePaintEngine(const KPageDialog* self);
bool KPageDialog_Event(KPageDialog* self, QEvent* event);
void KPageDialog_OnEvent(KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseEvent(KPageDialog* self, QEvent* event);
void KPageDialog_MousePressEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_OnMousePressEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseMousePressEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_MouseReleaseEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_OnMouseReleaseEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseMouseReleaseEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_MouseDoubleClickEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_OnMouseDoubleClickEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseMouseDoubleClickEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_MouseMoveEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_OnMouseMoveEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseMouseMoveEvent(KPageDialog* self, QMouseEvent* event);
void KPageDialog_WheelEvent(KPageDialog* self, QWheelEvent* event);
void KPageDialog_OnWheelEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseWheelEvent(KPageDialog* self, QWheelEvent* event);
void KPageDialog_KeyReleaseEvent(KPageDialog* self, QKeyEvent* event);
void KPageDialog_OnKeyReleaseEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseKeyReleaseEvent(KPageDialog* self, QKeyEvent* event);
void KPageDialog_FocusInEvent(KPageDialog* self, QFocusEvent* event);
void KPageDialog_OnFocusInEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseFocusInEvent(KPageDialog* self, QFocusEvent* event);
void KPageDialog_FocusOutEvent(KPageDialog* self, QFocusEvent* event);
void KPageDialog_OnFocusOutEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseFocusOutEvent(KPageDialog* self, QFocusEvent* event);
void KPageDialog_EnterEvent(KPageDialog* self, QEnterEvent* event);
void KPageDialog_OnEnterEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseEnterEvent(KPageDialog* self, QEnterEvent* event);
void KPageDialog_LeaveEvent(KPageDialog* self, QEvent* event);
void KPageDialog_OnLeaveEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseLeaveEvent(KPageDialog* self, QEvent* event);
void KPageDialog_PaintEvent(KPageDialog* self, QPaintEvent* event);
void KPageDialog_OnPaintEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBasePaintEvent(KPageDialog* self, QPaintEvent* event);
void KPageDialog_MoveEvent(KPageDialog* self, QMoveEvent* event);
void KPageDialog_OnMoveEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseMoveEvent(KPageDialog* self, QMoveEvent* event);
void KPageDialog_TabletEvent(KPageDialog* self, QTabletEvent* event);
void KPageDialog_OnTabletEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseTabletEvent(KPageDialog* self, QTabletEvent* event);
void KPageDialog_ActionEvent(KPageDialog* self, QActionEvent* event);
void KPageDialog_OnActionEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseActionEvent(KPageDialog* self, QActionEvent* event);
void KPageDialog_DragEnterEvent(KPageDialog* self, QDragEnterEvent* event);
void KPageDialog_OnDragEnterEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDragEnterEvent(KPageDialog* self, QDragEnterEvent* event);
void KPageDialog_DragMoveEvent(KPageDialog* self, QDragMoveEvent* event);
void KPageDialog_OnDragMoveEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDragMoveEvent(KPageDialog* self, QDragMoveEvent* event);
void KPageDialog_DragLeaveEvent(KPageDialog* self, QDragLeaveEvent* event);
void KPageDialog_OnDragLeaveEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDragLeaveEvent(KPageDialog* self, QDragLeaveEvent* event);
void KPageDialog_DropEvent(KPageDialog* self, QDropEvent* event);
void KPageDialog_OnDropEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDropEvent(KPageDialog* self, QDropEvent* event);
void KPageDialog_HideEvent(KPageDialog* self, QHideEvent* event);
void KPageDialog_OnHideEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseHideEvent(KPageDialog* self, QHideEvent* event);
bool KPageDialog_NativeEvent(KPageDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KPageDialog_OnNativeEvent(KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseNativeEvent(KPageDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KPageDialog_ChangeEvent(KPageDialog* self, QEvent* param1);
void KPageDialog_OnChangeEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseChangeEvent(KPageDialog* self, QEvent* param1);
int KPageDialog_Metric(const KPageDialog* self, int param1);
void KPageDialog_OnMetric(const KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseMetric(const KPageDialog* self, int param1);
void KPageDialog_InitPainter(const KPageDialog* self, QPainter* painter);
void KPageDialog_OnInitPainter(const KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseInitPainter(const KPageDialog* self, QPainter* painter);
QPaintDevice* KPageDialog_Redirected(const KPageDialog* self, QPoint* offset);
void KPageDialog_OnRedirected(const KPageDialog* self, intptr_t slot);
QPaintDevice* KPageDialog_QBaseRedirected(const KPageDialog* self, QPoint* offset);
QPainter* KPageDialog_SharedPainter(const KPageDialog* self);
void KPageDialog_OnSharedPainter(const KPageDialog* self, intptr_t slot);
QPainter* KPageDialog_QBaseSharedPainter(const KPageDialog* self);
void KPageDialog_InputMethodEvent(KPageDialog* self, QInputMethodEvent* param1);
void KPageDialog_OnInputMethodEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseInputMethodEvent(KPageDialog* self, QInputMethodEvent* param1);
QVariant* KPageDialog_InputMethodQuery(const KPageDialog* self, int param1);
void KPageDialog_OnInputMethodQuery(const KPageDialog* self, intptr_t slot);
QVariant* KPageDialog_QBaseInputMethodQuery(const KPageDialog* self, int param1);
bool KPageDialog_FocusNextPrevChild(KPageDialog* self, bool next);
void KPageDialog_OnFocusNextPrevChild(KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseFocusNextPrevChild(KPageDialog* self, bool next);
void KPageDialog_TimerEvent(KPageDialog* self, QTimerEvent* event);
void KPageDialog_OnTimerEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseTimerEvent(KPageDialog* self, QTimerEvent* event);
void KPageDialog_ChildEvent(KPageDialog* self, QChildEvent* event);
void KPageDialog_OnChildEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseChildEvent(KPageDialog* self, QChildEvent* event);
void KPageDialog_CustomEvent(KPageDialog* self, QEvent* event);
void KPageDialog_OnCustomEvent(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseCustomEvent(KPageDialog* self, QEvent* event);
void KPageDialog_ConnectNotify(KPageDialog* self, const QMetaMethod* signal);
void KPageDialog_OnConnectNotify(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseConnectNotify(KPageDialog* self, const QMetaMethod* signal);
void KPageDialog_DisconnectNotify(KPageDialog* self, const QMetaMethod* signal);
void KPageDialog_OnDisconnectNotify(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDisconnectNotify(KPageDialog* self, const QMetaMethod* signal);
KPageWidget* KPageDialog_PageWidget(KPageDialog* self);
void KPageDialog_OnPageWidget(KPageDialog* self, intptr_t slot);
KPageWidget* KPageDialog_QBasePageWidget(KPageDialog* self);
KPageWidget* KPageDialog_PageWidget2(const KPageDialog* self);
void KPageDialog_OnPageWidget2(const KPageDialog* self, intptr_t slot);
KPageWidget* KPageDialog_QBasePageWidget2(const KPageDialog* self);
void KPageDialog_SetPageWidget(KPageDialog* self, KPageWidget* widget);
void KPageDialog_OnSetPageWidget(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseSetPageWidget(KPageDialog* self, KPageWidget* widget);
QDialogButtonBox* KPageDialog_ButtonBox(KPageDialog* self);
void KPageDialog_OnButtonBox(KPageDialog* self, intptr_t slot);
QDialogButtonBox* KPageDialog_QBaseButtonBox(KPageDialog* self);
QDialogButtonBox* KPageDialog_ButtonBox2(const KPageDialog* self);
void KPageDialog_OnButtonBox2(const KPageDialog* self, intptr_t slot);
QDialogButtonBox* KPageDialog_QBaseButtonBox2(const KPageDialog* self);
void KPageDialog_SetButtonBox(KPageDialog* self, QDialogButtonBox* box);
void KPageDialog_OnSetButtonBox(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseSetButtonBox(KPageDialog* self, QDialogButtonBox* box);
void KPageDialog_AdjustPosition(KPageDialog* self, QWidget* param1);
void KPageDialog_OnAdjustPosition(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseAdjustPosition(KPageDialog* self, QWidget* param1);
void KPageDialog_UpdateMicroFocus(KPageDialog* self);
void KPageDialog_OnUpdateMicroFocus(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseUpdateMicroFocus(KPageDialog* self);
void KPageDialog_Create(KPageDialog* self);
void KPageDialog_OnCreate(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseCreate(KPageDialog* self);
void KPageDialog_Destroy(KPageDialog* self);
void KPageDialog_OnDestroy(KPageDialog* self, intptr_t slot);
void KPageDialog_QBaseDestroy(KPageDialog* self);
bool KPageDialog_FocusNextChild(KPageDialog* self);
void KPageDialog_OnFocusNextChild(KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseFocusNextChild(KPageDialog* self);
bool KPageDialog_FocusPreviousChild(KPageDialog* self);
void KPageDialog_OnFocusPreviousChild(KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseFocusPreviousChild(KPageDialog* self);
QObject* KPageDialog_Sender(const KPageDialog* self);
void KPageDialog_OnSender(const KPageDialog* self, intptr_t slot);
QObject* KPageDialog_QBaseSender(const KPageDialog* self);
int KPageDialog_SenderSignalIndex(const KPageDialog* self);
void KPageDialog_OnSenderSignalIndex(const KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseSenderSignalIndex(const KPageDialog* self);
int KPageDialog_Receivers(const KPageDialog* self, const char* signal);
void KPageDialog_OnReceivers(const KPageDialog* self, intptr_t slot);
int KPageDialog_QBaseReceivers(const KPageDialog* self, const char* signal);
bool KPageDialog_IsSignalConnected(const KPageDialog* self, const QMetaMethod* signal);
void KPageDialog_OnIsSignalConnected(const KPageDialog* self, intptr_t slot);
bool KPageDialog_QBaseIsSignalConnected(const KPageDialog* self, const QMetaMethod* signal);
double KPageDialog_GetDecodedMetricF(const KPageDialog* self, int metricA, int metricB);
void KPageDialog_OnGetDecodedMetricF(const KPageDialog* self, intptr_t slot);
double KPageDialog_QBaseGetDecodedMetricF(const KPageDialog* self, int metricA, int metricB);
void KPageDialog_Delete(KPageDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
