#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKMESSAGEWIDGET_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKMESSAGEWIDGET_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KMessageWidget KMessageWidget;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KMessageWidget* KMessageWidget_new(QWidget* parent);
KMessageWidget* KMessageWidget_new2();
KMessageWidget* KMessageWidget_new3(const libqt_string text);
KMessageWidget* KMessageWidget_new4(const libqt_string text, QWidget* parent);
QMetaObject* KMessageWidget_MetaObject(const KMessageWidget* self);
void* KMessageWidget_Metacast(KMessageWidget* self, const char* param1);
int KMessageWidget_Metacall(KMessageWidget* self, int param1, int param2, void** param3);
libqt_string KMessageWidget_Tr(const char* s);
int KMessageWidget_Position(const KMessageWidget* self);
libqt_string KMessageWidget_Text(const KMessageWidget* self);
int KMessageWidget_TextFormat(const KMessageWidget* self);
void KMessageWidget_SetTextFormat(KMessageWidget* self, int textFormat);
bool KMessageWidget_WordWrap(const KMessageWidget* self);
bool KMessageWidget_IsCloseButtonVisible(const KMessageWidget* self);
int KMessageWidget_MessageType(const KMessageWidget* self);
void KMessageWidget_AddAction(KMessageWidget* self, QAction* action);
void KMessageWidget_RemoveAction(KMessageWidget* self, QAction* action);
void KMessageWidget_ClearActions(KMessageWidget* self);
QSize* KMessageWidget_SizeHint(const KMessageWidget* self);
QSize* KMessageWidget_MinimumSizeHint(const KMessageWidget* self);
int KMessageWidget_HeightForWidth(const KMessageWidget* self, int width);
QIcon* KMessageWidget_Icon(const KMessageWidget* self);
bool KMessageWidget_IsHideAnimationRunning(const KMessageWidget* self);
bool KMessageWidget_IsShowAnimationRunning(const KMessageWidget* self);
void KMessageWidget_SetText(KMessageWidget* self, const libqt_string text);
void KMessageWidget_SetPosition(KMessageWidget* self, int position);
void KMessageWidget_SetWordWrap(KMessageWidget* self, bool wordWrap);
void KMessageWidget_SetCloseButtonVisible(KMessageWidget* self, bool visible);
void KMessageWidget_SetMessageType(KMessageWidget* self, int typeVal);
void KMessageWidget_AnimatedShow(KMessageWidget* self);
void KMessageWidget_AnimatedHide(KMessageWidget* self);
void KMessageWidget_SetIcon(KMessageWidget* self, const QIcon* icon);
void KMessageWidget_LinkActivated(KMessageWidget* self, const libqt_string contents);
void KMessageWidget_Connect_LinkActivated(KMessageWidget* self, intptr_t slot);
void KMessageWidget_LinkHovered(KMessageWidget* self, const libqt_string contents);
void KMessageWidget_Connect_LinkHovered(KMessageWidget* self, intptr_t slot);
void KMessageWidget_HideAnimationFinished(KMessageWidget* self);
void KMessageWidget_Connect_HideAnimationFinished(KMessageWidget* self, intptr_t slot);
void KMessageWidget_ShowAnimationFinished(KMessageWidget* self);
void KMessageWidget_Connect_ShowAnimationFinished(KMessageWidget* self, intptr_t slot);
void KMessageWidget_PaintEvent(KMessageWidget* self, QPaintEvent* event);
bool KMessageWidget_Event(KMessageWidget* self, QEvent* event);
void KMessageWidget_ResizeEvent(KMessageWidget* self, QResizeEvent* event);
libqt_string KMessageWidget_Tr2(const char* s, const char* c);
libqt_string KMessageWidget_Tr3(const char* s, const char* c, int n);
void KMessageWidget_OnMetacall(KMessageWidget* self, intptr_t slot);
int KMessageWidget_QBaseMetacall(KMessageWidget* self, int param1, int param2, void** param3);
void KMessageWidget_OnSizeHint(const KMessageWidget* self, intptr_t slot);
QSize* KMessageWidget_QBaseSizeHint(const KMessageWidget* self);
void KMessageWidget_OnMinimumSizeHint(const KMessageWidget* self, intptr_t slot);
QSize* KMessageWidget_QBaseMinimumSizeHint(const KMessageWidget* self);
void KMessageWidget_OnHeightForWidth(const KMessageWidget* self, intptr_t slot);
int KMessageWidget_QBaseHeightForWidth(const KMessageWidget* self, int width);
void KMessageWidget_OnPaintEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBasePaintEvent(KMessageWidget* self, QPaintEvent* event);
void KMessageWidget_OnEvent(KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseEvent(KMessageWidget* self, QEvent* event);
void KMessageWidget_OnResizeEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseResizeEvent(KMessageWidget* self, QResizeEvent* event);
void KMessageWidget_ChangeEvent(KMessageWidget* self, QEvent* param1);
void KMessageWidget_OnChangeEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseChangeEvent(KMessageWidget* self, QEvent* param1);
void KMessageWidget_InitStyleOption(const KMessageWidget* self, QStyleOptionFrame* option);
void KMessageWidget_OnInitStyleOption(const KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseInitStyleOption(const KMessageWidget* self, QStyleOptionFrame* option);
int KMessageWidget_DevType(const KMessageWidget* self);
void KMessageWidget_OnDevType(const KMessageWidget* self, intptr_t slot);
int KMessageWidget_QBaseDevType(const KMessageWidget* self);
void KMessageWidget_SetVisible(KMessageWidget* self, bool visible);
void KMessageWidget_OnSetVisible(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseSetVisible(KMessageWidget* self, bool visible);
bool KMessageWidget_HasHeightForWidth(const KMessageWidget* self);
void KMessageWidget_OnHasHeightForWidth(const KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseHasHeightForWidth(const KMessageWidget* self);
QPaintEngine* KMessageWidget_PaintEngine(const KMessageWidget* self);
void KMessageWidget_OnPaintEngine(const KMessageWidget* self, intptr_t slot);
QPaintEngine* KMessageWidget_QBasePaintEngine(const KMessageWidget* self);
void KMessageWidget_MousePressEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_OnMousePressEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseMousePressEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_MouseReleaseEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_OnMouseReleaseEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseMouseReleaseEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_MouseDoubleClickEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_OnMouseDoubleClickEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseMouseDoubleClickEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_MouseMoveEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_OnMouseMoveEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseMouseMoveEvent(KMessageWidget* self, QMouseEvent* event);
void KMessageWidget_WheelEvent(KMessageWidget* self, QWheelEvent* event);
void KMessageWidget_OnWheelEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseWheelEvent(KMessageWidget* self, QWheelEvent* event);
void KMessageWidget_KeyPressEvent(KMessageWidget* self, QKeyEvent* event);
void KMessageWidget_OnKeyPressEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseKeyPressEvent(KMessageWidget* self, QKeyEvent* event);
void KMessageWidget_KeyReleaseEvent(KMessageWidget* self, QKeyEvent* event);
void KMessageWidget_OnKeyReleaseEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseKeyReleaseEvent(KMessageWidget* self, QKeyEvent* event);
void KMessageWidget_FocusInEvent(KMessageWidget* self, QFocusEvent* event);
void KMessageWidget_OnFocusInEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseFocusInEvent(KMessageWidget* self, QFocusEvent* event);
void KMessageWidget_FocusOutEvent(KMessageWidget* self, QFocusEvent* event);
void KMessageWidget_OnFocusOutEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseFocusOutEvent(KMessageWidget* self, QFocusEvent* event);
void KMessageWidget_EnterEvent(KMessageWidget* self, QEnterEvent* event);
void KMessageWidget_OnEnterEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseEnterEvent(KMessageWidget* self, QEnterEvent* event);
void KMessageWidget_LeaveEvent(KMessageWidget* self, QEvent* event);
void KMessageWidget_OnLeaveEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseLeaveEvent(KMessageWidget* self, QEvent* event);
void KMessageWidget_MoveEvent(KMessageWidget* self, QMoveEvent* event);
void KMessageWidget_OnMoveEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseMoveEvent(KMessageWidget* self, QMoveEvent* event);
void KMessageWidget_CloseEvent(KMessageWidget* self, QCloseEvent* event);
void KMessageWidget_OnCloseEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseCloseEvent(KMessageWidget* self, QCloseEvent* event);
void KMessageWidget_ContextMenuEvent(KMessageWidget* self, QContextMenuEvent* event);
void KMessageWidget_OnContextMenuEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseContextMenuEvent(KMessageWidget* self, QContextMenuEvent* event);
void KMessageWidget_TabletEvent(KMessageWidget* self, QTabletEvent* event);
void KMessageWidget_OnTabletEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseTabletEvent(KMessageWidget* self, QTabletEvent* event);
void KMessageWidget_ActionEvent(KMessageWidget* self, QActionEvent* event);
void KMessageWidget_OnActionEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseActionEvent(KMessageWidget* self, QActionEvent* event);
void KMessageWidget_DragEnterEvent(KMessageWidget* self, QDragEnterEvent* event);
void KMessageWidget_OnDragEnterEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDragEnterEvent(KMessageWidget* self, QDragEnterEvent* event);
void KMessageWidget_DragMoveEvent(KMessageWidget* self, QDragMoveEvent* event);
void KMessageWidget_OnDragMoveEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDragMoveEvent(KMessageWidget* self, QDragMoveEvent* event);
void KMessageWidget_DragLeaveEvent(KMessageWidget* self, QDragLeaveEvent* event);
void KMessageWidget_OnDragLeaveEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDragLeaveEvent(KMessageWidget* self, QDragLeaveEvent* event);
void KMessageWidget_DropEvent(KMessageWidget* self, QDropEvent* event);
void KMessageWidget_OnDropEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDropEvent(KMessageWidget* self, QDropEvent* event);
void KMessageWidget_ShowEvent(KMessageWidget* self, QShowEvent* event);
void KMessageWidget_OnShowEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseShowEvent(KMessageWidget* self, QShowEvent* event);
void KMessageWidget_HideEvent(KMessageWidget* self, QHideEvent* event);
void KMessageWidget_OnHideEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseHideEvent(KMessageWidget* self, QHideEvent* event);
bool KMessageWidget_NativeEvent(KMessageWidget* self, const libqt_string eventType, void* message, intptr_t* result);
void KMessageWidget_OnNativeEvent(KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseNativeEvent(KMessageWidget* self, const libqt_string eventType, void* message, intptr_t* result);
int KMessageWidget_Metric(const KMessageWidget* self, int param1);
void KMessageWidget_OnMetric(const KMessageWidget* self, intptr_t slot);
int KMessageWidget_QBaseMetric(const KMessageWidget* self, int param1);
void KMessageWidget_InitPainter(const KMessageWidget* self, QPainter* painter);
void KMessageWidget_OnInitPainter(const KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseInitPainter(const KMessageWidget* self, QPainter* painter);
QPaintDevice* KMessageWidget_Redirected(const KMessageWidget* self, QPoint* offset);
void KMessageWidget_OnRedirected(const KMessageWidget* self, intptr_t slot);
QPaintDevice* KMessageWidget_QBaseRedirected(const KMessageWidget* self, QPoint* offset);
QPainter* KMessageWidget_SharedPainter(const KMessageWidget* self);
void KMessageWidget_OnSharedPainter(const KMessageWidget* self, intptr_t slot);
QPainter* KMessageWidget_QBaseSharedPainter(const KMessageWidget* self);
void KMessageWidget_InputMethodEvent(KMessageWidget* self, QInputMethodEvent* param1);
void KMessageWidget_OnInputMethodEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseInputMethodEvent(KMessageWidget* self, QInputMethodEvent* param1);
QVariant* KMessageWidget_InputMethodQuery(const KMessageWidget* self, int param1);
void KMessageWidget_OnInputMethodQuery(const KMessageWidget* self, intptr_t slot);
QVariant* KMessageWidget_QBaseInputMethodQuery(const KMessageWidget* self, int param1);
bool KMessageWidget_FocusNextPrevChild(KMessageWidget* self, bool next);
void KMessageWidget_OnFocusNextPrevChild(KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseFocusNextPrevChild(KMessageWidget* self, bool next);
bool KMessageWidget_EventFilter(KMessageWidget* self, QObject* watched, QEvent* event);
void KMessageWidget_OnEventFilter(KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseEventFilter(KMessageWidget* self, QObject* watched, QEvent* event);
void KMessageWidget_TimerEvent(KMessageWidget* self, QTimerEvent* event);
void KMessageWidget_OnTimerEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseTimerEvent(KMessageWidget* self, QTimerEvent* event);
void KMessageWidget_ChildEvent(KMessageWidget* self, QChildEvent* event);
void KMessageWidget_OnChildEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseChildEvent(KMessageWidget* self, QChildEvent* event);
void KMessageWidget_CustomEvent(KMessageWidget* self, QEvent* event);
void KMessageWidget_OnCustomEvent(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseCustomEvent(KMessageWidget* self, QEvent* event);
void KMessageWidget_ConnectNotify(KMessageWidget* self, const QMetaMethod* signal);
void KMessageWidget_OnConnectNotify(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseConnectNotify(KMessageWidget* self, const QMetaMethod* signal);
void KMessageWidget_DisconnectNotify(KMessageWidget* self, const QMetaMethod* signal);
void KMessageWidget_OnDisconnectNotify(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDisconnectNotify(KMessageWidget* self, const QMetaMethod* signal);
void KMessageWidget_DrawFrame(KMessageWidget* self, QPainter* param1);
void KMessageWidget_OnDrawFrame(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDrawFrame(KMessageWidget* self, QPainter* param1);
void KMessageWidget_UpdateMicroFocus(KMessageWidget* self);
void KMessageWidget_OnUpdateMicroFocus(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseUpdateMicroFocus(KMessageWidget* self);
void KMessageWidget_Create(KMessageWidget* self);
void KMessageWidget_OnCreate(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseCreate(KMessageWidget* self);
void KMessageWidget_Destroy(KMessageWidget* self);
void KMessageWidget_OnDestroy(KMessageWidget* self, intptr_t slot);
void KMessageWidget_QBaseDestroy(KMessageWidget* self);
bool KMessageWidget_FocusNextChild(KMessageWidget* self);
void KMessageWidget_OnFocusNextChild(KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseFocusNextChild(KMessageWidget* self);
bool KMessageWidget_FocusPreviousChild(KMessageWidget* self);
void KMessageWidget_OnFocusPreviousChild(KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseFocusPreviousChild(KMessageWidget* self);
QObject* KMessageWidget_Sender(const KMessageWidget* self);
void KMessageWidget_OnSender(const KMessageWidget* self, intptr_t slot);
QObject* KMessageWidget_QBaseSender(const KMessageWidget* self);
int KMessageWidget_SenderSignalIndex(const KMessageWidget* self);
void KMessageWidget_OnSenderSignalIndex(const KMessageWidget* self, intptr_t slot);
int KMessageWidget_QBaseSenderSignalIndex(const KMessageWidget* self);
int KMessageWidget_Receivers(const KMessageWidget* self, const char* signal);
void KMessageWidget_OnReceivers(const KMessageWidget* self, intptr_t slot);
int KMessageWidget_QBaseReceivers(const KMessageWidget* self, const char* signal);
bool KMessageWidget_IsSignalConnected(const KMessageWidget* self, const QMetaMethod* signal);
void KMessageWidget_OnIsSignalConnected(const KMessageWidget* self, intptr_t slot);
bool KMessageWidget_QBaseIsSignalConnected(const KMessageWidget* self, const QMetaMethod* signal);
double KMessageWidget_GetDecodedMetricF(const KMessageWidget* self, int metricA, int metricB);
void KMessageWidget_OnGetDecodedMetricF(const KMessageWidget* self, intptr_t slot);
double KMessageWidget_QBaseGetDecodedMetricF(const KMessageWidget* self, int metricA, int metricB);
void KMessageWidget_Delete(KMessageWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
