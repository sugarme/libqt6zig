#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKPASSWORDDIALOG_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKPASSWORDDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KPasswordDialog KPasswordDialog;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDialogButtonBox QDialogButtonBox;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KPasswordDialog* KPasswordDialog_new(QWidget* parent);
KPasswordDialog* KPasswordDialog_new2();
KPasswordDialog* KPasswordDialog_new3(QWidget* parent, const int* flags);
QMetaObject* KPasswordDialog_MetaObject(const KPasswordDialog* self);
void* KPasswordDialog_Metacast(KPasswordDialog* self, const char* param1);
int KPasswordDialog_Metacall(KPasswordDialog* self, int param1, int param2, void** param3);
libqt_string KPasswordDialog_Tr(const char* s);
void KPasswordDialog_SetPrompt(KPasswordDialog* self, const libqt_string prompt);
libqt_string KPasswordDialog_Prompt(const KPasswordDialog* self);
void KPasswordDialog_SetIcon(KPasswordDialog* self, const QIcon* icon);
QIcon* KPasswordDialog_Icon(const KPasswordDialog* self);
void KPasswordDialog_AddCommentLine(KPasswordDialog* self, const libqt_string label, const libqt_string comment);
void KPasswordDialog_ShowErrorMessage(KPasswordDialog* self, const libqt_string message);
libqt_string KPasswordDialog_Password(const KPasswordDialog* self);
void KPasswordDialog_SetUsername(KPasswordDialog* self, const libqt_string username);
libqt_string KPasswordDialog_Username(const KPasswordDialog* self);
void KPasswordDialog_SetDomain(KPasswordDialog* self, const libqt_string domain);
libqt_string KPasswordDialog_Domain(const KPasswordDialog* self);
void KPasswordDialog_SetAnonymousMode(KPasswordDialog* self, bool anonymous);
bool KPasswordDialog_AnonymousMode(const KPasswordDialog* self);
bool KPasswordDialog_KeepPassword(const KPasswordDialog* self);
void KPasswordDialog_SetKeepPassword(KPasswordDialog* self, bool b);
void KPasswordDialog_SetUsernameReadOnly(KPasswordDialog* self, bool readOnly);
void KPasswordDialog_SetPassword(KPasswordDialog* self, const libqt_string password);
void KPasswordDialog_SetKnownLogins(KPasswordDialog* self, const libqt_map /* of libqt_string to libqt_string */ knownLogins);
void KPasswordDialog_Accept(KPasswordDialog* self);
QDialogButtonBox* KPasswordDialog_ButtonBox(const KPasswordDialog* self);
void KPasswordDialog_SetUsernameContextHelp(KPasswordDialog* self, const libqt_string help);
void KPasswordDialog_SetRevealPasswordAvailable(KPasswordDialog* self, bool reveal);
bool KPasswordDialog_IsRevealPasswordAvailable(const KPasswordDialog* self);
int KPasswordDialog_RevealPasswordMode(const KPasswordDialog* self);
void KPasswordDialog_SetRevealPasswordMode(KPasswordDialog* self, int revealPasswordMode);
void KPasswordDialog_GotPassword(KPasswordDialog* self, const libqt_string password, bool keep);
void KPasswordDialog_Connect_GotPassword(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_GotUsernameAndPassword(KPasswordDialog* self, const libqt_string username, const libqt_string password, bool keep);
void KPasswordDialog_Connect_GotUsernameAndPassword(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_CheckPassword(KPasswordDialog* self);
libqt_string KPasswordDialog_Tr2(const char* s, const char* c);
libqt_string KPasswordDialog_Tr3(const char* s, const char* c, int n);
void KPasswordDialog_ShowErrorMessage2(KPasswordDialog* self, const libqt_string message, const int typeVal);
void KPasswordDialog_OnMetacall(KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseMetacall(KPasswordDialog* self, int param1, int param2, void** param3);
void KPasswordDialog_OnAccept(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseAccept(KPasswordDialog* self);
void KPasswordDialog_OnCheckPassword(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseCheckPassword(KPasswordDialog* self);
void KPasswordDialog_SetVisible(KPasswordDialog* self, bool visible);
void KPasswordDialog_OnSetVisible(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseSetVisible(KPasswordDialog* self, bool visible);
QSize* KPasswordDialog_SizeHint(const KPasswordDialog* self);
void KPasswordDialog_OnSizeHint(const KPasswordDialog* self, intptr_t slot);
QSize* KPasswordDialog_QBaseSizeHint(const KPasswordDialog* self);
QSize* KPasswordDialog_MinimumSizeHint(const KPasswordDialog* self);
void KPasswordDialog_OnMinimumSizeHint(const KPasswordDialog* self, intptr_t slot);
QSize* KPasswordDialog_QBaseMinimumSizeHint(const KPasswordDialog* self);
void KPasswordDialog_Open(KPasswordDialog* self);
void KPasswordDialog_OnOpen(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseOpen(KPasswordDialog* self);
int KPasswordDialog_Exec(KPasswordDialog* self);
void KPasswordDialog_OnExec(KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseExec(KPasswordDialog* self);
void KPasswordDialog_Done(KPasswordDialog* self, int param1);
void KPasswordDialog_OnDone(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDone(KPasswordDialog* self, int param1);
void KPasswordDialog_Reject(KPasswordDialog* self);
void KPasswordDialog_OnReject(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseReject(KPasswordDialog* self);
void KPasswordDialog_KeyPressEvent(KPasswordDialog* self, QKeyEvent* param1);
void KPasswordDialog_OnKeyPressEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseKeyPressEvent(KPasswordDialog* self, QKeyEvent* param1);
void KPasswordDialog_CloseEvent(KPasswordDialog* self, QCloseEvent* param1);
void KPasswordDialog_OnCloseEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseCloseEvent(KPasswordDialog* self, QCloseEvent* param1);
void KPasswordDialog_ShowEvent(KPasswordDialog* self, QShowEvent* param1);
void KPasswordDialog_OnShowEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseShowEvent(KPasswordDialog* self, QShowEvent* param1);
void KPasswordDialog_ResizeEvent(KPasswordDialog* self, QResizeEvent* param1);
void KPasswordDialog_OnResizeEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseResizeEvent(KPasswordDialog* self, QResizeEvent* param1);
void KPasswordDialog_ContextMenuEvent(KPasswordDialog* self, QContextMenuEvent* param1);
void KPasswordDialog_OnContextMenuEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseContextMenuEvent(KPasswordDialog* self, QContextMenuEvent* param1);
bool KPasswordDialog_EventFilter(KPasswordDialog* self, QObject* param1, QEvent* param2);
void KPasswordDialog_OnEventFilter(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseEventFilter(KPasswordDialog* self, QObject* param1, QEvent* param2);
int KPasswordDialog_DevType(const KPasswordDialog* self);
void KPasswordDialog_OnDevType(const KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseDevType(const KPasswordDialog* self);
int KPasswordDialog_HeightForWidth(const KPasswordDialog* self, int param1);
void KPasswordDialog_OnHeightForWidth(const KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseHeightForWidth(const KPasswordDialog* self, int param1);
bool KPasswordDialog_HasHeightForWidth(const KPasswordDialog* self);
void KPasswordDialog_OnHasHeightForWidth(const KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseHasHeightForWidth(const KPasswordDialog* self);
QPaintEngine* KPasswordDialog_PaintEngine(const KPasswordDialog* self);
void KPasswordDialog_OnPaintEngine(const KPasswordDialog* self, intptr_t slot);
QPaintEngine* KPasswordDialog_QBasePaintEngine(const KPasswordDialog* self);
bool KPasswordDialog_Event(KPasswordDialog* self, QEvent* event);
void KPasswordDialog_OnEvent(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseEvent(KPasswordDialog* self, QEvent* event);
void KPasswordDialog_MousePressEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_OnMousePressEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseMousePressEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_MouseReleaseEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_OnMouseReleaseEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseMouseReleaseEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_MouseDoubleClickEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_OnMouseDoubleClickEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseMouseDoubleClickEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_MouseMoveEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_OnMouseMoveEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseMouseMoveEvent(KPasswordDialog* self, QMouseEvent* event);
void KPasswordDialog_WheelEvent(KPasswordDialog* self, QWheelEvent* event);
void KPasswordDialog_OnWheelEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseWheelEvent(KPasswordDialog* self, QWheelEvent* event);
void KPasswordDialog_KeyReleaseEvent(KPasswordDialog* self, QKeyEvent* event);
void KPasswordDialog_OnKeyReleaseEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseKeyReleaseEvent(KPasswordDialog* self, QKeyEvent* event);
void KPasswordDialog_FocusInEvent(KPasswordDialog* self, QFocusEvent* event);
void KPasswordDialog_OnFocusInEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseFocusInEvent(KPasswordDialog* self, QFocusEvent* event);
void KPasswordDialog_FocusOutEvent(KPasswordDialog* self, QFocusEvent* event);
void KPasswordDialog_OnFocusOutEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseFocusOutEvent(KPasswordDialog* self, QFocusEvent* event);
void KPasswordDialog_EnterEvent(KPasswordDialog* self, QEnterEvent* event);
void KPasswordDialog_OnEnterEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseEnterEvent(KPasswordDialog* self, QEnterEvent* event);
void KPasswordDialog_LeaveEvent(KPasswordDialog* self, QEvent* event);
void KPasswordDialog_OnLeaveEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseLeaveEvent(KPasswordDialog* self, QEvent* event);
void KPasswordDialog_PaintEvent(KPasswordDialog* self, QPaintEvent* event);
void KPasswordDialog_OnPaintEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBasePaintEvent(KPasswordDialog* self, QPaintEvent* event);
void KPasswordDialog_MoveEvent(KPasswordDialog* self, QMoveEvent* event);
void KPasswordDialog_OnMoveEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseMoveEvent(KPasswordDialog* self, QMoveEvent* event);
void KPasswordDialog_TabletEvent(KPasswordDialog* self, QTabletEvent* event);
void KPasswordDialog_OnTabletEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseTabletEvent(KPasswordDialog* self, QTabletEvent* event);
void KPasswordDialog_ActionEvent(KPasswordDialog* self, QActionEvent* event);
void KPasswordDialog_OnActionEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseActionEvent(KPasswordDialog* self, QActionEvent* event);
void KPasswordDialog_DragEnterEvent(KPasswordDialog* self, QDragEnterEvent* event);
void KPasswordDialog_OnDragEnterEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDragEnterEvent(KPasswordDialog* self, QDragEnterEvent* event);
void KPasswordDialog_DragMoveEvent(KPasswordDialog* self, QDragMoveEvent* event);
void KPasswordDialog_OnDragMoveEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDragMoveEvent(KPasswordDialog* self, QDragMoveEvent* event);
void KPasswordDialog_DragLeaveEvent(KPasswordDialog* self, QDragLeaveEvent* event);
void KPasswordDialog_OnDragLeaveEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDragLeaveEvent(KPasswordDialog* self, QDragLeaveEvent* event);
void KPasswordDialog_DropEvent(KPasswordDialog* self, QDropEvent* event);
void KPasswordDialog_OnDropEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDropEvent(KPasswordDialog* self, QDropEvent* event);
void KPasswordDialog_HideEvent(KPasswordDialog* self, QHideEvent* event);
void KPasswordDialog_OnHideEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseHideEvent(KPasswordDialog* self, QHideEvent* event);
bool KPasswordDialog_NativeEvent(KPasswordDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KPasswordDialog_OnNativeEvent(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseNativeEvent(KPasswordDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KPasswordDialog_ChangeEvent(KPasswordDialog* self, QEvent* param1);
void KPasswordDialog_OnChangeEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseChangeEvent(KPasswordDialog* self, QEvent* param1);
int KPasswordDialog_Metric(const KPasswordDialog* self, int param1);
void KPasswordDialog_OnMetric(const KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseMetric(const KPasswordDialog* self, int param1);
void KPasswordDialog_InitPainter(const KPasswordDialog* self, QPainter* painter);
void KPasswordDialog_OnInitPainter(const KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseInitPainter(const KPasswordDialog* self, QPainter* painter);
QPaintDevice* KPasswordDialog_Redirected(const KPasswordDialog* self, QPoint* offset);
void KPasswordDialog_OnRedirected(const KPasswordDialog* self, intptr_t slot);
QPaintDevice* KPasswordDialog_QBaseRedirected(const KPasswordDialog* self, QPoint* offset);
QPainter* KPasswordDialog_SharedPainter(const KPasswordDialog* self);
void KPasswordDialog_OnSharedPainter(const KPasswordDialog* self, intptr_t slot);
QPainter* KPasswordDialog_QBaseSharedPainter(const KPasswordDialog* self);
void KPasswordDialog_InputMethodEvent(KPasswordDialog* self, QInputMethodEvent* param1);
void KPasswordDialog_OnInputMethodEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseInputMethodEvent(KPasswordDialog* self, QInputMethodEvent* param1);
QVariant* KPasswordDialog_InputMethodQuery(const KPasswordDialog* self, int param1);
void KPasswordDialog_OnInputMethodQuery(const KPasswordDialog* self, intptr_t slot);
QVariant* KPasswordDialog_QBaseInputMethodQuery(const KPasswordDialog* self, int param1);
bool KPasswordDialog_FocusNextPrevChild(KPasswordDialog* self, bool next);
void KPasswordDialog_OnFocusNextPrevChild(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseFocusNextPrevChild(KPasswordDialog* self, bool next);
void KPasswordDialog_TimerEvent(KPasswordDialog* self, QTimerEvent* event);
void KPasswordDialog_OnTimerEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseTimerEvent(KPasswordDialog* self, QTimerEvent* event);
void KPasswordDialog_ChildEvent(KPasswordDialog* self, QChildEvent* event);
void KPasswordDialog_OnChildEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseChildEvent(KPasswordDialog* self, QChildEvent* event);
void KPasswordDialog_CustomEvent(KPasswordDialog* self, QEvent* event);
void KPasswordDialog_OnCustomEvent(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseCustomEvent(KPasswordDialog* self, QEvent* event);
void KPasswordDialog_ConnectNotify(KPasswordDialog* self, const QMetaMethod* signal);
void KPasswordDialog_OnConnectNotify(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseConnectNotify(KPasswordDialog* self, const QMetaMethod* signal);
void KPasswordDialog_DisconnectNotify(KPasswordDialog* self, const QMetaMethod* signal);
void KPasswordDialog_OnDisconnectNotify(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDisconnectNotify(KPasswordDialog* self, const QMetaMethod* signal);
void KPasswordDialog_AdjustPosition(KPasswordDialog* self, QWidget* param1);
void KPasswordDialog_OnAdjustPosition(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseAdjustPosition(KPasswordDialog* self, QWidget* param1);
void KPasswordDialog_UpdateMicroFocus(KPasswordDialog* self);
void KPasswordDialog_OnUpdateMicroFocus(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseUpdateMicroFocus(KPasswordDialog* self);
void KPasswordDialog_Create(KPasswordDialog* self);
void KPasswordDialog_OnCreate(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseCreate(KPasswordDialog* self);
void KPasswordDialog_Destroy(KPasswordDialog* self);
void KPasswordDialog_OnDestroy(KPasswordDialog* self, intptr_t slot);
void KPasswordDialog_QBaseDestroy(KPasswordDialog* self);
bool KPasswordDialog_FocusNextChild(KPasswordDialog* self);
void KPasswordDialog_OnFocusNextChild(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseFocusNextChild(KPasswordDialog* self);
bool KPasswordDialog_FocusPreviousChild(KPasswordDialog* self);
void KPasswordDialog_OnFocusPreviousChild(KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseFocusPreviousChild(KPasswordDialog* self);
QObject* KPasswordDialog_Sender(const KPasswordDialog* self);
void KPasswordDialog_OnSender(const KPasswordDialog* self, intptr_t slot);
QObject* KPasswordDialog_QBaseSender(const KPasswordDialog* self);
int KPasswordDialog_SenderSignalIndex(const KPasswordDialog* self);
void KPasswordDialog_OnSenderSignalIndex(const KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseSenderSignalIndex(const KPasswordDialog* self);
int KPasswordDialog_Receivers(const KPasswordDialog* self, const char* signal);
void KPasswordDialog_OnReceivers(const KPasswordDialog* self, intptr_t slot);
int KPasswordDialog_QBaseReceivers(const KPasswordDialog* self, const char* signal);
bool KPasswordDialog_IsSignalConnected(const KPasswordDialog* self, const QMetaMethod* signal);
void KPasswordDialog_OnIsSignalConnected(const KPasswordDialog* self, intptr_t slot);
bool KPasswordDialog_QBaseIsSignalConnected(const KPasswordDialog* self, const QMetaMethod* signal);
double KPasswordDialog_GetDecodedMetricF(const KPasswordDialog* self, int metricA, int metricB);
void KPasswordDialog_OnGetDecodedMetricF(const KPasswordDialog* self, intptr_t slot);
double KPasswordDialog_QBaseGetDecodedMetricF(const KPasswordDialog* self, int metricA, int metricB);
void KPasswordDialog_Delete(KPasswordDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
