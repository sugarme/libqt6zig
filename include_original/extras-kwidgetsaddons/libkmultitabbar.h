#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKMULTITABBAR_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKMULTITABBAR_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KMultiTabBar KMultiTabBar;
typedef struct KMultiTabBarButton KMultiTabBarButton;
typedef struct KMultiTabBarTab KMultiTabBarTab;
typedef struct QAbstractButton QAbstractButton;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QPushButton QPushButton;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KMultiTabBar* KMultiTabBar_new(QWidget* parent);
KMultiTabBar* KMultiTabBar_new2();
KMultiTabBar* KMultiTabBar_new3(int pos);
KMultiTabBar* KMultiTabBar_new4(int pos, QWidget* parent);
QMetaObject* KMultiTabBar_MetaObject(const KMultiTabBar* self);
void* KMultiTabBar_Metacast(KMultiTabBar* self, const char* param1);
int KMultiTabBar_Metacall(KMultiTabBar* self, int param1, int param2, void** param3);
libqt_string KMultiTabBar_Tr(const char* s);
int KMultiTabBar_AppendButton(KMultiTabBar* self, const QIcon* icon);
void KMultiTabBar_RemoveButton(KMultiTabBar* self, int id);
int KMultiTabBar_AppendTab(KMultiTabBar* self, const QIcon* icon);
void KMultiTabBar_RemoveTab(KMultiTabBar* self, int id);
void KMultiTabBar_SetTab(KMultiTabBar* self, int id, bool state);
bool KMultiTabBar_IsTabRaised(const KMultiTabBar* self, int id);
KMultiTabBarButton* KMultiTabBar_Button(const KMultiTabBar* self, int id);
KMultiTabBarTab* KMultiTabBar_Tab(const KMultiTabBar* self, int id);
void KMultiTabBar_SetPosition(KMultiTabBar* self, int pos);
int KMultiTabBar_Position(const KMultiTabBar* self);
void KMultiTabBar_SetStyle(KMultiTabBar* self, int style);
int KMultiTabBar_TabStyle(const KMultiTabBar* self);
void KMultiTabBar_FontChange(KMultiTabBar* self, const QFont* param1);
void KMultiTabBar_PaintEvent(KMultiTabBar* self, QPaintEvent* param1);
libqt_string KMultiTabBar_Tr2(const char* s, const char* c);
libqt_string KMultiTabBar_Tr3(const char* s, const char* c, int n);
int KMultiTabBar_AppendButton2(KMultiTabBar* self, const QIcon* icon, int id);
int KMultiTabBar_AppendButton3(KMultiTabBar* self, const QIcon* icon, int id, QMenu* popup);
int KMultiTabBar_AppendButton4(KMultiTabBar* self, const QIcon* icon, int id, QMenu* popup, const libqt_string not_used_yet);
int KMultiTabBar_AppendTab2(KMultiTabBar* self, const QIcon* icon, int id);
int KMultiTabBar_AppendTab3(KMultiTabBar* self, const QIcon* icon, int id, const libqt_string text);
void KMultiTabBar_OnMetacall(KMultiTabBar* self, intptr_t slot);
int KMultiTabBar_QBaseMetacall(KMultiTabBar* self, int param1, int param2, void** param3);
void KMultiTabBar_OnFontChange(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseFontChange(KMultiTabBar* self, const QFont* param1);
void KMultiTabBar_OnPaintEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBasePaintEvent(KMultiTabBar* self, QPaintEvent* param1);
int KMultiTabBar_DevType(const KMultiTabBar* self);
void KMultiTabBar_OnDevType(const KMultiTabBar* self, intptr_t slot);
int KMultiTabBar_QBaseDevType(const KMultiTabBar* self);
void KMultiTabBar_SetVisible(KMultiTabBar* self, bool visible);
void KMultiTabBar_OnSetVisible(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseSetVisible(KMultiTabBar* self, bool visible);
QSize* KMultiTabBar_SizeHint(const KMultiTabBar* self);
void KMultiTabBar_OnSizeHint(const KMultiTabBar* self, intptr_t slot);
QSize* KMultiTabBar_QBaseSizeHint(const KMultiTabBar* self);
QSize* KMultiTabBar_MinimumSizeHint(const KMultiTabBar* self);
void KMultiTabBar_OnMinimumSizeHint(const KMultiTabBar* self, intptr_t slot);
QSize* KMultiTabBar_QBaseMinimumSizeHint(const KMultiTabBar* self);
int KMultiTabBar_HeightForWidth(const KMultiTabBar* self, int param1);
void KMultiTabBar_OnHeightForWidth(const KMultiTabBar* self, intptr_t slot);
int KMultiTabBar_QBaseHeightForWidth(const KMultiTabBar* self, int param1);
bool KMultiTabBar_HasHeightForWidth(const KMultiTabBar* self);
void KMultiTabBar_OnHasHeightForWidth(const KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseHasHeightForWidth(const KMultiTabBar* self);
QPaintEngine* KMultiTabBar_PaintEngine(const KMultiTabBar* self);
void KMultiTabBar_OnPaintEngine(const KMultiTabBar* self, intptr_t slot);
QPaintEngine* KMultiTabBar_QBasePaintEngine(const KMultiTabBar* self);
bool KMultiTabBar_Event(KMultiTabBar* self, QEvent* event);
void KMultiTabBar_OnEvent(KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseEvent(KMultiTabBar* self, QEvent* event);
void KMultiTabBar_MousePressEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_OnMousePressEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseMousePressEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_MouseReleaseEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_OnMouseReleaseEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseMouseReleaseEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_MouseDoubleClickEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_OnMouseDoubleClickEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseMouseDoubleClickEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_MouseMoveEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_OnMouseMoveEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseMouseMoveEvent(KMultiTabBar* self, QMouseEvent* event);
void KMultiTabBar_WheelEvent(KMultiTabBar* self, QWheelEvent* event);
void KMultiTabBar_OnWheelEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseWheelEvent(KMultiTabBar* self, QWheelEvent* event);
void KMultiTabBar_KeyPressEvent(KMultiTabBar* self, QKeyEvent* event);
void KMultiTabBar_OnKeyPressEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseKeyPressEvent(KMultiTabBar* self, QKeyEvent* event);
void KMultiTabBar_KeyReleaseEvent(KMultiTabBar* self, QKeyEvent* event);
void KMultiTabBar_OnKeyReleaseEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseKeyReleaseEvent(KMultiTabBar* self, QKeyEvent* event);
void KMultiTabBar_FocusInEvent(KMultiTabBar* self, QFocusEvent* event);
void KMultiTabBar_OnFocusInEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseFocusInEvent(KMultiTabBar* self, QFocusEvent* event);
void KMultiTabBar_FocusOutEvent(KMultiTabBar* self, QFocusEvent* event);
void KMultiTabBar_OnFocusOutEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseFocusOutEvent(KMultiTabBar* self, QFocusEvent* event);
void KMultiTabBar_EnterEvent(KMultiTabBar* self, QEnterEvent* event);
void KMultiTabBar_OnEnterEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseEnterEvent(KMultiTabBar* self, QEnterEvent* event);
void KMultiTabBar_LeaveEvent(KMultiTabBar* self, QEvent* event);
void KMultiTabBar_OnLeaveEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseLeaveEvent(KMultiTabBar* self, QEvent* event);
void KMultiTabBar_MoveEvent(KMultiTabBar* self, QMoveEvent* event);
void KMultiTabBar_OnMoveEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseMoveEvent(KMultiTabBar* self, QMoveEvent* event);
void KMultiTabBar_ResizeEvent(KMultiTabBar* self, QResizeEvent* event);
void KMultiTabBar_OnResizeEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseResizeEvent(KMultiTabBar* self, QResizeEvent* event);
void KMultiTabBar_CloseEvent(KMultiTabBar* self, QCloseEvent* event);
void KMultiTabBar_OnCloseEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseCloseEvent(KMultiTabBar* self, QCloseEvent* event);
void KMultiTabBar_ContextMenuEvent(KMultiTabBar* self, QContextMenuEvent* event);
void KMultiTabBar_OnContextMenuEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseContextMenuEvent(KMultiTabBar* self, QContextMenuEvent* event);
void KMultiTabBar_TabletEvent(KMultiTabBar* self, QTabletEvent* event);
void KMultiTabBar_OnTabletEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseTabletEvent(KMultiTabBar* self, QTabletEvent* event);
void KMultiTabBar_ActionEvent(KMultiTabBar* self, QActionEvent* event);
void KMultiTabBar_OnActionEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseActionEvent(KMultiTabBar* self, QActionEvent* event);
void KMultiTabBar_DragEnterEvent(KMultiTabBar* self, QDragEnterEvent* event);
void KMultiTabBar_OnDragEnterEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseDragEnterEvent(KMultiTabBar* self, QDragEnterEvent* event);
void KMultiTabBar_DragMoveEvent(KMultiTabBar* self, QDragMoveEvent* event);
void KMultiTabBar_OnDragMoveEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseDragMoveEvent(KMultiTabBar* self, QDragMoveEvent* event);
void KMultiTabBar_DragLeaveEvent(KMultiTabBar* self, QDragLeaveEvent* event);
void KMultiTabBar_OnDragLeaveEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseDragLeaveEvent(KMultiTabBar* self, QDragLeaveEvent* event);
void KMultiTabBar_DropEvent(KMultiTabBar* self, QDropEvent* event);
void KMultiTabBar_OnDropEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseDropEvent(KMultiTabBar* self, QDropEvent* event);
void KMultiTabBar_ShowEvent(KMultiTabBar* self, QShowEvent* event);
void KMultiTabBar_OnShowEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseShowEvent(KMultiTabBar* self, QShowEvent* event);
void KMultiTabBar_HideEvent(KMultiTabBar* self, QHideEvent* event);
void KMultiTabBar_OnHideEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseHideEvent(KMultiTabBar* self, QHideEvent* event);
bool KMultiTabBar_NativeEvent(KMultiTabBar* self, const libqt_string eventType, void* message, intptr_t* result);
void KMultiTabBar_OnNativeEvent(KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseNativeEvent(KMultiTabBar* self, const libqt_string eventType, void* message, intptr_t* result);
void KMultiTabBar_ChangeEvent(KMultiTabBar* self, QEvent* param1);
void KMultiTabBar_OnChangeEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseChangeEvent(KMultiTabBar* self, QEvent* param1);
int KMultiTabBar_Metric(const KMultiTabBar* self, int param1);
void KMultiTabBar_OnMetric(const KMultiTabBar* self, intptr_t slot);
int KMultiTabBar_QBaseMetric(const KMultiTabBar* self, int param1);
void KMultiTabBar_InitPainter(const KMultiTabBar* self, QPainter* painter);
void KMultiTabBar_OnInitPainter(const KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseInitPainter(const KMultiTabBar* self, QPainter* painter);
QPaintDevice* KMultiTabBar_Redirected(const KMultiTabBar* self, QPoint* offset);
void KMultiTabBar_OnRedirected(const KMultiTabBar* self, intptr_t slot);
QPaintDevice* KMultiTabBar_QBaseRedirected(const KMultiTabBar* self, QPoint* offset);
QPainter* KMultiTabBar_SharedPainter(const KMultiTabBar* self);
void KMultiTabBar_OnSharedPainter(const KMultiTabBar* self, intptr_t slot);
QPainter* KMultiTabBar_QBaseSharedPainter(const KMultiTabBar* self);
void KMultiTabBar_InputMethodEvent(KMultiTabBar* self, QInputMethodEvent* param1);
void KMultiTabBar_OnInputMethodEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseInputMethodEvent(KMultiTabBar* self, QInputMethodEvent* param1);
QVariant* KMultiTabBar_InputMethodQuery(const KMultiTabBar* self, int param1);
void KMultiTabBar_OnInputMethodQuery(const KMultiTabBar* self, intptr_t slot);
QVariant* KMultiTabBar_QBaseInputMethodQuery(const KMultiTabBar* self, int param1);
bool KMultiTabBar_FocusNextPrevChild(KMultiTabBar* self, bool next);
void KMultiTabBar_OnFocusNextPrevChild(KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseFocusNextPrevChild(KMultiTabBar* self, bool next);
bool KMultiTabBar_EventFilter(KMultiTabBar* self, QObject* watched, QEvent* event);
void KMultiTabBar_OnEventFilter(KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseEventFilter(KMultiTabBar* self, QObject* watched, QEvent* event);
void KMultiTabBar_TimerEvent(KMultiTabBar* self, QTimerEvent* event);
void KMultiTabBar_OnTimerEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseTimerEvent(KMultiTabBar* self, QTimerEvent* event);
void KMultiTabBar_ChildEvent(KMultiTabBar* self, QChildEvent* event);
void KMultiTabBar_OnChildEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseChildEvent(KMultiTabBar* self, QChildEvent* event);
void KMultiTabBar_CustomEvent(KMultiTabBar* self, QEvent* event);
void KMultiTabBar_OnCustomEvent(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseCustomEvent(KMultiTabBar* self, QEvent* event);
void KMultiTabBar_ConnectNotify(KMultiTabBar* self, const QMetaMethod* signal);
void KMultiTabBar_OnConnectNotify(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseConnectNotify(KMultiTabBar* self, const QMetaMethod* signal);
void KMultiTabBar_DisconnectNotify(KMultiTabBar* self, const QMetaMethod* signal);
void KMultiTabBar_OnDisconnectNotify(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseDisconnectNotify(KMultiTabBar* self, const QMetaMethod* signal);
void KMultiTabBar_UpdateSeparator(KMultiTabBar* self);
void KMultiTabBar_OnUpdateSeparator(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseUpdateSeparator(KMultiTabBar* self);
void KMultiTabBar_UpdateMicroFocus(KMultiTabBar* self);
void KMultiTabBar_OnUpdateMicroFocus(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseUpdateMicroFocus(KMultiTabBar* self);
void KMultiTabBar_Create(KMultiTabBar* self);
void KMultiTabBar_OnCreate(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseCreate(KMultiTabBar* self);
void KMultiTabBar_Destroy(KMultiTabBar* self);
void KMultiTabBar_OnDestroy(KMultiTabBar* self, intptr_t slot);
void KMultiTabBar_QBaseDestroy(KMultiTabBar* self);
bool KMultiTabBar_FocusNextChild(KMultiTabBar* self);
void KMultiTabBar_OnFocusNextChild(KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseFocusNextChild(KMultiTabBar* self);
bool KMultiTabBar_FocusPreviousChild(KMultiTabBar* self);
void KMultiTabBar_OnFocusPreviousChild(KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseFocusPreviousChild(KMultiTabBar* self);
QObject* KMultiTabBar_Sender(const KMultiTabBar* self);
void KMultiTabBar_OnSender(const KMultiTabBar* self, intptr_t slot);
QObject* KMultiTabBar_QBaseSender(const KMultiTabBar* self);
int KMultiTabBar_SenderSignalIndex(const KMultiTabBar* self);
void KMultiTabBar_OnSenderSignalIndex(const KMultiTabBar* self, intptr_t slot);
int KMultiTabBar_QBaseSenderSignalIndex(const KMultiTabBar* self);
int KMultiTabBar_Receivers(const KMultiTabBar* self, const char* signal);
void KMultiTabBar_OnReceivers(const KMultiTabBar* self, intptr_t slot);
int KMultiTabBar_QBaseReceivers(const KMultiTabBar* self, const char* signal);
bool KMultiTabBar_IsSignalConnected(const KMultiTabBar* self, const QMetaMethod* signal);
void KMultiTabBar_OnIsSignalConnected(const KMultiTabBar* self, intptr_t slot);
bool KMultiTabBar_QBaseIsSignalConnected(const KMultiTabBar* self, const QMetaMethod* signal);
double KMultiTabBar_GetDecodedMetricF(const KMultiTabBar* self, int metricA, int metricB);
void KMultiTabBar_OnGetDecodedMetricF(const KMultiTabBar* self, intptr_t slot);
double KMultiTabBar_QBaseGetDecodedMetricF(const KMultiTabBar* self, int metricA, int metricB);
void KMultiTabBar_Delete(KMultiTabBar* self);

QMetaObject* KMultiTabBarButton_MetaObject(const KMultiTabBarButton* self);
void* KMultiTabBarButton_Metacast(KMultiTabBarButton* self, const char* param1);
int KMultiTabBarButton_Metacall(KMultiTabBarButton* self, int param1, int param2, void** param3);
libqt_string KMultiTabBarButton_Tr(const char* s);
int KMultiTabBarButton_Id(const KMultiTabBarButton* self);
void KMultiTabBarButton_SetText(KMultiTabBarButton* self, const libqt_string text);
void KMultiTabBarButton_Clicked(KMultiTabBarButton* self, int id);
void KMultiTabBarButton_Connect_Clicked(KMultiTabBarButton* self, intptr_t slot);
libqt_string KMultiTabBarButton_Tr2(const char* s, const char* c);
libqt_string KMultiTabBarButton_Tr3(const char* s, const char* c, int n);
void KMultiTabBarButton_Delete(KMultiTabBarButton* self);

QMetaObject* KMultiTabBarTab_MetaObject(const KMultiTabBarTab* self);
void* KMultiTabBarTab_Metacast(KMultiTabBarTab* self, const char* param1);
int KMultiTabBarTab_Metacall(KMultiTabBarTab* self, int param1, int param2, void** param3);
libqt_string KMultiTabBarTab_Tr(const char* s);
QSize* KMultiTabBarTab_SizeHint(const KMultiTabBarTab* self);
QSize* KMultiTabBarTab_MinimumSizeHint(const KMultiTabBarTab* self);
void KMultiTabBarTab_SetPosition(KMultiTabBarTab* self, int position);
void KMultiTabBarTab_SetStyle(KMultiTabBarTab* self, int style);
void KMultiTabBarTab_SetState(KMultiTabBarTab* self, bool state);
libqt_string KMultiTabBarTab_Tr2(const char* s, const char* c);
libqt_string KMultiTabBarTab_Tr3(const char* s, const char* c, int n);
void KMultiTabBarTab_Delete(KMultiTabBarTab* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
