#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKRULER_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKRULER_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KRuler KRuler;
typedef struct QAbstractSlider QAbstractSlider;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KRuler* KRuler_new(QWidget* parent);
KRuler* KRuler_new2();
KRuler* KRuler_new3(int orient);
KRuler* KRuler_new4(int orient, int widgetWidth);
KRuler* KRuler_new5(int orient, QWidget* parent);
KRuler* KRuler_new6(int orient, QWidget* parent, int f);
KRuler* KRuler_new7(int orient, int widgetWidth, QWidget* parent);
KRuler* KRuler_new8(int orient, int widgetWidth, QWidget* parent, int f);
QMetaObject* KRuler_MetaObject(const KRuler* self);
void* KRuler_Metacast(KRuler* self, const char* param1);
int KRuler_Metacall(KRuler* self, int param1, int param2, void** param3);
libqt_string KRuler_Tr(const char* s);
void KRuler_SetTinyMarkDistance(KRuler* self, int tinyMarkDistance);
int KRuler_TinyMarkDistance(const KRuler* self);
void KRuler_SetLittleMarkDistance(KRuler* self, int littleMarkDistance);
int KRuler_LittleMarkDistance(const KRuler* self);
void KRuler_SetMediumMarkDistance(KRuler* self, int mediumMarkDistance);
int KRuler_MediumMarkDistance(const KRuler* self);
void KRuler_SetBigMarkDistance(KRuler* self, int bigMarkDistance);
int KRuler_BigMarkDistance(const KRuler* self);
void KRuler_SetShowTinyMarks(KRuler* self, bool showTinyMarks);
bool KRuler_ShowTinyMarks(const KRuler* self);
void KRuler_SetShowLittleMarks(KRuler* self, bool showLittleMarks);
bool KRuler_ShowLittleMarks(const KRuler* self);
void KRuler_SetShowMediumMarks(KRuler* self, bool showMediumMarks);
bool KRuler_ShowMediumMarks(const KRuler* self);
void KRuler_SetShowBigMarks(KRuler* self, bool showBigMarks);
bool KRuler_ShowBigMarks(const KRuler* self);
void KRuler_SetShowEndMarks(KRuler* self, bool showEndMarks);
bool KRuler_ShowEndMarks(const KRuler* self);
void KRuler_SetShowPointer(KRuler* self, bool showPointer);
bool KRuler_ShowPointer(const KRuler* self);
void KRuler_SetShowEndLabel(KRuler* self, bool showEndLabel);
bool KRuler_ShowEndLabel(const KRuler* self);
void KRuler_SetEndLabel(KRuler* self, const libqt_string endLabel);
libqt_string KRuler_EndLabel(const KRuler* self);
void KRuler_SetRulerMetricStyle(KRuler* self, int rulerMetricStyle);
void KRuler_SetPixelPerMark(KRuler* self, double rate);
double KRuler_PixelPerMark(const KRuler* self);
void KRuler_SetLength(KRuler* self, int length);
int KRuler_Length(const KRuler* self);
void KRuler_SetLengthFixed(KRuler* self, bool fix);
bool KRuler_LengthFixed(const KRuler* self);
void KRuler_SlideUp(KRuler* self);
void KRuler_SlideDown(KRuler* self);
void KRuler_SetOffset(KRuler* self, int offset);
int KRuler_Offset(const KRuler* self);
int KRuler_EndOffset(const KRuler* self);
void KRuler_SlotNewValue(KRuler* self, int param1);
void KRuler_SlotNewOffset(KRuler* self, int param1);
void KRuler_SlotEndOffset(KRuler* self, int param1);
void KRuler_PaintEvent(KRuler* self, QPaintEvent* param1);
libqt_string KRuler_Tr2(const char* s, const char* c);
libqt_string KRuler_Tr3(const char* s, const char* c, int n);
void KRuler_SlideUp1(KRuler* self, int count);
void KRuler_SlideDown1(KRuler* self, int count);
void KRuler_OnMetacall(KRuler* self, intptr_t slot);
int KRuler_QBaseMetacall(KRuler* self, int param1, int param2, void** param3);
void KRuler_OnPaintEvent(KRuler* self, intptr_t slot);
void KRuler_QBasePaintEvent(KRuler* self, QPaintEvent* param1);
bool KRuler_Event(KRuler* self, QEvent* e);
void KRuler_OnEvent(KRuler* self, intptr_t slot);
bool KRuler_QBaseEvent(KRuler* self, QEvent* e);
void KRuler_SliderChange(KRuler* self, int change);
void KRuler_OnSliderChange(KRuler* self, intptr_t slot);
void KRuler_QBaseSliderChange(KRuler* self, int change);
void KRuler_KeyPressEvent(KRuler* self, QKeyEvent* ev);
void KRuler_OnKeyPressEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseKeyPressEvent(KRuler* self, QKeyEvent* ev);
void KRuler_TimerEvent(KRuler* self, QTimerEvent* param1);
void KRuler_OnTimerEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseTimerEvent(KRuler* self, QTimerEvent* param1);
void KRuler_WheelEvent(KRuler* self, QWheelEvent* e);
void KRuler_OnWheelEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseWheelEvent(KRuler* self, QWheelEvent* e);
void KRuler_ChangeEvent(KRuler* self, QEvent* e);
void KRuler_OnChangeEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseChangeEvent(KRuler* self, QEvent* e);
int KRuler_DevType(const KRuler* self);
void KRuler_OnDevType(const KRuler* self, intptr_t slot);
int KRuler_QBaseDevType(const KRuler* self);
void KRuler_SetVisible(KRuler* self, bool visible);
void KRuler_OnSetVisible(KRuler* self, intptr_t slot);
void KRuler_QBaseSetVisible(KRuler* self, bool visible);
QSize* KRuler_SizeHint(const KRuler* self);
void KRuler_OnSizeHint(const KRuler* self, intptr_t slot);
QSize* KRuler_QBaseSizeHint(const KRuler* self);
QSize* KRuler_MinimumSizeHint(const KRuler* self);
void KRuler_OnMinimumSizeHint(const KRuler* self, intptr_t slot);
QSize* KRuler_QBaseMinimumSizeHint(const KRuler* self);
int KRuler_HeightForWidth(const KRuler* self, int param1);
void KRuler_OnHeightForWidth(const KRuler* self, intptr_t slot);
int KRuler_QBaseHeightForWidth(const KRuler* self, int param1);
bool KRuler_HasHeightForWidth(const KRuler* self);
void KRuler_OnHasHeightForWidth(const KRuler* self, intptr_t slot);
bool KRuler_QBaseHasHeightForWidth(const KRuler* self);
QPaintEngine* KRuler_PaintEngine(const KRuler* self);
void KRuler_OnPaintEngine(const KRuler* self, intptr_t slot);
QPaintEngine* KRuler_QBasePaintEngine(const KRuler* self);
void KRuler_MousePressEvent(KRuler* self, QMouseEvent* event);
void KRuler_OnMousePressEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseMousePressEvent(KRuler* self, QMouseEvent* event);
void KRuler_MouseReleaseEvent(KRuler* self, QMouseEvent* event);
void KRuler_OnMouseReleaseEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseMouseReleaseEvent(KRuler* self, QMouseEvent* event);
void KRuler_MouseDoubleClickEvent(KRuler* self, QMouseEvent* event);
void KRuler_OnMouseDoubleClickEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseMouseDoubleClickEvent(KRuler* self, QMouseEvent* event);
void KRuler_MouseMoveEvent(KRuler* self, QMouseEvent* event);
void KRuler_OnMouseMoveEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseMouseMoveEvent(KRuler* self, QMouseEvent* event);
void KRuler_KeyReleaseEvent(KRuler* self, QKeyEvent* event);
void KRuler_OnKeyReleaseEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseKeyReleaseEvent(KRuler* self, QKeyEvent* event);
void KRuler_FocusInEvent(KRuler* self, QFocusEvent* event);
void KRuler_OnFocusInEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseFocusInEvent(KRuler* self, QFocusEvent* event);
void KRuler_FocusOutEvent(KRuler* self, QFocusEvent* event);
void KRuler_OnFocusOutEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseFocusOutEvent(KRuler* self, QFocusEvent* event);
void KRuler_EnterEvent(KRuler* self, QEnterEvent* event);
void KRuler_OnEnterEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseEnterEvent(KRuler* self, QEnterEvent* event);
void KRuler_LeaveEvent(KRuler* self, QEvent* event);
void KRuler_OnLeaveEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseLeaveEvent(KRuler* self, QEvent* event);
void KRuler_MoveEvent(KRuler* self, QMoveEvent* event);
void KRuler_OnMoveEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseMoveEvent(KRuler* self, QMoveEvent* event);
void KRuler_ResizeEvent(KRuler* self, QResizeEvent* event);
void KRuler_OnResizeEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseResizeEvent(KRuler* self, QResizeEvent* event);
void KRuler_CloseEvent(KRuler* self, QCloseEvent* event);
void KRuler_OnCloseEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseCloseEvent(KRuler* self, QCloseEvent* event);
void KRuler_ContextMenuEvent(KRuler* self, QContextMenuEvent* event);
void KRuler_OnContextMenuEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseContextMenuEvent(KRuler* self, QContextMenuEvent* event);
void KRuler_TabletEvent(KRuler* self, QTabletEvent* event);
void KRuler_OnTabletEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseTabletEvent(KRuler* self, QTabletEvent* event);
void KRuler_ActionEvent(KRuler* self, QActionEvent* event);
void KRuler_OnActionEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseActionEvent(KRuler* self, QActionEvent* event);
void KRuler_DragEnterEvent(KRuler* self, QDragEnterEvent* event);
void KRuler_OnDragEnterEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseDragEnterEvent(KRuler* self, QDragEnterEvent* event);
void KRuler_DragMoveEvent(KRuler* self, QDragMoveEvent* event);
void KRuler_OnDragMoveEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseDragMoveEvent(KRuler* self, QDragMoveEvent* event);
void KRuler_DragLeaveEvent(KRuler* self, QDragLeaveEvent* event);
void KRuler_OnDragLeaveEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseDragLeaveEvent(KRuler* self, QDragLeaveEvent* event);
void KRuler_DropEvent(KRuler* self, QDropEvent* event);
void KRuler_OnDropEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseDropEvent(KRuler* self, QDropEvent* event);
void KRuler_ShowEvent(KRuler* self, QShowEvent* event);
void KRuler_OnShowEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseShowEvent(KRuler* self, QShowEvent* event);
void KRuler_HideEvent(KRuler* self, QHideEvent* event);
void KRuler_OnHideEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseHideEvent(KRuler* self, QHideEvent* event);
bool KRuler_NativeEvent(KRuler* self, const libqt_string eventType, void* message, intptr_t* result);
void KRuler_OnNativeEvent(KRuler* self, intptr_t slot);
bool KRuler_QBaseNativeEvent(KRuler* self, const libqt_string eventType, void* message, intptr_t* result);
int KRuler_Metric(const KRuler* self, int param1);
void KRuler_OnMetric(const KRuler* self, intptr_t slot);
int KRuler_QBaseMetric(const KRuler* self, int param1);
void KRuler_InitPainter(const KRuler* self, QPainter* painter);
void KRuler_OnInitPainter(const KRuler* self, intptr_t slot);
void KRuler_QBaseInitPainter(const KRuler* self, QPainter* painter);
QPaintDevice* KRuler_Redirected(const KRuler* self, QPoint* offset);
void KRuler_OnRedirected(const KRuler* self, intptr_t slot);
QPaintDevice* KRuler_QBaseRedirected(const KRuler* self, QPoint* offset);
QPainter* KRuler_SharedPainter(const KRuler* self);
void KRuler_OnSharedPainter(const KRuler* self, intptr_t slot);
QPainter* KRuler_QBaseSharedPainter(const KRuler* self);
void KRuler_InputMethodEvent(KRuler* self, QInputMethodEvent* param1);
void KRuler_OnInputMethodEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseInputMethodEvent(KRuler* self, QInputMethodEvent* param1);
QVariant* KRuler_InputMethodQuery(const KRuler* self, int param1);
void KRuler_OnInputMethodQuery(const KRuler* self, intptr_t slot);
QVariant* KRuler_QBaseInputMethodQuery(const KRuler* self, int param1);
bool KRuler_FocusNextPrevChild(KRuler* self, bool next);
void KRuler_OnFocusNextPrevChild(KRuler* self, intptr_t slot);
bool KRuler_QBaseFocusNextPrevChild(KRuler* self, bool next);
bool KRuler_EventFilter(KRuler* self, QObject* watched, QEvent* event);
void KRuler_OnEventFilter(KRuler* self, intptr_t slot);
bool KRuler_QBaseEventFilter(KRuler* self, QObject* watched, QEvent* event);
void KRuler_ChildEvent(KRuler* self, QChildEvent* event);
void KRuler_OnChildEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseChildEvent(KRuler* self, QChildEvent* event);
void KRuler_CustomEvent(KRuler* self, QEvent* event);
void KRuler_OnCustomEvent(KRuler* self, intptr_t slot);
void KRuler_QBaseCustomEvent(KRuler* self, QEvent* event);
void KRuler_ConnectNotify(KRuler* self, const QMetaMethod* signal);
void KRuler_OnConnectNotify(KRuler* self, intptr_t slot);
void KRuler_QBaseConnectNotify(KRuler* self, const QMetaMethod* signal);
void KRuler_DisconnectNotify(KRuler* self, const QMetaMethod* signal);
void KRuler_OnDisconnectNotify(KRuler* self, intptr_t slot);
void KRuler_QBaseDisconnectNotify(KRuler* self, const QMetaMethod* signal);
void KRuler_SetRepeatAction(KRuler* self, int action);
void KRuler_OnSetRepeatAction(KRuler* self, intptr_t slot);
void KRuler_QBaseSetRepeatAction(KRuler* self, int action);
int KRuler_RepeatAction(const KRuler* self);
void KRuler_OnRepeatAction(const KRuler* self, intptr_t slot);
int KRuler_QBaseRepeatAction(const KRuler* self);
void KRuler_UpdateMicroFocus(KRuler* self);
void KRuler_OnUpdateMicroFocus(KRuler* self, intptr_t slot);
void KRuler_QBaseUpdateMicroFocus(KRuler* self);
void KRuler_Create(KRuler* self);
void KRuler_OnCreate(KRuler* self, intptr_t slot);
void KRuler_QBaseCreate(KRuler* self);
void KRuler_Destroy(KRuler* self);
void KRuler_OnDestroy(KRuler* self, intptr_t slot);
void KRuler_QBaseDestroy(KRuler* self);
bool KRuler_FocusNextChild(KRuler* self);
void KRuler_OnFocusNextChild(KRuler* self, intptr_t slot);
bool KRuler_QBaseFocusNextChild(KRuler* self);
bool KRuler_FocusPreviousChild(KRuler* self);
void KRuler_OnFocusPreviousChild(KRuler* self, intptr_t slot);
bool KRuler_QBaseFocusPreviousChild(KRuler* self);
QObject* KRuler_Sender(const KRuler* self);
void KRuler_OnSender(const KRuler* self, intptr_t slot);
QObject* KRuler_QBaseSender(const KRuler* self);
int KRuler_SenderSignalIndex(const KRuler* self);
void KRuler_OnSenderSignalIndex(const KRuler* self, intptr_t slot);
int KRuler_QBaseSenderSignalIndex(const KRuler* self);
int KRuler_Receivers(const KRuler* self, const char* signal);
void KRuler_OnReceivers(const KRuler* self, intptr_t slot);
int KRuler_QBaseReceivers(const KRuler* self, const char* signal);
bool KRuler_IsSignalConnected(const KRuler* self, const QMetaMethod* signal);
void KRuler_OnIsSignalConnected(const KRuler* self, intptr_t slot);
bool KRuler_QBaseIsSignalConnected(const KRuler* self, const QMetaMethod* signal);
double KRuler_GetDecodedMetricF(const KRuler* self, int metricA, int metricB);
void KRuler_OnGetDecodedMetricF(const KRuler* self, intptr_t slot);
double KRuler_QBaseGetDecodedMetricF(const KRuler* self, int metricA, int metricB);
void KRuler_Delete(KRuler* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
