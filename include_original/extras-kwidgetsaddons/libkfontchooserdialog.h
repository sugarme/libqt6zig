#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKFONTCHOOSERDIALOG_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKFONTCHOOSERDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KFontChooserDialog KFontChooserDialog;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KFontChooserDialog* KFontChooserDialog_new();
KFontChooserDialog* KFontChooserDialog_new2(const int* flags);
KFontChooserDialog* KFontChooserDialog_new3(const int* flags, QWidget* parent);
QMetaObject* KFontChooserDialog_MetaObject(const KFontChooserDialog* self);
void* KFontChooserDialog_Metacast(KFontChooserDialog* self, const char* param1);
int KFontChooserDialog_Metacall(KFontChooserDialog* self, int param1, int param2, void** param3);
libqt_string KFontChooserDialog_Tr(const char* s);
void KFontChooserDialog_SetFont(KFontChooserDialog* self, const QFont* font);
QFont* KFontChooserDialog_Font(const KFontChooserDialog* self);
int KFontChooserDialog_GetFont(QFont* theFont);
int KFontChooserDialog_GetFontDiff(QFont* theFont, int* diffFlags);
void KFontChooserDialog_FontSelected(KFontChooserDialog* self, const QFont* font);
void KFontChooserDialog_Connect_FontSelected(KFontChooserDialog* self, intptr_t slot);
libqt_string KFontChooserDialog_Tr2(const char* s, const char* c);
libqt_string KFontChooserDialog_Tr3(const char* s, const char* c, int n);
void KFontChooserDialog_SetFont2(KFontChooserDialog* self, const QFont* font, bool onlyFixed);
int KFontChooserDialog_GetFont2(QFont* theFont, const int* flags);
int KFontChooserDialog_GetFont3(QFont* theFont, const int* flags, QWidget* parent);
int KFontChooserDialog_GetFontDiff3(QFont* theFont, int* diffFlags, const int* flags);
int KFontChooserDialog_GetFontDiff4(QFont* theFont, int* diffFlags, const int* flags, QWidget* parent);
void KFontChooserDialog_OnMetacall(KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseMetacall(KFontChooserDialog* self, int param1, int param2, void** param3);
void KFontChooserDialog_SetVisible(KFontChooserDialog* self, bool visible);
void KFontChooserDialog_OnSetVisible(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseSetVisible(KFontChooserDialog* self, bool visible);
QSize* KFontChooserDialog_SizeHint(const KFontChooserDialog* self);
void KFontChooserDialog_OnSizeHint(const KFontChooserDialog* self, intptr_t slot);
QSize* KFontChooserDialog_QBaseSizeHint(const KFontChooserDialog* self);
QSize* KFontChooserDialog_MinimumSizeHint(const KFontChooserDialog* self);
void KFontChooserDialog_OnMinimumSizeHint(const KFontChooserDialog* self, intptr_t slot);
QSize* KFontChooserDialog_QBaseMinimumSizeHint(const KFontChooserDialog* self);
void KFontChooserDialog_Open(KFontChooserDialog* self);
void KFontChooserDialog_OnOpen(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseOpen(KFontChooserDialog* self);
int KFontChooserDialog_Exec(KFontChooserDialog* self);
void KFontChooserDialog_OnExec(KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseExec(KFontChooserDialog* self);
void KFontChooserDialog_Done(KFontChooserDialog* self, int param1);
void KFontChooserDialog_OnDone(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDone(KFontChooserDialog* self, int param1);
void KFontChooserDialog_Accept(KFontChooserDialog* self);
void KFontChooserDialog_OnAccept(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseAccept(KFontChooserDialog* self);
void KFontChooserDialog_Reject(KFontChooserDialog* self);
void KFontChooserDialog_OnReject(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseReject(KFontChooserDialog* self);
void KFontChooserDialog_KeyPressEvent(KFontChooserDialog* self, QKeyEvent* param1);
void KFontChooserDialog_OnKeyPressEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseKeyPressEvent(KFontChooserDialog* self, QKeyEvent* param1);
void KFontChooserDialog_CloseEvent(KFontChooserDialog* self, QCloseEvent* param1);
void KFontChooserDialog_OnCloseEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseCloseEvent(KFontChooserDialog* self, QCloseEvent* param1);
void KFontChooserDialog_ShowEvent(KFontChooserDialog* self, QShowEvent* param1);
void KFontChooserDialog_OnShowEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseShowEvent(KFontChooserDialog* self, QShowEvent* param1);
void KFontChooserDialog_ResizeEvent(KFontChooserDialog* self, QResizeEvent* param1);
void KFontChooserDialog_OnResizeEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseResizeEvent(KFontChooserDialog* self, QResizeEvent* param1);
void KFontChooserDialog_ContextMenuEvent(KFontChooserDialog* self, QContextMenuEvent* param1);
void KFontChooserDialog_OnContextMenuEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseContextMenuEvent(KFontChooserDialog* self, QContextMenuEvent* param1);
bool KFontChooserDialog_EventFilter(KFontChooserDialog* self, QObject* param1, QEvent* param2);
void KFontChooserDialog_OnEventFilter(KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseEventFilter(KFontChooserDialog* self, QObject* param1, QEvent* param2);
int KFontChooserDialog_DevType(const KFontChooserDialog* self);
void KFontChooserDialog_OnDevType(const KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseDevType(const KFontChooserDialog* self);
int KFontChooserDialog_HeightForWidth(const KFontChooserDialog* self, int param1);
void KFontChooserDialog_OnHeightForWidth(const KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseHeightForWidth(const KFontChooserDialog* self, int param1);
bool KFontChooserDialog_HasHeightForWidth(const KFontChooserDialog* self);
void KFontChooserDialog_OnHasHeightForWidth(const KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseHasHeightForWidth(const KFontChooserDialog* self);
QPaintEngine* KFontChooserDialog_PaintEngine(const KFontChooserDialog* self);
void KFontChooserDialog_OnPaintEngine(const KFontChooserDialog* self, intptr_t slot);
QPaintEngine* KFontChooserDialog_QBasePaintEngine(const KFontChooserDialog* self);
bool KFontChooserDialog_Event(KFontChooserDialog* self, QEvent* event);
void KFontChooserDialog_OnEvent(KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseEvent(KFontChooserDialog* self, QEvent* event);
void KFontChooserDialog_MousePressEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_OnMousePressEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseMousePressEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_MouseReleaseEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_OnMouseReleaseEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseMouseReleaseEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_MouseDoubleClickEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_OnMouseDoubleClickEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseMouseDoubleClickEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_MouseMoveEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_OnMouseMoveEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseMouseMoveEvent(KFontChooserDialog* self, QMouseEvent* event);
void KFontChooserDialog_WheelEvent(KFontChooserDialog* self, QWheelEvent* event);
void KFontChooserDialog_OnWheelEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseWheelEvent(KFontChooserDialog* self, QWheelEvent* event);
void KFontChooserDialog_KeyReleaseEvent(KFontChooserDialog* self, QKeyEvent* event);
void KFontChooserDialog_OnKeyReleaseEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseKeyReleaseEvent(KFontChooserDialog* self, QKeyEvent* event);
void KFontChooserDialog_FocusInEvent(KFontChooserDialog* self, QFocusEvent* event);
void KFontChooserDialog_OnFocusInEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseFocusInEvent(KFontChooserDialog* self, QFocusEvent* event);
void KFontChooserDialog_FocusOutEvent(KFontChooserDialog* self, QFocusEvent* event);
void KFontChooserDialog_OnFocusOutEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseFocusOutEvent(KFontChooserDialog* self, QFocusEvent* event);
void KFontChooserDialog_EnterEvent(KFontChooserDialog* self, QEnterEvent* event);
void KFontChooserDialog_OnEnterEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseEnterEvent(KFontChooserDialog* self, QEnterEvent* event);
void KFontChooserDialog_LeaveEvent(KFontChooserDialog* self, QEvent* event);
void KFontChooserDialog_OnLeaveEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseLeaveEvent(KFontChooserDialog* self, QEvent* event);
void KFontChooserDialog_PaintEvent(KFontChooserDialog* self, QPaintEvent* event);
void KFontChooserDialog_OnPaintEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBasePaintEvent(KFontChooserDialog* self, QPaintEvent* event);
void KFontChooserDialog_MoveEvent(KFontChooserDialog* self, QMoveEvent* event);
void KFontChooserDialog_OnMoveEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseMoveEvent(KFontChooserDialog* self, QMoveEvent* event);
void KFontChooserDialog_TabletEvent(KFontChooserDialog* self, QTabletEvent* event);
void KFontChooserDialog_OnTabletEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseTabletEvent(KFontChooserDialog* self, QTabletEvent* event);
void KFontChooserDialog_ActionEvent(KFontChooserDialog* self, QActionEvent* event);
void KFontChooserDialog_OnActionEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseActionEvent(KFontChooserDialog* self, QActionEvent* event);
void KFontChooserDialog_DragEnterEvent(KFontChooserDialog* self, QDragEnterEvent* event);
void KFontChooserDialog_OnDragEnterEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDragEnterEvent(KFontChooserDialog* self, QDragEnterEvent* event);
void KFontChooserDialog_DragMoveEvent(KFontChooserDialog* self, QDragMoveEvent* event);
void KFontChooserDialog_OnDragMoveEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDragMoveEvent(KFontChooserDialog* self, QDragMoveEvent* event);
void KFontChooserDialog_DragLeaveEvent(KFontChooserDialog* self, QDragLeaveEvent* event);
void KFontChooserDialog_OnDragLeaveEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDragLeaveEvent(KFontChooserDialog* self, QDragLeaveEvent* event);
void KFontChooserDialog_DropEvent(KFontChooserDialog* self, QDropEvent* event);
void KFontChooserDialog_OnDropEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDropEvent(KFontChooserDialog* self, QDropEvent* event);
void KFontChooserDialog_HideEvent(KFontChooserDialog* self, QHideEvent* event);
void KFontChooserDialog_OnHideEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseHideEvent(KFontChooserDialog* self, QHideEvent* event);
bool KFontChooserDialog_NativeEvent(KFontChooserDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KFontChooserDialog_OnNativeEvent(KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseNativeEvent(KFontChooserDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KFontChooserDialog_ChangeEvent(KFontChooserDialog* self, QEvent* param1);
void KFontChooserDialog_OnChangeEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseChangeEvent(KFontChooserDialog* self, QEvent* param1);
int KFontChooserDialog_Metric(const KFontChooserDialog* self, int param1);
void KFontChooserDialog_OnMetric(const KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseMetric(const KFontChooserDialog* self, int param1);
void KFontChooserDialog_InitPainter(const KFontChooserDialog* self, QPainter* painter);
void KFontChooserDialog_OnInitPainter(const KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseInitPainter(const KFontChooserDialog* self, QPainter* painter);
QPaintDevice* KFontChooserDialog_Redirected(const KFontChooserDialog* self, QPoint* offset);
void KFontChooserDialog_OnRedirected(const KFontChooserDialog* self, intptr_t slot);
QPaintDevice* KFontChooserDialog_QBaseRedirected(const KFontChooserDialog* self, QPoint* offset);
QPainter* KFontChooserDialog_SharedPainter(const KFontChooserDialog* self);
void KFontChooserDialog_OnSharedPainter(const KFontChooserDialog* self, intptr_t slot);
QPainter* KFontChooserDialog_QBaseSharedPainter(const KFontChooserDialog* self);
void KFontChooserDialog_InputMethodEvent(KFontChooserDialog* self, QInputMethodEvent* param1);
void KFontChooserDialog_OnInputMethodEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseInputMethodEvent(KFontChooserDialog* self, QInputMethodEvent* param1);
QVariant* KFontChooserDialog_InputMethodQuery(const KFontChooserDialog* self, int param1);
void KFontChooserDialog_OnInputMethodQuery(const KFontChooserDialog* self, intptr_t slot);
QVariant* KFontChooserDialog_QBaseInputMethodQuery(const KFontChooserDialog* self, int param1);
bool KFontChooserDialog_FocusNextPrevChild(KFontChooserDialog* self, bool next);
void KFontChooserDialog_OnFocusNextPrevChild(KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseFocusNextPrevChild(KFontChooserDialog* self, bool next);
void KFontChooserDialog_TimerEvent(KFontChooserDialog* self, QTimerEvent* event);
void KFontChooserDialog_OnTimerEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseTimerEvent(KFontChooserDialog* self, QTimerEvent* event);
void KFontChooserDialog_ChildEvent(KFontChooserDialog* self, QChildEvent* event);
void KFontChooserDialog_OnChildEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseChildEvent(KFontChooserDialog* self, QChildEvent* event);
void KFontChooserDialog_CustomEvent(KFontChooserDialog* self, QEvent* event);
void KFontChooserDialog_OnCustomEvent(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseCustomEvent(KFontChooserDialog* self, QEvent* event);
void KFontChooserDialog_ConnectNotify(KFontChooserDialog* self, const QMetaMethod* signal);
void KFontChooserDialog_OnConnectNotify(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseConnectNotify(KFontChooserDialog* self, const QMetaMethod* signal);
void KFontChooserDialog_DisconnectNotify(KFontChooserDialog* self, const QMetaMethod* signal);
void KFontChooserDialog_OnDisconnectNotify(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDisconnectNotify(KFontChooserDialog* self, const QMetaMethod* signal);
void KFontChooserDialog_AdjustPosition(KFontChooserDialog* self, QWidget* param1);
void KFontChooserDialog_OnAdjustPosition(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseAdjustPosition(KFontChooserDialog* self, QWidget* param1);
void KFontChooserDialog_UpdateMicroFocus(KFontChooserDialog* self);
void KFontChooserDialog_OnUpdateMicroFocus(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseUpdateMicroFocus(KFontChooserDialog* self);
void KFontChooserDialog_Create(KFontChooserDialog* self);
void KFontChooserDialog_OnCreate(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseCreate(KFontChooserDialog* self);
void KFontChooserDialog_Destroy(KFontChooserDialog* self);
void KFontChooserDialog_OnDestroy(KFontChooserDialog* self, intptr_t slot);
void KFontChooserDialog_QBaseDestroy(KFontChooserDialog* self);
bool KFontChooserDialog_FocusNextChild(KFontChooserDialog* self);
void KFontChooserDialog_OnFocusNextChild(KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseFocusNextChild(KFontChooserDialog* self);
bool KFontChooserDialog_FocusPreviousChild(KFontChooserDialog* self);
void KFontChooserDialog_OnFocusPreviousChild(KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseFocusPreviousChild(KFontChooserDialog* self);
QObject* KFontChooserDialog_Sender(const KFontChooserDialog* self);
void KFontChooserDialog_OnSender(const KFontChooserDialog* self, intptr_t slot);
QObject* KFontChooserDialog_QBaseSender(const KFontChooserDialog* self);
int KFontChooserDialog_SenderSignalIndex(const KFontChooserDialog* self);
void KFontChooserDialog_OnSenderSignalIndex(const KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseSenderSignalIndex(const KFontChooserDialog* self);
int KFontChooserDialog_Receivers(const KFontChooserDialog* self, const char* signal);
void KFontChooserDialog_OnReceivers(const KFontChooserDialog* self, intptr_t slot);
int KFontChooserDialog_QBaseReceivers(const KFontChooserDialog* self, const char* signal);
bool KFontChooserDialog_IsSignalConnected(const KFontChooserDialog* self, const QMetaMethod* signal);
void KFontChooserDialog_OnIsSignalConnected(const KFontChooserDialog* self, intptr_t slot);
bool KFontChooserDialog_QBaseIsSignalConnected(const KFontChooserDialog* self, const QMetaMethod* signal);
double KFontChooserDialog_GetDecodedMetricF(const KFontChooserDialog* self, int metricA, int metricB);
void KFontChooserDialog_OnGetDecodedMetricF(const KFontChooserDialog* self, intptr_t slot);
double KFontChooserDialog_QBaseGetDecodedMetricF(const KFontChooserDialog* self, int metricA, int metricB);
void KFontChooserDialog_Delete(KFontChooserDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
