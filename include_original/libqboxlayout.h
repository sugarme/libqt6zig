#pragma once
#ifndef SRCC_LIBQBOXLAYOUT_H
#define SRCC_LIBQBOXLAYOUT_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QBoxLayout QBoxLayout;
typedef struct QChildEvent QChildEvent;
typedef struct QEvent QEvent;
typedef struct QHBoxLayout QHBoxLayout;
typedef struct QLayout QLayout;
typedef struct QLayoutItem QLayoutItem;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QObject QObject;
typedef struct QRect QRect;
typedef struct QSize QSize;
typedef struct QSpacerItem QSpacerItem;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVBoxLayout QVBoxLayout;
typedef struct QWidget QWidget;
#endif

QBoxLayout* QBoxLayout_new(int param1);
QBoxLayout* QBoxLayout_new2(int param1, QWidget* parent);
QMetaObject* QBoxLayout_MetaObject(const QBoxLayout* self);
void* QBoxLayout_Metacast(QBoxLayout* self, const char* param1);
int QBoxLayout_Metacall(QBoxLayout* self, int param1, int param2, void** param3);
libqt_string QBoxLayout_Tr(const char* s);
int QBoxLayout_Direction(const QBoxLayout* self);
void QBoxLayout_SetDirection(QBoxLayout* self, int direction);
void QBoxLayout_AddSpacing(QBoxLayout* self, int size);
void QBoxLayout_AddStretch(QBoxLayout* self);
void QBoxLayout_AddSpacerItem(QBoxLayout* self, QSpacerItem* spacerItem);
void QBoxLayout_AddWidget(QBoxLayout* self, QWidget* param1);
void QBoxLayout_AddLayout(QBoxLayout* self, QLayout* layout);
void QBoxLayout_AddStrut(QBoxLayout* self, int param1);
void QBoxLayout_AddItem(QBoxLayout* self, QLayoutItem* param1);
void QBoxLayout_InsertSpacing(QBoxLayout* self, int index, int size);
void QBoxLayout_InsertStretch(QBoxLayout* self, int index);
void QBoxLayout_InsertSpacerItem(QBoxLayout* self, int index, QSpacerItem* spacerItem);
void QBoxLayout_InsertWidget(QBoxLayout* self, int index, QWidget* widget);
void QBoxLayout_InsertLayout(QBoxLayout* self, int index, QLayout* layout);
void QBoxLayout_InsertItem(QBoxLayout* self, int index, QLayoutItem* param2);
int QBoxLayout_Spacing(const QBoxLayout* self);
void QBoxLayout_SetSpacing(QBoxLayout* self, int spacing);
bool QBoxLayout_SetStretchFactor(QBoxLayout* self, QWidget* w, int stretch);
bool QBoxLayout_SetStretchFactor2(QBoxLayout* self, QLayout* l, int stretch);
void QBoxLayout_SetStretch(QBoxLayout* self, int index, int stretch);
int QBoxLayout_Stretch(const QBoxLayout* self, int index);
QSize* QBoxLayout_SizeHint(const QBoxLayout* self);
QSize* QBoxLayout_MinimumSize(const QBoxLayout* self);
QSize* QBoxLayout_MaximumSize(const QBoxLayout* self);
bool QBoxLayout_HasHeightForWidth(const QBoxLayout* self);
int QBoxLayout_HeightForWidth(const QBoxLayout* self, int param1);
int QBoxLayout_MinimumHeightForWidth(const QBoxLayout* self, int param1);
int QBoxLayout_ExpandingDirections(const QBoxLayout* self);
void QBoxLayout_Invalidate(QBoxLayout* self);
QLayoutItem* QBoxLayout_ItemAt(const QBoxLayout* self, int param1);
QLayoutItem* QBoxLayout_TakeAt(QBoxLayout* self, int param1);
int QBoxLayout_Count(const QBoxLayout* self);
void QBoxLayout_SetGeometry(QBoxLayout* self, const QRect* geometry);
libqt_string QBoxLayout_Tr2(const char* s, const char* c);
libqt_string QBoxLayout_Tr3(const char* s, const char* c, int n);
void QBoxLayout_AddStretch1(QBoxLayout* self, int stretch);
void QBoxLayout_AddWidget2(QBoxLayout* self, QWidget* param1, int stretch);
void QBoxLayout_AddWidget3(QBoxLayout* self, QWidget* param1, int stretch, int alignment);
void QBoxLayout_AddLayout2(QBoxLayout* self, QLayout* layout, int stretch);
void QBoxLayout_InsertStretch2(QBoxLayout* self, int index, int stretch);
void QBoxLayout_InsertWidget3(QBoxLayout* self, int index, QWidget* widget, int stretch);
void QBoxLayout_InsertWidget4(QBoxLayout* self, int index, QWidget* widget, int stretch, int alignment);
void QBoxLayout_InsertLayout3(QBoxLayout* self, int index, QLayout* layout, int stretch);
void QBoxLayout_OnMetacall(QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseMetacall(QBoxLayout* self, int param1, int param2, void** param3);
void QBoxLayout_OnAddItem(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseAddItem(QBoxLayout* self, QLayoutItem* param1);
void QBoxLayout_OnSpacing(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseSpacing(const QBoxLayout* self);
void QBoxLayout_OnSetSpacing(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseSetSpacing(QBoxLayout* self, int spacing);
void QBoxLayout_OnSizeHint(const QBoxLayout* self, intptr_t slot);
QSize* QBoxLayout_QBaseSizeHint(const QBoxLayout* self);
void QBoxLayout_OnMinimumSize(const QBoxLayout* self, intptr_t slot);
QSize* QBoxLayout_QBaseMinimumSize(const QBoxLayout* self);
void QBoxLayout_OnMaximumSize(const QBoxLayout* self, intptr_t slot);
QSize* QBoxLayout_QBaseMaximumSize(const QBoxLayout* self);
void QBoxLayout_OnHasHeightForWidth(const QBoxLayout* self, intptr_t slot);
bool QBoxLayout_QBaseHasHeightForWidth(const QBoxLayout* self);
void QBoxLayout_OnHeightForWidth(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseHeightForWidth(const QBoxLayout* self, int param1);
void QBoxLayout_OnMinimumHeightForWidth(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseMinimumHeightForWidth(const QBoxLayout* self, int param1);
void QBoxLayout_OnExpandingDirections(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseExpandingDirections(const QBoxLayout* self);
void QBoxLayout_OnInvalidate(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseInvalidate(QBoxLayout* self);
void QBoxLayout_OnItemAt(const QBoxLayout* self, intptr_t slot);
QLayoutItem* QBoxLayout_QBaseItemAt(const QBoxLayout* self, int param1);
void QBoxLayout_OnTakeAt(QBoxLayout* self, intptr_t slot);
QLayoutItem* QBoxLayout_QBaseTakeAt(QBoxLayout* self, int param1);
void QBoxLayout_OnCount(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseCount(const QBoxLayout* self);
void QBoxLayout_OnSetGeometry(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseSetGeometry(QBoxLayout* self, const QRect* geometry);
QRect* QBoxLayout_Geometry(const QBoxLayout* self);
void QBoxLayout_OnGeometry(const QBoxLayout* self, intptr_t slot);
QRect* QBoxLayout_QBaseGeometry(const QBoxLayout* self);
int QBoxLayout_IndexOf(const QBoxLayout* self, const QWidget* param1);
void QBoxLayout_OnIndexOf(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseIndexOf(const QBoxLayout* self, const QWidget* param1);
bool QBoxLayout_IsEmpty(const QBoxLayout* self);
void QBoxLayout_OnIsEmpty(const QBoxLayout* self, intptr_t slot);
bool QBoxLayout_QBaseIsEmpty(const QBoxLayout* self);
int QBoxLayout_ControlTypes(const QBoxLayout* self);
void QBoxLayout_OnControlTypes(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseControlTypes(const QBoxLayout* self);
QLayoutItem* QBoxLayout_ReplaceWidget(QBoxLayout* self, QWidget* from, QWidget* to, int options);
void QBoxLayout_OnReplaceWidget(QBoxLayout* self, intptr_t slot);
QLayoutItem* QBoxLayout_QBaseReplaceWidget(QBoxLayout* self, QWidget* from, QWidget* to, int options);
QLayout* QBoxLayout_Layout(QBoxLayout* self);
void QBoxLayout_OnLayout(QBoxLayout* self, intptr_t slot);
QLayout* QBoxLayout_QBaseLayout(QBoxLayout* self);
void QBoxLayout_ChildEvent(QBoxLayout* self, QChildEvent* e);
void QBoxLayout_OnChildEvent(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseChildEvent(QBoxLayout* self, QChildEvent* e);
bool QBoxLayout_Event(QBoxLayout* self, QEvent* event);
void QBoxLayout_OnEvent(QBoxLayout* self, intptr_t slot);
bool QBoxLayout_QBaseEvent(QBoxLayout* self, QEvent* event);
bool QBoxLayout_EventFilter(QBoxLayout* self, QObject* watched, QEvent* event);
void QBoxLayout_OnEventFilter(QBoxLayout* self, intptr_t slot);
bool QBoxLayout_QBaseEventFilter(QBoxLayout* self, QObject* watched, QEvent* event);
void QBoxLayout_TimerEvent(QBoxLayout* self, QTimerEvent* event);
void QBoxLayout_OnTimerEvent(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseTimerEvent(QBoxLayout* self, QTimerEvent* event);
void QBoxLayout_CustomEvent(QBoxLayout* self, QEvent* event);
void QBoxLayout_OnCustomEvent(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseCustomEvent(QBoxLayout* self, QEvent* event);
void QBoxLayout_ConnectNotify(QBoxLayout* self, const QMetaMethod* signal);
void QBoxLayout_OnConnectNotify(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseConnectNotify(QBoxLayout* self, const QMetaMethod* signal);
void QBoxLayout_DisconnectNotify(QBoxLayout* self, const QMetaMethod* signal);
void QBoxLayout_OnDisconnectNotify(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseDisconnectNotify(QBoxLayout* self, const QMetaMethod* signal);
QWidget* QBoxLayout_Widget(const QBoxLayout* self);
void QBoxLayout_OnWidget(const QBoxLayout* self, intptr_t slot);
QWidget* QBoxLayout_QBaseWidget(const QBoxLayout* self);
QSpacerItem* QBoxLayout_SpacerItem(QBoxLayout* self);
void QBoxLayout_OnSpacerItem(QBoxLayout* self, intptr_t slot);
QSpacerItem* QBoxLayout_QBaseSpacerItem(QBoxLayout* self);
void QBoxLayout_WidgetEvent(QBoxLayout* self, QEvent* param1);
void QBoxLayout_OnWidgetEvent(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseWidgetEvent(QBoxLayout* self, QEvent* param1);
void QBoxLayout_AddChildLayout(QBoxLayout* self, QLayout* l);
void QBoxLayout_OnAddChildLayout(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseAddChildLayout(QBoxLayout* self, QLayout* l);
void QBoxLayout_AddChildWidget(QBoxLayout* self, QWidget* w);
void QBoxLayout_OnAddChildWidget(QBoxLayout* self, intptr_t slot);
void QBoxLayout_QBaseAddChildWidget(QBoxLayout* self, QWidget* w);
bool QBoxLayout_AdoptLayout(QBoxLayout* self, QLayout* layout);
void QBoxLayout_OnAdoptLayout(QBoxLayout* self, intptr_t slot);
bool QBoxLayout_QBaseAdoptLayout(QBoxLayout* self, QLayout* layout);
QRect* QBoxLayout_AlignmentRect(const QBoxLayout* self, const QRect* param1);
void QBoxLayout_OnAlignmentRect(const QBoxLayout* self, intptr_t slot);
QRect* QBoxLayout_QBaseAlignmentRect(const QBoxLayout* self, const QRect* param1);
QObject* QBoxLayout_Sender(const QBoxLayout* self);
void QBoxLayout_OnSender(const QBoxLayout* self, intptr_t slot);
QObject* QBoxLayout_QBaseSender(const QBoxLayout* self);
int QBoxLayout_SenderSignalIndex(const QBoxLayout* self);
void QBoxLayout_OnSenderSignalIndex(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseSenderSignalIndex(const QBoxLayout* self);
int QBoxLayout_Receivers(const QBoxLayout* self, const char* signal);
void QBoxLayout_OnReceivers(const QBoxLayout* self, intptr_t slot);
int QBoxLayout_QBaseReceivers(const QBoxLayout* self, const char* signal);
bool QBoxLayout_IsSignalConnected(const QBoxLayout* self, const QMetaMethod* signal);
void QBoxLayout_OnIsSignalConnected(const QBoxLayout* self, intptr_t slot);
bool QBoxLayout_QBaseIsSignalConnected(const QBoxLayout* self, const QMetaMethod* signal);
void QBoxLayout_Delete(QBoxLayout* self);

QHBoxLayout* QHBoxLayout_new(QWidget* parent);
QHBoxLayout* QHBoxLayout_new2();
QMetaObject* QHBoxLayout_MetaObject(const QHBoxLayout* self);
void* QHBoxLayout_Metacast(QHBoxLayout* self, const char* param1);
int QHBoxLayout_Metacall(QHBoxLayout* self, int param1, int param2, void** param3);
libqt_string QHBoxLayout_Tr(const char* s);
libqt_string QHBoxLayout_Tr2(const char* s, const char* c);
libqt_string QHBoxLayout_Tr3(const char* s, const char* c, int n);
void QHBoxLayout_OnMetacall(QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseMetacall(QHBoxLayout* self, int param1, int param2, void** param3);
void QHBoxLayout_AddItem(QHBoxLayout* self, QLayoutItem* param1);
void QHBoxLayout_OnAddItem(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseAddItem(QHBoxLayout* self, QLayoutItem* param1);
int QHBoxLayout_Spacing(const QHBoxLayout* self);
void QHBoxLayout_OnSpacing(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseSpacing(const QHBoxLayout* self);
void QHBoxLayout_SetSpacing(QHBoxLayout* self, int spacing);
void QHBoxLayout_OnSetSpacing(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseSetSpacing(QHBoxLayout* self, int spacing);
QSize* QHBoxLayout_SizeHint(const QHBoxLayout* self);
void QHBoxLayout_OnSizeHint(const QHBoxLayout* self, intptr_t slot);
QSize* QHBoxLayout_QBaseSizeHint(const QHBoxLayout* self);
QSize* QHBoxLayout_MinimumSize(const QHBoxLayout* self);
void QHBoxLayout_OnMinimumSize(const QHBoxLayout* self, intptr_t slot);
QSize* QHBoxLayout_QBaseMinimumSize(const QHBoxLayout* self);
QSize* QHBoxLayout_MaximumSize(const QHBoxLayout* self);
void QHBoxLayout_OnMaximumSize(const QHBoxLayout* self, intptr_t slot);
QSize* QHBoxLayout_QBaseMaximumSize(const QHBoxLayout* self);
bool QHBoxLayout_HasHeightForWidth(const QHBoxLayout* self);
void QHBoxLayout_OnHasHeightForWidth(const QHBoxLayout* self, intptr_t slot);
bool QHBoxLayout_QBaseHasHeightForWidth(const QHBoxLayout* self);
int QHBoxLayout_HeightForWidth(const QHBoxLayout* self, int param1);
void QHBoxLayout_OnHeightForWidth(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseHeightForWidth(const QHBoxLayout* self, int param1);
int QHBoxLayout_MinimumHeightForWidth(const QHBoxLayout* self, int param1);
void QHBoxLayout_OnMinimumHeightForWidth(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseMinimumHeightForWidth(const QHBoxLayout* self, int param1);
int QHBoxLayout_ExpandingDirections(const QHBoxLayout* self);
void QHBoxLayout_OnExpandingDirections(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseExpandingDirections(const QHBoxLayout* self);
void QHBoxLayout_Invalidate(QHBoxLayout* self);
void QHBoxLayout_OnInvalidate(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseInvalidate(QHBoxLayout* self);
QLayoutItem* QHBoxLayout_ItemAt(const QHBoxLayout* self, int param1);
void QHBoxLayout_OnItemAt(const QHBoxLayout* self, intptr_t slot);
QLayoutItem* QHBoxLayout_QBaseItemAt(const QHBoxLayout* self, int param1);
QLayoutItem* QHBoxLayout_TakeAt(QHBoxLayout* self, int param1);
void QHBoxLayout_OnTakeAt(QHBoxLayout* self, intptr_t slot);
QLayoutItem* QHBoxLayout_QBaseTakeAt(QHBoxLayout* self, int param1);
int QHBoxLayout_Count(const QHBoxLayout* self);
void QHBoxLayout_OnCount(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseCount(const QHBoxLayout* self);
void QHBoxLayout_SetGeometry(QHBoxLayout* self, const QRect* geometry);
void QHBoxLayout_OnSetGeometry(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseSetGeometry(QHBoxLayout* self, const QRect* geometry);
QRect* QHBoxLayout_Geometry(const QHBoxLayout* self);
void QHBoxLayout_OnGeometry(const QHBoxLayout* self, intptr_t slot);
QRect* QHBoxLayout_QBaseGeometry(const QHBoxLayout* self);
int QHBoxLayout_IndexOf(const QHBoxLayout* self, const QWidget* param1);
void QHBoxLayout_OnIndexOf(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseIndexOf(const QHBoxLayout* self, const QWidget* param1);
bool QHBoxLayout_IsEmpty(const QHBoxLayout* self);
void QHBoxLayout_OnIsEmpty(const QHBoxLayout* self, intptr_t slot);
bool QHBoxLayout_QBaseIsEmpty(const QHBoxLayout* self);
int QHBoxLayout_ControlTypes(const QHBoxLayout* self);
void QHBoxLayout_OnControlTypes(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseControlTypes(const QHBoxLayout* self);
QLayoutItem* QHBoxLayout_ReplaceWidget(QHBoxLayout* self, QWidget* from, QWidget* to, int options);
void QHBoxLayout_OnReplaceWidget(QHBoxLayout* self, intptr_t slot);
QLayoutItem* QHBoxLayout_QBaseReplaceWidget(QHBoxLayout* self, QWidget* from, QWidget* to, int options);
QLayout* QHBoxLayout_Layout(QHBoxLayout* self);
void QHBoxLayout_OnLayout(QHBoxLayout* self, intptr_t slot);
QLayout* QHBoxLayout_QBaseLayout(QHBoxLayout* self);
void QHBoxLayout_ChildEvent(QHBoxLayout* self, QChildEvent* e);
void QHBoxLayout_OnChildEvent(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseChildEvent(QHBoxLayout* self, QChildEvent* e);
bool QHBoxLayout_Event(QHBoxLayout* self, QEvent* event);
void QHBoxLayout_OnEvent(QHBoxLayout* self, intptr_t slot);
bool QHBoxLayout_QBaseEvent(QHBoxLayout* self, QEvent* event);
bool QHBoxLayout_EventFilter(QHBoxLayout* self, QObject* watched, QEvent* event);
void QHBoxLayout_OnEventFilter(QHBoxLayout* self, intptr_t slot);
bool QHBoxLayout_QBaseEventFilter(QHBoxLayout* self, QObject* watched, QEvent* event);
void QHBoxLayout_TimerEvent(QHBoxLayout* self, QTimerEvent* event);
void QHBoxLayout_OnTimerEvent(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseTimerEvent(QHBoxLayout* self, QTimerEvent* event);
void QHBoxLayout_CustomEvent(QHBoxLayout* self, QEvent* event);
void QHBoxLayout_OnCustomEvent(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseCustomEvent(QHBoxLayout* self, QEvent* event);
void QHBoxLayout_ConnectNotify(QHBoxLayout* self, const QMetaMethod* signal);
void QHBoxLayout_OnConnectNotify(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseConnectNotify(QHBoxLayout* self, const QMetaMethod* signal);
void QHBoxLayout_DisconnectNotify(QHBoxLayout* self, const QMetaMethod* signal);
void QHBoxLayout_OnDisconnectNotify(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseDisconnectNotify(QHBoxLayout* self, const QMetaMethod* signal);
QWidget* QHBoxLayout_Widget(const QHBoxLayout* self);
void QHBoxLayout_OnWidget(const QHBoxLayout* self, intptr_t slot);
QWidget* QHBoxLayout_QBaseWidget(const QHBoxLayout* self);
QSpacerItem* QHBoxLayout_SpacerItem(QHBoxLayout* self);
void QHBoxLayout_OnSpacerItem(QHBoxLayout* self, intptr_t slot);
QSpacerItem* QHBoxLayout_QBaseSpacerItem(QHBoxLayout* self);
void QHBoxLayout_WidgetEvent(QHBoxLayout* self, QEvent* param1);
void QHBoxLayout_OnWidgetEvent(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseWidgetEvent(QHBoxLayout* self, QEvent* param1);
void QHBoxLayout_AddChildLayout(QHBoxLayout* self, QLayout* l);
void QHBoxLayout_OnAddChildLayout(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseAddChildLayout(QHBoxLayout* self, QLayout* l);
void QHBoxLayout_AddChildWidget(QHBoxLayout* self, QWidget* w);
void QHBoxLayout_OnAddChildWidget(QHBoxLayout* self, intptr_t slot);
void QHBoxLayout_QBaseAddChildWidget(QHBoxLayout* self, QWidget* w);
bool QHBoxLayout_AdoptLayout(QHBoxLayout* self, QLayout* layout);
void QHBoxLayout_OnAdoptLayout(QHBoxLayout* self, intptr_t slot);
bool QHBoxLayout_QBaseAdoptLayout(QHBoxLayout* self, QLayout* layout);
QRect* QHBoxLayout_AlignmentRect(const QHBoxLayout* self, const QRect* param1);
void QHBoxLayout_OnAlignmentRect(const QHBoxLayout* self, intptr_t slot);
QRect* QHBoxLayout_QBaseAlignmentRect(const QHBoxLayout* self, const QRect* param1);
QObject* QHBoxLayout_Sender(const QHBoxLayout* self);
void QHBoxLayout_OnSender(const QHBoxLayout* self, intptr_t slot);
QObject* QHBoxLayout_QBaseSender(const QHBoxLayout* self);
int QHBoxLayout_SenderSignalIndex(const QHBoxLayout* self);
void QHBoxLayout_OnSenderSignalIndex(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseSenderSignalIndex(const QHBoxLayout* self);
int QHBoxLayout_Receivers(const QHBoxLayout* self, const char* signal);
void QHBoxLayout_OnReceivers(const QHBoxLayout* self, intptr_t slot);
int QHBoxLayout_QBaseReceivers(const QHBoxLayout* self, const char* signal);
bool QHBoxLayout_IsSignalConnected(const QHBoxLayout* self, const QMetaMethod* signal);
void QHBoxLayout_OnIsSignalConnected(const QHBoxLayout* self, intptr_t slot);
bool QHBoxLayout_QBaseIsSignalConnected(const QHBoxLayout* self, const QMetaMethod* signal);
void QHBoxLayout_Delete(QHBoxLayout* self);

QVBoxLayout* QVBoxLayout_new(QWidget* parent);
QVBoxLayout* QVBoxLayout_new2();
QMetaObject* QVBoxLayout_MetaObject(const QVBoxLayout* self);
void* QVBoxLayout_Metacast(QVBoxLayout* self, const char* param1);
int QVBoxLayout_Metacall(QVBoxLayout* self, int param1, int param2, void** param3);
libqt_string QVBoxLayout_Tr(const char* s);
libqt_string QVBoxLayout_Tr2(const char* s, const char* c);
libqt_string QVBoxLayout_Tr3(const char* s, const char* c, int n);
void QVBoxLayout_OnMetacall(QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseMetacall(QVBoxLayout* self, int param1, int param2, void** param3);
void QVBoxLayout_AddItem(QVBoxLayout* self, QLayoutItem* param1);
void QVBoxLayout_OnAddItem(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseAddItem(QVBoxLayout* self, QLayoutItem* param1);
int QVBoxLayout_Spacing(const QVBoxLayout* self);
void QVBoxLayout_OnSpacing(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseSpacing(const QVBoxLayout* self);
void QVBoxLayout_SetSpacing(QVBoxLayout* self, int spacing);
void QVBoxLayout_OnSetSpacing(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseSetSpacing(QVBoxLayout* self, int spacing);
QSize* QVBoxLayout_SizeHint(const QVBoxLayout* self);
void QVBoxLayout_OnSizeHint(const QVBoxLayout* self, intptr_t slot);
QSize* QVBoxLayout_QBaseSizeHint(const QVBoxLayout* self);
QSize* QVBoxLayout_MinimumSize(const QVBoxLayout* self);
void QVBoxLayout_OnMinimumSize(const QVBoxLayout* self, intptr_t slot);
QSize* QVBoxLayout_QBaseMinimumSize(const QVBoxLayout* self);
QSize* QVBoxLayout_MaximumSize(const QVBoxLayout* self);
void QVBoxLayout_OnMaximumSize(const QVBoxLayout* self, intptr_t slot);
QSize* QVBoxLayout_QBaseMaximumSize(const QVBoxLayout* self);
bool QVBoxLayout_HasHeightForWidth(const QVBoxLayout* self);
void QVBoxLayout_OnHasHeightForWidth(const QVBoxLayout* self, intptr_t slot);
bool QVBoxLayout_QBaseHasHeightForWidth(const QVBoxLayout* self);
int QVBoxLayout_HeightForWidth(const QVBoxLayout* self, int param1);
void QVBoxLayout_OnHeightForWidth(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseHeightForWidth(const QVBoxLayout* self, int param1);
int QVBoxLayout_MinimumHeightForWidth(const QVBoxLayout* self, int param1);
void QVBoxLayout_OnMinimumHeightForWidth(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseMinimumHeightForWidth(const QVBoxLayout* self, int param1);
int QVBoxLayout_ExpandingDirections(const QVBoxLayout* self);
void QVBoxLayout_OnExpandingDirections(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseExpandingDirections(const QVBoxLayout* self);
void QVBoxLayout_Invalidate(QVBoxLayout* self);
void QVBoxLayout_OnInvalidate(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseInvalidate(QVBoxLayout* self);
QLayoutItem* QVBoxLayout_ItemAt(const QVBoxLayout* self, int param1);
void QVBoxLayout_OnItemAt(const QVBoxLayout* self, intptr_t slot);
QLayoutItem* QVBoxLayout_QBaseItemAt(const QVBoxLayout* self, int param1);
QLayoutItem* QVBoxLayout_TakeAt(QVBoxLayout* self, int param1);
void QVBoxLayout_OnTakeAt(QVBoxLayout* self, intptr_t slot);
QLayoutItem* QVBoxLayout_QBaseTakeAt(QVBoxLayout* self, int param1);
int QVBoxLayout_Count(const QVBoxLayout* self);
void QVBoxLayout_OnCount(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseCount(const QVBoxLayout* self);
void QVBoxLayout_SetGeometry(QVBoxLayout* self, const QRect* geometry);
void QVBoxLayout_OnSetGeometry(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseSetGeometry(QVBoxLayout* self, const QRect* geometry);
QRect* QVBoxLayout_Geometry(const QVBoxLayout* self);
void QVBoxLayout_OnGeometry(const QVBoxLayout* self, intptr_t slot);
QRect* QVBoxLayout_QBaseGeometry(const QVBoxLayout* self);
int QVBoxLayout_IndexOf(const QVBoxLayout* self, const QWidget* param1);
void QVBoxLayout_OnIndexOf(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseIndexOf(const QVBoxLayout* self, const QWidget* param1);
bool QVBoxLayout_IsEmpty(const QVBoxLayout* self);
void QVBoxLayout_OnIsEmpty(const QVBoxLayout* self, intptr_t slot);
bool QVBoxLayout_QBaseIsEmpty(const QVBoxLayout* self);
int QVBoxLayout_ControlTypes(const QVBoxLayout* self);
void QVBoxLayout_OnControlTypes(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseControlTypes(const QVBoxLayout* self);
QLayoutItem* QVBoxLayout_ReplaceWidget(QVBoxLayout* self, QWidget* from, QWidget* to, int options);
void QVBoxLayout_OnReplaceWidget(QVBoxLayout* self, intptr_t slot);
QLayoutItem* QVBoxLayout_QBaseReplaceWidget(QVBoxLayout* self, QWidget* from, QWidget* to, int options);
QLayout* QVBoxLayout_Layout(QVBoxLayout* self);
void QVBoxLayout_OnLayout(QVBoxLayout* self, intptr_t slot);
QLayout* QVBoxLayout_QBaseLayout(QVBoxLayout* self);
void QVBoxLayout_ChildEvent(QVBoxLayout* self, QChildEvent* e);
void QVBoxLayout_OnChildEvent(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseChildEvent(QVBoxLayout* self, QChildEvent* e);
bool QVBoxLayout_Event(QVBoxLayout* self, QEvent* event);
void QVBoxLayout_OnEvent(QVBoxLayout* self, intptr_t slot);
bool QVBoxLayout_QBaseEvent(QVBoxLayout* self, QEvent* event);
bool QVBoxLayout_EventFilter(QVBoxLayout* self, QObject* watched, QEvent* event);
void QVBoxLayout_OnEventFilter(QVBoxLayout* self, intptr_t slot);
bool QVBoxLayout_QBaseEventFilter(QVBoxLayout* self, QObject* watched, QEvent* event);
void QVBoxLayout_TimerEvent(QVBoxLayout* self, QTimerEvent* event);
void QVBoxLayout_OnTimerEvent(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseTimerEvent(QVBoxLayout* self, QTimerEvent* event);
void QVBoxLayout_CustomEvent(QVBoxLayout* self, QEvent* event);
void QVBoxLayout_OnCustomEvent(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseCustomEvent(QVBoxLayout* self, QEvent* event);
void QVBoxLayout_ConnectNotify(QVBoxLayout* self, const QMetaMethod* signal);
void QVBoxLayout_OnConnectNotify(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseConnectNotify(QVBoxLayout* self, const QMetaMethod* signal);
void QVBoxLayout_DisconnectNotify(QVBoxLayout* self, const QMetaMethod* signal);
void QVBoxLayout_OnDisconnectNotify(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseDisconnectNotify(QVBoxLayout* self, const QMetaMethod* signal);
QWidget* QVBoxLayout_Widget(const QVBoxLayout* self);
void QVBoxLayout_OnWidget(const QVBoxLayout* self, intptr_t slot);
QWidget* QVBoxLayout_QBaseWidget(const QVBoxLayout* self);
QSpacerItem* QVBoxLayout_SpacerItem(QVBoxLayout* self);
void QVBoxLayout_OnSpacerItem(QVBoxLayout* self, intptr_t slot);
QSpacerItem* QVBoxLayout_QBaseSpacerItem(QVBoxLayout* self);
void QVBoxLayout_WidgetEvent(QVBoxLayout* self, QEvent* param1);
void QVBoxLayout_OnWidgetEvent(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseWidgetEvent(QVBoxLayout* self, QEvent* param1);
void QVBoxLayout_AddChildLayout(QVBoxLayout* self, QLayout* l);
void QVBoxLayout_OnAddChildLayout(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseAddChildLayout(QVBoxLayout* self, QLayout* l);
void QVBoxLayout_AddChildWidget(QVBoxLayout* self, QWidget* w);
void QVBoxLayout_OnAddChildWidget(QVBoxLayout* self, intptr_t slot);
void QVBoxLayout_QBaseAddChildWidget(QVBoxLayout* self, QWidget* w);
bool QVBoxLayout_AdoptLayout(QVBoxLayout* self, QLayout* layout);
void QVBoxLayout_OnAdoptLayout(QVBoxLayout* self, intptr_t slot);
bool QVBoxLayout_QBaseAdoptLayout(QVBoxLayout* self, QLayout* layout);
QRect* QVBoxLayout_AlignmentRect(const QVBoxLayout* self, const QRect* param1);
void QVBoxLayout_OnAlignmentRect(const QVBoxLayout* self, intptr_t slot);
QRect* QVBoxLayout_QBaseAlignmentRect(const QVBoxLayout* self, const QRect* param1);
QObject* QVBoxLayout_Sender(const QVBoxLayout* self);
void QVBoxLayout_OnSender(const QVBoxLayout* self, intptr_t slot);
QObject* QVBoxLayout_QBaseSender(const QVBoxLayout* self);
int QVBoxLayout_SenderSignalIndex(const QVBoxLayout* self);
void QVBoxLayout_OnSenderSignalIndex(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseSenderSignalIndex(const QVBoxLayout* self);
int QVBoxLayout_Receivers(const QVBoxLayout* self, const char* signal);
void QVBoxLayout_OnReceivers(const QVBoxLayout* self, intptr_t slot);
int QVBoxLayout_QBaseReceivers(const QVBoxLayout* self, const char* signal);
bool QVBoxLayout_IsSignalConnected(const QVBoxLayout* self, const QMetaMethod* signal);
void QVBoxLayout_OnIsSignalConnected(const QVBoxLayout* self, intptr_t slot);
bool QVBoxLayout_QBaseIsSignalConnected(const QVBoxLayout* self, const QMetaMethod* signal);
void QVBoxLayout_Delete(QVBoxLayout* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
