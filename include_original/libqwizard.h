#pragma once
#ifndef SRCC_LIBQWIZARD_H
#define SRCC_LIBQWIZARD_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAbstractButton QAbstractButton;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QWizard QWizard;
typedef struct QWizardPage QWizardPage;
#endif

QWizard* QWizard_new(QWidget* parent);
QWizard* QWizard_new2();
QWizard* QWizard_new3(QWidget* parent, int flags);
QMetaObject* QWizard_MetaObject(const QWizard* self);
void* QWizard_Metacast(QWizard* self, const char* param1);
int QWizard_Metacall(QWizard* self, int param1, int param2, void** param3);
libqt_string QWizard_Tr(const char* s);
int QWizard_AddPage(QWizard* self, QWizardPage* page);
void QWizard_SetPage(QWizard* self, int id, QWizardPage* page);
void QWizard_RemovePage(QWizard* self, int id);
QWizardPage* QWizard_Page(const QWizard* self, int id);
bool QWizard_HasVisitedPage(const QWizard* self, int id);
libqt_list /* of int */ QWizard_VisitedIds(const QWizard* self);
libqt_list /* of int */ QWizard_PageIds(const QWizard* self);
void QWizard_SetStartId(QWizard* self, int id);
int QWizard_StartId(const QWizard* self);
QWizardPage* QWizard_CurrentPage(const QWizard* self);
int QWizard_CurrentId(const QWizard* self);
bool QWizard_ValidateCurrentPage(QWizard* self);
int QWizard_NextId(const QWizard* self);
void QWizard_SetField(QWizard* self, const libqt_string name, const QVariant* value);
QVariant* QWizard_Field(const QWizard* self, const libqt_string name);
void QWizard_SetWizardStyle(QWizard* self, int style);
int QWizard_WizardStyle(const QWizard* self);
void QWizard_SetOption(QWizard* self, int option);
bool QWizard_TestOption(const QWizard* self, int option);
void QWizard_SetOptions(QWizard* self, int options);
int QWizard_Options(const QWizard* self);
void QWizard_SetButtonText(QWizard* self, int which, const libqt_string text);
libqt_string QWizard_ButtonText(const QWizard* self, int which);
void QWizard_SetButtonLayout(QWizard* self, const libqt_list /* of int */ layout);
void QWizard_SetButton(QWizard* self, int which, QAbstractButton* button);
QAbstractButton* QWizard_Button(const QWizard* self, int which);
void QWizard_SetTitleFormat(QWizard* self, int format);
int QWizard_TitleFormat(const QWizard* self);
void QWizard_SetSubTitleFormat(QWizard* self, int format);
int QWizard_SubTitleFormat(const QWizard* self);
void QWizard_SetPixmap(QWizard* self, int which, const QPixmap* pixmap);
QPixmap* QWizard_Pixmap(const QWizard* self, int which);
void QWizard_SetSideWidget(QWizard* self, QWidget* widget);
QWidget* QWizard_SideWidget(const QWizard* self);
void QWizard_SetDefaultProperty(QWizard* self, const char* className, const char* property, const char* changedSignal);
void QWizard_SetVisible(QWizard* self, bool visible);
QSize* QWizard_SizeHint(const QWizard* self);
void QWizard_CurrentIdChanged(QWizard* self, int id);
void QWizard_Connect_CurrentIdChanged(QWizard* self, intptr_t slot);
void QWizard_HelpRequested(QWizard* self);
void QWizard_Connect_HelpRequested(QWizard* self, intptr_t slot);
void QWizard_CustomButtonClicked(QWizard* self, int which);
void QWizard_Connect_CustomButtonClicked(QWizard* self, intptr_t slot);
void QWizard_PageAdded(QWizard* self, int id);
void QWizard_Connect_PageAdded(QWizard* self, intptr_t slot);
void QWizard_PageRemoved(QWizard* self, int id);
void QWizard_Connect_PageRemoved(QWizard* self, intptr_t slot);
void QWizard_Back(QWizard* self);
void QWizard_Next(QWizard* self);
void QWizard_SetCurrentId(QWizard* self, int id);
void QWizard_Restart(QWizard* self);
bool QWizard_Event(QWizard* self, QEvent* event);
void QWizard_ResizeEvent(QWizard* self, QResizeEvent* event);
void QWizard_PaintEvent(QWizard* self, QPaintEvent* event);
void QWizard_Done(QWizard* self, int result);
void QWizard_InitializePage(QWizard* self, int id);
void QWizard_CleanupPage(QWizard* self, int id);
libqt_string QWizard_Tr2(const char* s, const char* c);
libqt_string QWizard_Tr3(const char* s, const char* c, int n);
void QWizard_SetOption2(QWizard* self, int option, bool on);
void QWizard_OnMetacall(QWizard* self, intptr_t slot);
int QWizard_QBaseMetacall(QWizard* self, int param1, int param2, void** param3);
void QWizard_OnValidateCurrentPage(QWizard* self, intptr_t slot);
bool QWizard_QBaseValidateCurrentPage(QWizard* self);
void QWizard_OnNextId(const QWizard* self, intptr_t slot);
int QWizard_QBaseNextId(const QWizard* self);
void QWizard_OnSetVisible(QWizard* self, intptr_t slot);
void QWizard_QBaseSetVisible(QWizard* self, bool visible);
void QWizard_OnSizeHint(const QWizard* self, intptr_t slot);
QSize* QWizard_QBaseSizeHint(const QWizard* self);
void QWizard_OnEvent(QWizard* self, intptr_t slot);
bool QWizard_QBaseEvent(QWizard* self, QEvent* event);
void QWizard_OnResizeEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseResizeEvent(QWizard* self, QResizeEvent* event);
void QWizard_OnPaintEvent(QWizard* self, intptr_t slot);
void QWizard_QBasePaintEvent(QWizard* self, QPaintEvent* event);
void QWizard_OnDone(QWizard* self, intptr_t slot);
void QWizard_QBaseDone(QWizard* self, int result);
void QWizard_OnInitializePage(QWizard* self, intptr_t slot);
void QWizard_QBaseInitializePage(QWizard* self, int id);
void QWizard_OnCleanupPage(QWizard* self, intptr_t slot);
void QWizard_QBaseCleanupPage(QWizard* self, int id);
QSize* QWizard_MinimumSizeHint(const QWizard* self);
void QWizard_OnMinimumSizeHint(const QWizard* self, intptr_t slot);
QSize* QWizard_QBaseMinimumSizeHint(const QWizard* self);
void QWizard_Open(QWizard* self);
void QWizard_OnOpen(QWizard* self, intptr_t slot);
void QWizard_QBaseOpen(QWizard* self);
int QWizard_Exec(QWizard* self);
void QWizard_OnExec(QWizard* self, intptr_t slot);
int QWizard_QBaseExec(QWizard* self);
void QWizard_Accept(QWizard* self);
void QWizard_OnAccept(QWizard* self, intptr_t slot);
void QWizard_QBaseAccept(QWizard* self);
void QWizard_Reject(QWizard* self);
void QWizard_OnReject(QWizard* self, intptr_t slot);
void QWizard_QBaseReject(QWizard* self);
void QWizard_KeyPressEvent(QWizard* self, QKeyEvent* param1);
void QWizard_OnKeyPressEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseKeyPressEvent(QWizard* self, QKeyEvent* param1);
void QWizard_CloseEvent(QWizard* self, QCloseEvent* param1);
void QWizard_OnCloseEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseCloseEvent(QWizard* self, QCloseEvent* param1);
void QWizard_ShowEvent(QWizard* self, QShowEvent* param1);
void QWizard_OnShowEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseShowEvent(QWizard* self, QShowEvent* param1);
void QWizard_ContextMenuEvent(QWizard* self, QContextMenuEvent* param1);
void QWizard_OnContextMenuEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseContextMenuEvent(QWizard* self, QContextMenuEvent* param1);
bool QWizard_EventFilter(QWizard* self, QObject* param1, QEvent* param2);
void QWizard_OnEventFilter(QWizard* self, intptr_t slot);
bool QWizard_QBaseEventFilter(QWizard* self, QObject* param1, QEvent* param2);
int QWizard_DevType(const QWizard* self);
void QWizard_OnDevType(const QWizard* self, intptr_t slot);
int QWizard_QBaseDevType(const QWizard* self);
int QWizard_HeightForWidth(const QWizard* self, int param1);
void QWizard_OnHeightForWidth(const QWizard* self, intptr_t slot);
int QWizard_QBaseHeightForWidth(const QWizard* self, int param1);
bool QWizard_HasHeightForWidth(const QWizard* self);
void QWizard_OnHasHeightForWidth(const QWizard* self, intptr_t slot);
bool QWizard_QBaseHasHeightForWidth(const QWizard* self);
QPaintEngine* QWizard_PaintEngine(const QWizard* self);
void QWizard_OnPaintEngine(const QWizard* self, intptr_t slot);
QPaintEngine* QWizard_QBasePaintEngine(const QWizard* self);
void QWizard_MousePressEvent(QWizard* self, QMouseEvent* event);
void QWizard_OnMousePressEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseMousePressEvent(QWizard* self, QMouseEvent* event);
void QWizard_MouseReleaseEvent(QWizard* self, QMouseEvent* event);
void QWizard_OnMouseReleaseEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseMouseReleaseEvent(QWizard* self, QMouseEvent* event);
void QWizard_MouseDoubleClickEvent(QWizard* self, QMouseEvent* event);
void QWizard_OnMouseDoubleClickEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseMouseDoubleClickEvent(QWizard* self, QMouseEvent* event);
void QWizard_MouseMoveEvent(QWizard* self, QMouseEvent* event);
void QWizard_OnMouseMoveEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseMouseMoveEvent(QWizard* self, QMouseEvent* event);
void QWizard_WheelEvent(QWizard* self, QWheelEvent* event);
void QWizard_OnWheelEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseWheelEvent(QWizard* self, QWheelEvent* event);
void QWizard_KeyReleaseEvent(QWizard* self, QKeyEvent* event);
void QWizard_OnKeyReleaseEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseKeyReleaseEvent(QWizard* self, QKeyEvent* event);
void QWizard_FocusInEvent(QWizard* self, QFocusEvent* event);
void QWizard_OnFocusInEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseFocusInEvent(QWizard* self, QFocusEvent* event);
void QWizard_FocusOutEvent(QWizard* self, QFocusEvent* event);
void QWizard_OnFocusOutEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseFocusOutEvent(QWizard* self, QFocusEvent* event);
void QWizard_EnterEvent(QWizard* self, QEnterEvent* event);
void QWizard_OnEnterEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseEnterEvent(QWizard* self, QEnterEvent* event);
void QWizard_LeaveEvent(QWizard* self, QEvent* event);
void QWizard_OnLeaveEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseLeaveEvent(QWizard* self, QEvent* event);
void QWizard_MoveEvent(QWizard* self, QMoveEvent* event);
void QWizard_OnMoveEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseMoveEvent(QWizard* self, QMoveEvent* event);
void QWizard_TabletEvent(QWizard* self, QTabletEvent* event);
void QWizard_OnTabletEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseTabletEvent(QWizard* self, QTabletEvent* event);
void QWizard_ActionEvent(QWizard* self, QActionEvent* event);
void QWizard_OnActionEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseActionEvent(QWizard* self, QActionEvent* event);
void QWizard_DragEnterEvent(QWizard* self, QDragEnterEvent* event);
void QWizard_OnDragEnterEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseDragEnterEvent(QWizard* self, QDragEnterEvent* event);
void QWizard_DragMoveEvent(QWizard* self, QDragMoveEvent* event);
void QWizard_OnDragMoveEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseDragMoveEvent(QWizard* self, QDragMoveEvent* event);
void QWizard_DragLeaveEvent(QWizard* self, QDragLeaveEvent* event);
void QWizard_OnDragLeaveEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseDragLeaveEvent(QWizard* self, QDragLeaveEvent* event);
void QWizard_DropEvent(QWizard* self, QDropEvent* event);
void QWizard_OnDropEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseDropEvent(QWizard* self, QDropEvent* event);
void QWizard_HideEvent(QWizard* self, QHideEvent* event);
void QWizard_OnHideEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseHideEvent(QWizard* self, QHideEvent* event);
bool QWizard_NativeEvent(QWizard* self, const libqt_string eventType, void* message, intptr_t* result);
void QWizard_OnNativeEvent(QWizard* self, intptr_t slot);
bool QWizard_QBaseNativeEvent(QWizard* self, const libqt_string eventType, void* message, intptr_t* result);
void QWizard_ChangeEvent(QWizard* self, QEvent* param1);
void QWizard_OnChangeEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseChangeEvent(QWizard* self, QEvent* param1);
int QWizard_Metric(const QWizard* self, int param1);
void QWizard_OnMetric(const QWizard* self, intptr_t slot);
int QWizard_QBaseMetric(const QWizard* self, int param1);
void QWizard_InitPainter(const QWizard* self, QPainter* painter);
void QWizard_OnInitPainter(const QWizard* self, intptr_t slot);
void QWizard_QBaseInitPainter(const QWizard* self, QPainter* painter);
QPaintDevice* QWizard_Redirected(const QWizard* self, QPoint* offset);
void QWizard_OnRedirected(const QWizard* self, intptr_t slot);
QPaintDevice* QWizard_QBaseRedirected(const QWizard* self, QPoint* offset);
QPainter* QWizard_SharedPainter(const QWizard* self);
void QWizard_OnSharedPainter(const QWizard* self, intptr_t slot);
QPainter* QWizard_QBaseSharedPainter(const QWizard* self);
void QWizard_InputMethodEvent(QWizard* self, QInputMethodEvent* param1);
void QWizard_OnInputMethodEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseInputMethodEvent(QWizard* self, QInputMethodEvent* param1);
QVariant* QWizard_InputMethodQuery(const QWizard* self, int param1);
void QWizard_OnInputMethodQuery(const QWizard* self, intptr_t slot);
QVariant* QWizard_QBaseInputMethodQuery(const QWizard* self, int param1);
bool QWizard_FocusNextPrevChild(QWizard* self, bool next);
void QWizard_OnFocusNextPrevChild(QWizard* self, intptr_t slot);
bool QWizard_QBaseFocusNextPrevChild(QWizard* self, bool next);
void QWizard_TimerEvent(QWizard* self, QTimerEvent* event);
void QWizard_OnTimerEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseTimerEvent(QWizard* self, QTimerEvent* event);
void QWizard_ChildEvent(QWizard* self, QChildEvent* event);
void QWizard_OnChildEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseChildEvent(QWizard* self, QChildEvent* event);
void QWizard_CustomEvent(QWizard* self, QEvent* event);
void QWizard_OnCustomEvent(QWizard* self, intptr_t slot);
void QWizard_QBaseCustomEvent(QWizard* self, QEvent* event);
void QWizard_ConnectNotify(QWizard* self, const QMetaMethod* signal);
void QWizard_OnConnectNotify(QWizard* self, intptr_t slot);
void QWizard_QBaseConnectNotify(QWizard* self, const QMetaMethod* signal);
void QWizard_DisconnectNotify(QWizard* self, const QMetaMethod* signal);
void QWizard_OnDisconnectNotify(QWizard* self, intptr_t slot);
void QWizard_QBaseDisconnectNotify(QWizard* self, const QMetaMethod* signal);
void QWizard_AdjustPosition(QWizard* self, QWidget* param1);
void QWizard_OnAdjustPosition(QWizard* self, intptr_t slot);
void QWizard_QBaseAdjustPosition(QWizard* self, QWidget* param1);
void QWizard_UpdateMicroFocus(QWizard* self);
void QWizard_OnUpdateMicroFocus(QWizard* self, intptr_t slot);
void QWizard_QBaseUpdateMicroFocus(QWizard* self);
void QWizard_Create(QWizard* self);
void QWizard_OnCreate(QWizard* self, intptr_t slot);
void QWizard_QBaseCreate(QWizard* self);
void QWizard_Destroy(QWizard* self);
void QWizard_OnDestroy(QWizard* self, intptr_t slot);
void QWizard_QBaseDestroy(QWizard* self);
bool QWizard_FocusNextChild(QWizard* self);
void QWizard_OnFocusNextChild(QWizard* self, intptr_t slot);
bool QWizard_QBaseFocusNextChild(QWizard* self);
bool QWizard_FocusPreviousChild(QWizard* self);
void QWizard_OnFocusPreviousChild(QWizard* self, intptr_t slot);
bool QWizard_QBaseFocusPreviousChild(QWizard* self);
QObject* QWizard_Sender(const QWizard* self);
void QWizard_OnSender(const QWizard* self, intptr_t slot);
QObject* QWizard_QBaseSender(const QWizard* self);
int QWizard_SenderSignalIndex(const QWizard* self);
void QWizard_OnSenderSignalIndex(const QWizard* self, intptr_t slot);
int QWizard_QBaseSenderSignalIndex(const QWizard* self);
int QWizard_Receivers(const QWizard* self, const char* signal);
void QWizard_OnReceivers(const QWizard* self, intptr_t slot);
int QWizard_QBaseReceivers(const QWizard* self, const char* signal);
bool QWizard_IsSignalConnected(const QWizard* self, const QMetaMethod* signal);
void QWizard_OnIsSignalConnected(const QWizard* self, intptr_t slot);
bool QWizard_QBaseIsSignalConnected(const QWizard* self, const QMetaMethod* signal);
double QWizard_GetDecodedMetricF(const QWizard* self, int metricA, int metricB);
void QWizard_OnGetDecodedMetricF(const QWizard* self, intptr_t slot);
double QWizard_QBaseGetDecodedMetricF(const QWizard* self, int metricA, int metricB);
void QWizard_Delete(QWizard* self);

QWizardPage* QWizardPage_new(QWidget* parent);
QWizardPage* QWizardPage_new2();
QMetaObject* QWizardPage_MetaObject(const QWizardPage* self);
void* QWizardPage_Metacast(QWizardPage* self, const char* param1);
int QWizardPage_Metacall(QWizardPage* self, int param1, int param2, void** param3);
libqt_string QWizardPage_Tr(const char* s);
void QWizardPage_SetTitle(QWizardPage* self, const libqt_string title);
libqt_string QWizardPage_Title(const QWizardPage* self);
void QWizardPage_SetSubTitle(QWizardPage* self, const libqt_string subTitle);
libqt_string QWizardPage_SubTitle(const QWizardPage* self);
void QWizardPage_SetPixmap(QWizardPage* self, int which, const QPixmap* pixmap);
QPixmap* QWizardPage_Pixmap(const QWizardPage* self, int which);
void QWizardPage_SetFinalPage(QWizardPage* self, bool finalPage);
bool QWizardPage_IsFinalPage(const QWizardPage* self);
void QWizardPage_SetCommitPage(QWizardPage* self, bool commitPage);
bool QWizardPage_IsCommitPage(const QWizardPage* self);
void QWizardPage_SetButtonText(QWizardPage* self, int which, const libqt_string text);
libqt_string QWizardPage_ButtonText(const QWizardPage* self, int which);
void QWizardPage_InitializePage(QWizardPage* self);
void QWizardPage_CleanupPage(QWizardPage* self);
bool QWizardPage_ValidatePage(QWizardPage* self);
bool QWizardPage_IsComplete(const QWizardPage* self);
int QWizardPage_NextId(const QWizardPage* self);
void QWizardPage_CompleteChanged(QWizardPage* self);
void QWizardPage_Connect_CompleteChanged(QWizardPage* self, intptr_t slot);
libqt_string QWizardPage_Tr2(const char* s, const char* c);
libqt_string QWizardPage_Tr3(const char* s, const char* c, int n);
void QWizardPage_OnMetacall(QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseMetacall(QWizardPage* self, int param1, int param2, void** param3);
void QWizardPage_OnInitializePage(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseInitializePage(QWizardPage* self);
void QWizardPage_OnCleanupPage(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseCleanupPage(QWizardPage* self);
void QWizardPage_OnValidatePage(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseValidatePage(QWizardPage* self);
void QWizardPage_OnIsComplete(const QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseIsComplete(const QWizardPage* self);
void QWizardPage_OnNextId(const QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseNextId(const QWizardPage* self);
int QWizardPage_DevType(const QWizardPage* self);
void QWizardPage_OnDevType(const QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseDevType(const QWizardPage* self);
void QWizardPage_SetVisible(QWizardPage* self, bool visible);
void QWizardPage_OnSetVisible(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseSetVisible(QWizardPage* self, bool visible);
QSize* QWizardPage_SizeHint(const QWizardPage* self);
void QWizardPage_OnSizeHint(const QWizardPage* self, intptr_t slot);
QSize* QWizardPage_QBaseSizeHint(const QWizardPage* self);
QSize* QWizardPage_MinimumSizeHint(const QWizardPage* self);
void QWizardPage_OnMinimumSizeHint(const QWizardPage* self, intptr_t slot);
QSize* QWizardPage_QBaseMinimumSizeHint(const QWizardPage* self);
int QWizardPage_HeightForWidth(const QWizardPage* self, int param1);
void QWizardPage_OnHeightForWidth(const QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseHeightForWidth(const QWizardPage* self, int param1);
bool QWizardPage_HasHeightForWidth(const QWizardPage* self);
void QWizardPage_OnHasHeightForWidth(const QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseHasHeightForWidth(const QWizardPage* self);
QPaintEngine* QWizardPage_PaintEngine(const QWizardPage* self);
void QWizardPage_OnPaintEngine(const QWizardPage* self, intptr_t slot);
QPaintEngine* QWizardPage_QBasePaintEngine(const QWizardPage* self);
bool QWizardPage_Event(QWizardPage* self, QEvent* event);
void QWizardPage_OnEvent(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseEvent(QWizardPage* self, QEvent* event);
void QWizardPage_MousePressEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_OnMousePressEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseMousePressEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_MouseReleaseEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_OnMouseReleaseEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseMouseReleaseEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_MouseDoubleClickEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_OnMouseDoubleClickEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseMouseDoubleClickEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_MouseMoveEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_OnMouseMoveEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseMouseMoveEvent(QWizardPage* self, QMouseEvent* event);
void QWizardPage_WheelEvent(QWizardPage* self, QWheelEvent* event);
void QWizardPage_OnWheelEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseWheelEvent(QWizardPage* self, QWheelEvent* event);
void QWizardPage_KeyPressEvent(QWizardPage* self, QKeyEvent* event);
void QWizardPage_OnKeyPressEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseKeyPressEvent(QWizardPage* self, QKeyEvent* event);
void QWizardPage_KeyReleaseEvent(QWizardPage* self, QKeyEvent* event);
void QWizardPage_OnKeyReleaseEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseKeyReleaseEvent(QWizardPage* self, QKeyEvent* event);
void QWizardPage_FocusInEvent(QWizardPage* self, QFocusEvent* event);
void QWizardPage_OnFocusInEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseFocusInEvent(QWizardPage* self, QFocusEvent* event);
void QWizardPage_FocusOutEvent(QWizardPage* self, QFocusEvent* event);
void QWizardPage_OnFocusOutEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseFocusOutEvent(QWizardPage* self, QFocusEvent* event);
void QWizardPage_EnterEvent(QWizardPage* self, QEnterEvent* event);
void QWizardPage_OnEnterEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseEnterEvent(QWizardPage* self, QEnterEvent* event);
void QWizardPage_LeaveEvent(QWizardPage* self, QEvent* event);
void QWizardPage_OnLeaveEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseLeaveEvent(QWizardPage* self, QEvent* event);
void QWizardPage_PaintEvent(QWizardPage* self, QPaintEvent* event);
void QWizardPage_OnPaintEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBasePaintEvent(QWizardPage* self, QPaintEvent* event);
void QWizardPage_MoveEvent(QWizardPage* self, QMoveEvent* event);
void QWizardPage_OnMoveEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseMoveEvent(QWizardPage* self, QMoveEvent* event);
void QWizardPage_ResizeEvent(QWizardPage* self, QResizeEvent* event);
void QWizardPage_OnResizeEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseResizeEvent(QWizardPage* self, QResizeEvent* event);
void QWizardPage_CloseEvent(QWizardPage* self, QCloseEvent* event);
void QWizardPage_OnCloseEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseCloseEvent(QWizardPage* self, QCloseEvent* event);
void QWizardPage_ContextMenuEvent(QWizardPage* self, QContextMenuEvent* event);
void QWizardPage_OnContextMenuEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseContextMenuEvent(QWizardPage* self, QContextMenuEvent* event);
void QWizardPage_TabletEvent(QWizardPage* self, QTabletEvent* event);
void QWizardPage_OnTabletEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseTabletEvent(QWizardPage* self, QTabletEvent* event);
void QWizardPage_ActionEvent(QWizardPage* self, QActionEvent* event);
void QWizardPage_OnActionEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseActionEvent(QWizardPage* self, QActionEvent* event);
void QWizardPage_DragEnterEvent(QWizardPage* self, QDragEnterEvent* event);
void QWizardPage_OnDragEnterEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseDragEnterEvent(QWizardPage* self, QDragEnterEvent* event);
void QWizardPage_DragMoveEvent(QWizardPage* self, QDragMoveEvent* event);
void QWizardPage_OnDragMoveEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseDragMoveEvent(QWizardPage* self, QDragMoveEvent* event);
void QWizardPage_DragLeaveEvent(QWizardPage* self, QDragLeaveEvent* event);
void QWizardPage_OnDragLeaveEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseDragLeaveEvent(QWizardPage* self, QDragLeaveEvent* event);
void QWizardPage_DropEvent(QWizardPage* self, QDropEvent* event);
void QWizardPage_OnDropEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseDropEvent(QWizardPage* self, QDropEvent* event);
void QWizardPage_ShowEvent(QWizardPage* self, QShowEvent* event);
void QWizardPage_OnShowEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseShowEvent(QWizardPage* self, QShowEvent* event);
void QWizardPage_HideEvent(QWizardPage* self, QHideEvent* event);
void QWizardPage_OnHideEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseHideEvent(QWizardPage* self, QHideEvent* event);
bool QWizardPage_NativeEvent(QWizardPage* self, const libqt_string eventType, void* message, intptr_t* result);
void QWizardPage_OnNativeEvent(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseNativeEvent(QWizardPage* self, const libqt_string eventType, void* message, intptr_t* result);
void QWizardPage_ChangeEvent(QWizardPage* self, QEvent* param1);
void QWizardPage_OnChangeEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseChangeEvent(QWizardPage* self, QEvent* param1);
int QWizardPage_Metric(const QWizardPage* self, int param1);
void QWizardPage_OnMetric(const QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseMetric(const QWizardPage* self, int param1);
void QWizardPage_InitPainter(const QWizardPage* self, QPainter* painter);
void QWizardPage_OnInitPainter(const QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseInitPainter(const QWizardPage* self, QPainter* painter);
QPaintDevice* QWizardPage_Redirected(const QWizardPage* self, QPoint* offset);
void QWizardPage_OnRedirected(const QWizardPage* self, intptr_t slot);
QPaintDevice* QWizardPage_QBaseRedirected(const QWizardPage* self, QPoint* offset);
QPainter* QWizardPage_SharedPainter(const QWizardPage* self);
void QWizardPage_OnSharedPainter(const QWizardPage* self, intptr_t slot);
QPainter* QWizardPage_QBaseSharedPainter(const QWizardPage* self);
void QWizardPage_InputMethodEvent(QWizardPage* self, QInputMethodEvent* param1);
void QWizardPage_OnInputMethodEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseInputMethodEvent(QWizardPage* self, QInputMethodEvent* param1);
QVariant* QWizardPage_InputMethodQuery(const QWizardPage* self, int param1);
void QWizardPage_OnInputMethodQuery(const QWizardPage* self, intptr_t slot);
QVariant* QWizardPage_QBaseInputMethodQuery(const QWizardPage* self, int param1);
bool QWizardPage_FocusNextPrevChild(QWizardPage* self, bool next);
void QWizardPage_OnFocusNextPrevChild(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseFocusNextPrevChild(QWizardPage* self, bool next);
bool QWizardPage_EventFilter(QWizardPage* self, QObject* watched, QEvent* event);
void QWizardPage_OnEventFilter(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseEventFilter(QWizardPage* self, QObject* watched, QEvent* event);
void QWizardPage_TimerEvent(QWizardPage* self, QTimerEvent* event);
void QWizardPage_OnTimerEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseTimerEvent(QWizardPage* self, QTimerEvent* event);
void QWizardPage_ChildEvent(QWizardPage* self, QChildEvent* event);
void QWizardPage_OnChildEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseChildEvent(QWizardPage* self, QChildEvent* event);
void QWizardPage_CustomEvent(QWizardPage* self, QEvent* event);
void QWizardPage_OnCustomEvent(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseCustomEvent(QWizardPage* self, QEvent* event);
void QWizardPage_ConnectNotify(QWizardPage* self, const QMetaMethod* signal);
void QWizardPage_OnConnectNotify(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseConnectNotify(QWizardPage* self, const QMetaMethod* signal);
void QWizardPage_DisconnectNotify(QWizardPage* self, const QMetaMethod* signal);
void QWizardPage_OnDisconnectNotify(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseDisconnectNotify(QWizardPage* self, const QMetaMethod* signal);
void QWizardPage_SetField(QWizardPage* self, const libqt_string name, const QVariant* value);
void QWizardPage_OnSetField(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseSetField(QWizardPage* self, const libqt_string name, const QVariant* value);
QVariant* QWizardPage_Field(const QWizardPage* self, const libqt_string name);
void QWizardPage_OnField(const QWizardPage* self, intptr_t slot);
QVariant* QWizardPage_QBaseField(const QWizardPage* self, const libqt_string name);
void QWizardPage_RegisterField(QWizardPage* self, const libqt_string name, QWidget* widget);
void QWizardPage_OnRegisterField(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseRegisterField(QWizardPage* self, const libqt_string name, QWidget* widget);
QWizard* QWizardPage_Wizard(const QWizardPage* self);
void QWizardPage_OnWizard(const QWizardPage* self, intptr_t slot);
QWizard* QWizardPage_QBaseWizard(const QWizardPage* self);
void QWizardPage_RegisterField3(QWizardPage* self, const libqt_string name, QWidget* widget, const char* property);
void QWizardPage_OnRegisterField3(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseRegisterField3(QWizardPage* self, const libqt_string name, QWidget* widget, const char* property);
void QWizardPage_RegisterField4(QWizardPage* self, const libqt_string name, QWidget* widget, const char* property, const char* changedSignal);
void QWizardPage_OnRegisterField4(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseRegisterField4(QWizardPage* self, const libqt_string name, QWidget* widget, const char* property, const char* changedSignal);
void QWizardPage_UpdateMicroFocus(QWizardPage* self);
void QWizardPage_OnUpdateMicroFocus(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseUpdateMicroFocus(QWizardPage* self);
void QWizardPage_Create(QWizardPage* self);
void QWizardPage_OnCreate(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseCreate(QWizardPage* self);
void QWizardPage_Destroy(QWizardPage* self);
void QWizardPage_OnDestroy(QWizardPage* self, intptr_t slot);
void QWizardPage_QBaseDestroy(QWizardPage* self);
bool QWizardPage_FocusNextChild(QWizardPage* self);
void QWizardPage_OnFocusNextChild(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseFocusNextChild(QWizardPage* self);
bool QWizardPage_FocusPreviousChild(QWizardPage* self);
void QWizardPage_OnFocusPreviousChild(QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseFocusPreviousChild(QWizardPage* self);
QObject* QWizardPage_Sender(const QWizardPage* self);
void QWizardPage_OnSender(const QWizardPage* self, intptr_t slot);
QObject* QWizardPage_QBaseSender(const QWizardPage* self);
int QWizardPage_SenderSignalIndex(const QWizardPage* self);
void QWizardPage_OnSenderSignalIndex(const QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseSenderSignalIndex(const QWizardPage* self);
int QWizardPage_Receivers(const QWizardPage* self, const char* signal);
void QWizardPage_OnReceivers(const QWizardPage* self, intptr_t slot);
int QWizardPage_QBaseReceivers(const QWizardPage* self, const char* signal);
bool QWizardPage_IsSignalConnected(const QWizardPage* self, const QMetaMethod* signal);
void QWizardPage_OnIsSignalConnected(const QWizardPage* self, intptr_t slot);
bool QWizardPage_QBaseIsSignalConnected(const QWizardPage* self, const QMetaMethod* signal);
double QWizardPage_GetDecodedMetricF(const QWizardPage* self, int metricA, int metricB);
void QWizardPage_OnGetDecodedMetricF(const QWizardPage* self, intptr_t slot);
double QWizardPage_QBaseGetDecodedMetricF(const QWizardPage* self, int metricA, int metricB);
void QWizardPage_Delete(QWizardPage* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
