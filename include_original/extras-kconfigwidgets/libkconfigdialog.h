#pragma once
#ifndef SRC_EXTRAS_KCONFIGWIDGETSC_LIBKCONFIGDIALOG_H
#define SRC_EXTRAS_KCONFIGWIDGETSC_LIBKCONFIGDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KConfigDialog KConfigDialog;
typedef struct KCoreConfigSkeleton KCoreConfigSkeleton;
typedef struct KPageDialog KPageDialog;
typedef struct KPageWidget KPageWidget;
typedef struct KPageWidgetItem KPageWidgetItem;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDialogButtonBox QDialogButtonBox;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KConfigDialog* KConfigDialog_new(QWidget* parent, const libqt_string name, KCoreConfigSkeleton* config);
QMetaObject* KConfigDialog_MetaObject(const KConfigDialog* self);
void* KConfigDialog_Metacast(KConfigDialog* self, const char* param1);
int KConfigDialog_Metacall(KConfigDialog* self, int param1, int param2, void** param3);
libqt_string KConfigDialog_Tr(const char* s);
void KConfigDialog_WidgetModified(KConfigDialog* self);
void KConfigDialog_Connect_WidgetModified(KConfigDialog* self, intptr_t slot);
void KConfigDialog_SettingsChanged(KConfigDialog* self, const libqt_string dialogName);
void KConfigDialog_Connect_SettingsChanged(KConfigDialog* self, intptr_t slot);
KPageWidgetItem* KConfigDialog_AddPage(KConfigDialog* self, QWidget* page, const libqt_string itemName);
KPageWidgetItem* KConfigDialog_AddPage2(KConfigDialog* self, QWidget* page, KCoreConfigSkeleton* config, const libqt_string itemName);
KConfigDialog* KConfigDialog_Exists(const libqt_string name);
bool KConfigDialog_ShowDialog(const libqt_string name);
void KConfigDialog_UpdateSettings(KConfigDialog* self);
void KConfigDialog_UpdateWidgets(KConfigDialog* self);
void KConfigDialog_UpdateWidgetsDefault(KConfigDialog* self);
void KConfigDialog_ShowHelp(KConfigDialog* self);
bool KConfigDialog_HasChanged(KConfigDialog* self);
bool KConfigDialog_IsDefault(KConfigDialog* self);
void KConfigDialog_ShowEvent(KConfigDialog* self, QShowEvent* e);
libqt_string KConfigDialog_Tr2(const char* s, const char* c);
libqt_string KConfigDialog_Tr3(const char* s, const char* c, int n);
KPageWidgetItem* KConfigDialog_AddPage3(KConfigDialog* self, QWidget* page, const libqt_string itemName, const libqt_string pixmapName);
KPageWidgetItem* KConfigDialog_AddPage4(KConfigDialog* self, QWidget* page, const libqt_string itemName, const libqt_string pixmapName, const libqt_string header);
KPageWidgetItem* KConfigDialog_AddPage5(KConfigDialog* self, QWidget* page, const libqt_string itemName, const libqt_string pixmapName, const libqt_string header, bool manage);
KPageWidgetItem* KConfigDialog_AddPage42(KConfigDialog* self, QWidget* page, KCoreConfigSkeleton* config, const libqt_string itemName, const libqt_string pixmapName);
KPageWidgetItem* KConfigDialog_AddPage52(KConfigDialog* self, QWidget* page, KCoreConfigSkeleton* config, const libqt_string itemName, const libqt_string pixmapName, const libqt_string header);
void KConfigDialog_OnMetacall(KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseMetacall(KConfigDialog* self, int param1, int param2, void** param3);
void KConfigDialog_OnUpdateSettings(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseUpdateSettings(KConfigDialog* self);
void KConfigDialog_OnUpdateWidgets(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseUpdateWidgets(KConfigDialog* self);
void KConfigDialog_OnUpdateWidgetsDefault(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseUpdateWidgetsDefault(KConfigDialog* self);
void KConfigDialog_OnShowHelp(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseShowHelp(KConfigDialog* self);
void KConfigDialog_OnHasChanged(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseHasChanged(KConfigDialog* self);
void KConfigDialog_OnIsDefault(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseIsDefault(KConfigDialog* self);
void KConfigDialog_OnShowEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseShowEvent(KConfigDialog* self, QShowEvent* e);
void KConfigDialog_SetVisible(KConfigDialog* self, bool visible);
void KConfigDialog_OnSetVisible(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseSetVisible(KConfigDialog* self, bool visible);
QSize* KConfigDialog_SizeHint(const KConfigDialog* self);
void KConfigDialog_OnSizeHint(const KConfigDialog* self, intptr_t slot);
QSize* KConfigDialog_QBaseSizeHint(const KConfigDialog* self);
QSize* KConfigDialog_MinimumSizeHint(const KConfigDialog* self);
void KConfigDialog_OnMinimumSizeHint(const KConfigDialog* self, intptr_t slot);
QSize* KConfigDialog_QBaseMinimumSizeHint(const KConfigDialog* self);
void KConfigDialog_Open(KConfigDialog* self);
void KConfigDialog_OnOpen(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseOpen(KConfigDialog* self);
int KConfigDialog_Exec(KConfigDialog* self);
void KConfigDialog_OnExec(KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseExec(KConfigDialog* self);
void KConfigDialog_Done(KConfigDialog* self, int param1);
void KConfigDialog_OnDone(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDone(KConfigDialog* self, int param1);
void KConfigDialog_Accept(KConfigDialog* self);
void KConfigDialog_OnAccept(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseAccept(KConfigDialog* self);
void KConfigDialog_Reject(KConfigDialog* self);
void KConfigDialog_OnReject(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseReject(KConfigDialog* self);
void KConfigDialog_KeyPressEvent(KConfigDialog* self, QKeyEvent* param1);
void KConfigDialog_OnKeyPressEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseKeyPressEvent(KConfigDialog* self, QKeyEvent* param1);
void KConfigDialog_CloseEvent(KConfigDialog* self, QCloseEvent* param1);
void KConfigDialog_OnCloseEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseCloseEvent(KConfigDialog* self, QCloseEvent* param1);
void KConfigDialog_ResizeEvent(KConfigDialog* self, QResizeEvent* param1);
void KConfigDialog_OnResizeEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseResizeEvent(KConfigDialog* self, QResizeEvent* param1);
void KConfigDialog_ContextMenuEvent(KConfigDialog* self, QContextMenuEvent* param1);
void KConfigDialog_OnContextMenuEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseContextMenuEvent(KConfigDialog* self, QContextMenuEvent* param1);
bool KConfigDialog_EventFilter(KConfigDialog* self, QObject* param1, QEvent* param2);
void KConfigDialog_OnEventFilter(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseEventFilter(KConfigDialog* self, QObject* param1, QEvent* param2);
int KConfigDialog_DevType(const KConfigDialog* self);
void KConfigDialog_OnDevType(const KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseDevType(const KConfigDialog* self);
int KConfigDialog_HeightForWidth(const KConfigDialog* self, int param1);
void KConfigDialog_OnHeightForWidth(const KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseHeightForWidth(const KConfigDialog* self, int param1);
bool KConfigDialog_HasHeightForWidth(const KConfigDialog* self);
void KConfigDialog_OnHasHeightForWidth(const KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseHasHeightForWidth(const KConfigDialog* self);
QPaintEngine* KConfigDialog_PaintEngine(const KConfigDialog* self);
void KConfigDialog_OnPaintEngine(const KConfigDialog* self, intptr_t slot);
QPaintEngine* KConfigDialog_QBasePaintEngine(const KConfigDialog* self);
bool KConfigDialog_Event(KConfigDialog* self, QEvent* event);
void KConfigDialog_OnEvent(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseEvent(KConfigDialog* self, QEvent* event);
void KConfigDialog_MousePressEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_OnMousePressEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseMousePressEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_MouseReleaseEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_OnMouseReleaseEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseMouseReleaseEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_MouseDoubleClickEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_OnMouseDoubleClickEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseMouseDoubleClickEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_MouseMoveEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_OnMouseMoveEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseMouseMoveEvent(KConfigDialog* self, QMouseEvent* event);
void KConfigDialog_WheelEvent(KConfigDialog* self, QWheelEvent* event);
void KConfigDialog_OnWheelEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseWheelEvent(KConfigDialog* self, QWheelEvent* event);
void KConfigDialog_KeyReleaseEvent(KConfigDialog* self, QKeyEvent* event);
void KConfigDialog_OnKeyReleaseEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseKeyReleaseEvent(KConfigDialog* self, QKeyEvent* event);
void KConfigDialog_FocusInEvent(KConfigDialog* self, QFocusEvent* event);
void KConfigDialog_OnFocusInEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseFocusInEvent(KConfigDialog* self, QFocusEvent* event);
void KConfigDialog_FocusOutEvent(KConfigDialog* self, QFocusEvent* event);
void KConfigDialog_OnFocusOutEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseFocusOutEvent(KConfigDialog* self, QFocusEvent* event);
void KConfigDialog_EnterEvent(KConfigDialog* self, QEnterEvent* event);
void KConfigDialog_OnEnterEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseEnterEvent(KConfigDialog* self, QEnterEvent* event);
void KConfigDialog_LeaveEvent(KConfigDialog* self, QEvent* event);
void KConfigDialog_OnLeaveEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseLeaveEvent(KConfigDialog* self, QEvent* event);
void KConfigDialog_PaintEvent(KConfigDialog* self, QPaintEvent* event);
void KConfigDialog_OnPaintEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBasePaintEvent(KConfigDialog* self, QPaintEvent* event);
void KConfigDialog_MoveEvent(KConfigDialog* self, QMoveEvent* event);
void KConfigDialog_OnMoveEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseMoveEvent(KConfigDialog* self, QMoveEvent* event);
void KConfigDialog_TabletEvent(KConfigDialog* self, QTabletEvent* event);
void KConfigDialog_OnTabletEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseTabletEvent(KConfigDialog* self, QTabletEvent* event);
void KConfigDialog_ActionEvent(KConfigDialog* self, QActionEvent* event);
void KConfigDialog_OnActionEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseActionEvent(KConfigDialog* self, QActionEvent* event);
void KConfigDialog_DragEnterEvent(KConfigDialog* self, QDragEnterEvent* event);
void KConfigDialog_OnDragEnterEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDragEnterEvent(KConfigDialog* self, QDragEnterEvent* event);
void KConfigDialog_DragMoveEvent(KConfigDialog* self, QDragMoveEvent* event);
void KConfigDialog_OnDragMoveEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDragMoveEvent(KConfigDialog* self, QDragMoveEvent* event);
void KConfigDialog_DragLeaveEvent(KConfigDialog* self, QDragLeaveEvent* event);
void KConfigDialog_OnDragLeaveEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDragLeaveEvent(KConfigDialog* self, QDragLeaveEvent* event);
void KConfigDialog_DropEvent(KConfigDialog* self, QDropEvent* event);
void KConfigDialog_OnDropEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDropEvent(KConfigDialog* self, QDropEvent* event);
void KConfigDialog_HideEvent(KConfigDialog* self, QHideEvent* event);
void KConfigDialog_OnHideEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseHideEvent(KConfigDialog* self, QHideEvent* event);
bool KConfigDialog_NativeEvent(KConfigDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KConfigDialog_OnNativeEvent(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseNativeEvent(KConfigDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KConfigDialog_ChangeEvent(KConfigDialog* self, QEvent* param1);
void KConfigDialog_OnChangeEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseChangeEvent(KConfigDialog* self, QEvent* param1);
int KConfigDialog_Metric(const KConfigDialog* self, int param1);
void KConfigDialog_OnMetric(const KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseMetric(const KConfigDialog* self, int param1);
void KConfigDialog_InitPainter(const KConfigDialog* self, QPainter* painter);
void KConfigDialog_OnInitPainter(const KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseInitPainter(const KConfigDialog* self, QPainter* painter);
QPaintDevice* KConfigDialog_Redirected(const KConfigDialog* self, QPoint* offset);
void KConfigDialog_OnRedirected(const KConfigDialog* self, intptr_t slot);
QPaintDevice* KConfigDialog_QBaseRedirected(const KConfigDialog* self, QPoint* offset);
QPainter* KConfigDialog_SharedPainter(const KConfigDialog* self);
void KConfigDialog_OnSharedPainter(const KConfigDialog* self, intptr_t slot);
QPainter* KConfigDialog_QBaseSharedPainter(const KConfigDialog* self);
void KConfigDialog_InputMethodEvent(KConfigDialog* self, QInputMethodEvent* param1);
void KConfigDialog_OnInputMethodEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseInputMethodEvent(KConfigDialog* self, QInputMethodEvent* param1);
QVariant* KConfigDialog_InputMethodQuery(const KConfigDialog* self, int param1);
void KConfigDialog_OnInputMethodQuery(const KConfigDialog* self, intptr_t slot);
QVariant* KConfigDialog_QBaseInputMethodQuery(const KConfigDialog* self, int param1);
bool KConfigDialog_FocusNextPrevChild(KConfigDialog* self, bool next);
void KConfigDialog_OnFocusNextPrevChild(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseFocusNextPrevChild(KConfigDialog* self, bool next);
void KConfigDialog_TimerEvent(KConfigDialog* self, QTimerEvent* event);
void KConfigDialog_OnTimerEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseTimerEvent(KConfigDialog* self, QTimerEvent* event);
void KConfigDialog_ChildEvent(KConfigDialog* self, QChildEvent* event);
void KConfigDialog_OnChildEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseChildEvent(KConfigDialog* self, QChildEvent* event);
void KConfigDialog_CustomEvent(KConfigDialog* self, QEvent* event);
void KConfigDialog_OnCustomEvent(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseCustomEvent(KConfigDialog* self, QEvent* event);
void KConfigDialog_ConnectNotify(KConfigDialog* self, const QMetaMethod* signal);
void KConfigDialog_OnConnectNotify(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseConnectNotify(KConfigDialog* self, const QMetaMethod* signal);
void KConfigDialog_DisconnectNotify(KConfigDialog* self, const QMetaMethod* signal);
void KConfigDialog_OnDisconnectNotify(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDisconnectNotify(KConfigDialog* self, const QMetaMethod* signal);
void KConfigDialog_UpdateButtons(KConfigDialog* self);
void KConfigDialog_OnUpdateButtons(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseUpdateButtons(KConfigDialog* self);
void KConfigDialog_SettingsChangedSlot(KConfigDialog* self);
void KConfigDialog_OnSettingsChangedSlot(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseSettingsChangedSlot(KConfigDialog* self);
void KConfigDialog_SetHelp(KConfigDialog* self, const libqt_string anchor);
void KConfigDialog_OnSetHelp(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseSetHelp(KConfigDialog* self, const libqt_string anchor);
void KConfigDialog_SetHelp2(KConfigDialog* self, const libqt_string anchor, const libqt_string appname);
void KConfigDialog_OnSetHelp2(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseSetHelp2(KConfigDialog* self, const libqt_string anchor, const libqt_string appname);
KPageWidget* KConfigDialog_PageWidget(KConfigDialog* self);
void KConfigDialog_OnPageWidget(KConfigDialog* self, intptr_t slot);
KPageWidget* KConfigDialog_QBasePageWidget(KConfigDialog* self);
void KConfigDialog_SetPageWidget(KConfigDialog* self, KPageWidget* widget);
void KConfigDialog_OnSetPageWidget(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseSetPageWidget(KConfigDialog* self, KPageWidget* widget);
QDialogButtonBox* KConfigDialog_ButtonBox(KConfigDialog* self);
void KConfigDialog_OnButtonBox(KConfigDialog* self, intptr_t slot);
QDialogButtonBox* KConfigDialog_QBaseButtonBox(KConfigDialog* self);
void KConfigDialog_SetButtonBox(KConfigDialog* self, QDialogButtonBox* box);
void KConfigDialog_OnSetButtonBox(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseSetButtonBox(KConfigDialog* self, QDialogButtonBox* box);
void KConfigDialog_AdjustPosition(KConfigDialog* self, QWidget* param1);
void KConfigDialog_OnAdjustPosition(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseAdjustPosition(KConfigDialog* self, QWidget* param1);
void KConfigDialog_UpdateMicroFocus(KConfigDialog* self);
void KConfigDialog_OnUpdateMicroFocus(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseUpdateMicroFocus(KConfigDialog* self);
void KConfigDialog_Create(KConfigDialog* self);
void KConfigDialog_OnCreate(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseCreate(KConfigDialog* self);
void KConfigDialog_Destroy(KConfigDialog* self);
void KConfigDialog_OnDestroy(KConfigDialog* self, intptr_t slot);
void KConfigDialog_QBaseDestroy(KConfigDialog* self);
bool KConfigDialog_FocusNextChild(KConfigDialog* self);
void KConfigDialog_OnFocusNextChild(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseFocusNextChild(KConfigDialog* self);
bool KConfigDialog_FocusPreviousChild(KConfigDialog* self);
void KConfigDialog_OnFocusPreviousChild(KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseFocusPreviousChild(KConfigDialog* self);
QObject* KConfigDialog_Sender(const KConfigDialog* self);
void KConfigDialog_OnSender(const KConfigDialog* self, intptr_t slot);
QObject* KConfigDialog_QBaseSender(const KConfigDialog* self);
int KConfigDialog_SenderSignalIndex(const KConfigDialog* self);
void KConfigDialog_OnSenderSignalIndex(const KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseSenderSignalIndex(const KConfigDialog* self);
int KConfigDialog_Receivers(const KConfigDialog* self, const char* signal);
void KConfigDialog_OnReceivers(const KConfigDialog* self, intptr_t slot);
int KConfigDialog_QBaseReceivers(const KConfigDialog* self, const char* signal);
bool KConfigDialog_IsSignalConnected(const KConfigDialog* self, const QMetaMethod* signal);
void KConfigDialog_OnIsSignalConnected(const KConfigDialog* self, intptr_t slot);
bool KConfigDialog_QBaseIsSignalConnected(const KConfigDialog* self, const QMetaMethod* signal);
double KConfigDialog_GetDecodedMetricF(const KConfigDialog* self, int metricA, int metricB);
void KConfigDialog_OnGetDecodedMetricF(const KConfigDialog* self, intptr_t slot);
double KConfigDialog_QBaseGetDecodedMetricF(const KConfigDialog* self, int metricA, int metricB);
void KConfigDialog_Delete(KConfigDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
