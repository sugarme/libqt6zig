#pragma once
#ifndef SRC_OPENGLC_LIBQOPENGLFUNCTIONS_3_3_COMPATIBILITY_H
#define SRC_OPENGLC_LIBQOPENGLFUNCTIONS_3_3_COMPATIBILITY_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef char GLchar;
typedef float GLclampf;
typedef struct QAbstractOpenGLFunctions QAbstractOpenGLFunctions;
typedef struct QOpenGLContext QOpenGLContext;
typedef struct QOpenGLFunctions_3_3_Compatibility QOpenGLFunctions_3_3_Compatibility;
#endif

QOpenGLFunctions_3_3_Compatibility* QOpenGLFunctions_3_3_Compatibility_new();
bool QOpenGLFunctions_3_3_Compatibility_InitializeOpenGLFunctions(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlViewport(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlDepthRange(QOpenGLFunctions_3_3_Compatibility* self, double nearVal, double farVal);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsEnabled(QOpenGLFunctions_3_3_Compatibility* self, uint32_t cap);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexLevelParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexLevelParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexImage(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t format, uint32_t typeVal, void* pixels);
const uint8_t* QOpenGLFunctions_3_3_Compatibility_GlGetString(QOpenGLFunctions_3_3_Compatibility* self, uint32_t name);
void QOpenGLFunctions_3_3_Compatibility_GlGetIntegerv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetFloatv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetDoublev(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, double* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetBooleanv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, unsigned char* params);
void QOpenGLFunctions_3_3_Compatibility_GlReadPixels(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlReadBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlPixelStorei(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlPixelStoref(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlDepthFunc(QOpenGLFunctions_3_3_Compatibility* self, uint32_t func);
void QOpenGLFunctions_3_3_Compatibility_GlStencilOp(QOpenGLFunctions_3_3_Compatibility* self, uint32_t fail, uint32_t zfail, uint32_t zpass);
void QOpenGLFunctions_3_3_Compatibility_GlStencilFunc(QOpenGLFunctions_3_3_Compatibility* self, uint32_t func, int32_t ref, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlLogicOp(QOpenGLFunctions_3_3_Compatibility* self, uint32_t opcode);
void QOpenGLFunctions_3_3_Compatibility_GlBlendFunc(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sfactor, uint32_t dfactor);
void QOpenGLFunctions_3_3_Compatibility_GlFlush(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlFinish(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlEnable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t cap);
void QOpenGLFunctions_3_3_Compatibility_GlDisable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t cap);
void QOpenGLFunctions_3_3_Compatibility_GlDepthMask(QOpenGLFunctions_3_3_Compatibility* self, unsigned char flag);
void QOpenGLFunctions_3_3_Compatibility_GlColorMask(QOpenGLFunctions_3_3_Compatibility* self, unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha);
void QOpenGLFunctions_3_3_Compatibility_GlStencilMask(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlClearDepth(QOpenGLFunctions_3_3_Compatibility* self, double depth);
void QOpenGLFunctions_3_3_Compatibility_GlClearStencil(QOpenGLFunctions_3_3_Compatibility* self, int32_t s);
void QOpenGLFunctions_3_3_Compatibility_GlClearColor(QOpenGLFunctions_3_3_Compatibility* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_3_Compatibility_GlClear(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlDrawBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlTexImage2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlTexImage1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlTexParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexParameteri(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlTexParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexParameterf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlScissor(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlPolygonMode(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlPointSize(QOpenGLFunctions_3_3_Compatibility* self, float size);
void QOpenGLFunctions_3_3_Compatibility_GlLineWidth(QOpenGLFunctions_3_3_Compatibility* self, float width);
void QOpenGLFunctions_3_3_Compatibility_GlHint(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlFrontFace(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlCullFace(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlIndexubv(QOpenGLFunctions_3_3_Compatibility* self, const uint8_t* c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexub(QOpenGLFunctions_3_3_Compatibility* self, uint8_t c);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsTexture(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture);
void QOpenGLFunctions_3_3_Compatibility_GlGenTextures(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t* textures);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteTextures(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* textures);
void QOpenGLFunctions_3_3_Compatibility_GlBindTexture(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t texture);
void QOpenGLFunctions_3_3_Compatibility_GlTexSubImage2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlTexSubImage1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlCopyTexSubImage2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlCopyTexSubImage1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t x, int32_t y, int32_t width);
void QOpenGLFunctions_3_3_Compatibility_GlCopyTexImage2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t height, int32_t border);
void QOpenGLFunctions_3_3_Compatibility_GlCopyTexImage1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t border);
void QOpenGLFunctions_3_3_Compatibility_GlPolygonOffset(QOpenGLFunctions_3_3_Compatibility* self, float factor, float units);
void QOpenGLFunctions_3_3_Compatibility_GlDrawElements(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices);
void QOpenGLFunctions_3_3_Compatibility_GlDrawArrays(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t first, int32_t count);
void QOpenGLFunctions_3_3_Compatibility_GlCopyTexSubImage3D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlTexSubImage3D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t width, int32_t height, int32_t depth, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlTexImage3D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t depth, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlDrawRangeElements(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, uint32_t start, uint32_t end, int32_t count, uint32_t typeVal, const void* indices);
void QOpenGLFunctions_3_3_Compatibility_GlBlendEquation(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlBlendColor(QOpenGLFunctions_3_3_Compatibility* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_3_Compatibility_GlGetCompressedTexImage(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, void* img);
void QOpenGLFunctions_3_3_Compatibility_GlCompressedTexSubImage1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlCompressedTexSubImage2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlCompressedTexSubImage3D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t width, int32_t height, int32_t depth, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlCompressedTexImage1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlCompressedTexImage2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t height, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlCompressedTexImage3D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t height, int32_t depth, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlSampleCoverage(QOpenGLFunctions_3_3_Compatibility* self, float value, unsigned char invert);
void QOpenGLFunctions_3_3_Compatibility_GlActiveTexture(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture);
void QOpenGLFunctions_3_3_Compatibility_GlPointParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlPointParameteri(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlPointParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlPointParameterf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlMultiDrawArrays(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, const int32_t* first, const int32_t* count, int32_t drawcount);
void QOpenGLFunctions_3_3_Compatibility_GlBlendFuncSeparate(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sfactorRGB, uint32_t dfactorRGB, uint32_t sfactorAlpha, uint32_t dfactorAlpha);
void QOpenGLFunctions_3_3_Compatibility_GlGetBufferParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlUnmapBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target);
void* QOpenGLFunctions_3_3_Compatibility_GlMapBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t access);
void QOpenGLFunctions_3_3_Compatibility_GlGetBufferSubData(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int64_t offset, int64_t size, void* data);
void QOpenGLFunctions_3_3_Compatibility_GlBufferSubData(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int64_t offset, int64_t size, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlBufferData(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int64_t size, const void* data, uint32_t usage);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t buffer);
void QOpenGLFunctions_3_3_Compatibility_GlGenBuffers(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t* buffers);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteBuffers(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* buffers);
void QOpenGLFunctions_3_3_Compatibility_GlBindBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t buffer);
void QOpenGLFunctions_3_3_Compatibility_GlGetQueryObjectuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetQueryObjectiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetQueryiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlEndQuery(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target);
void QOpenGLFunctions_3_3_Compatibility_GlBeginQuery(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t id);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsQuery(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteQueries(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* ids);
void QOpenGLFunctions_3_3_Compatibility_GlGenQueries(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t* ids);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribPointer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int32_t size, uint32_t typeVal, unsigned char normalized, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlValidateProgram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix4fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix3fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix2fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform4iv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform3iv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform2iv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform1iv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform4fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform3fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform2fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform1fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform4i(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t v0, int32_t v1, int32_t v2, int32_t v3);
void QOpenGLFunctions_3_3_Compatibility_GlUniform3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t v0, int32_t v1, int32_t v2);
void QOpenGLFunctions_3_3_Compatibility_GlUniform2i(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t v0, int32_t v1);
void QOpenGLFunctions_3_3_Compatibility_GlUniform1i(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t v0);
void QOpenGLFunctions_3_3_Compatibility_GlUniform4f(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, float v0, float v1, float v2, float v3);
void QOpenGLFunctions_3_3_Compatibility_GlUniform3f(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, float v0, float v1, float v2);
void QOpenGLFunctions_3_3_Compatibility_GlUniform2f(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, float v0, float v1);
void QOpenGLFunctions_3_3_Compatibility_GlUniform1f(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, float v0);
void QOpenGLFunctions_3_3_Compatibility_GlUseProgram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program);
void QOpenGLFunctions_3_3_Compatibility_GlLinkProgram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsShader(QOpenGLFunctions_3_3_Compatibility* self, uint32_t shader);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsProgram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program);
void QOpenGLFunctions_3_3_Compatibility_GlGetVertexAttribiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetVertexAttribfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetVertexAttribdv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t pname, double* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetUniformiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, int32_t location, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetUniformfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, int32_t location, float* params);
int32_t QOpenGLFunctions_3_3_Compatibility_GlGetUniformLocation(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlGetShaderSource(QOpenGLFunctions_3_3_Compatibility* self, uint32_t shader, int32_t bufSize, int32_t* length, GLchar* source);
void QOpenGLFunctions_3_3_Compatibility_GlGetShaderInfoLog(QOpenGLFunctions_3_3_Compatibility* self, uint32_t shader, int32_t bufSize, int32_t* length, GLchar* infoLog);
void QOpenGLFunctions_3_3_Compatibility_GlGetShaderiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t shader, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetProgramInfoLog(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, int32_t bufSize, int32_t* length, GLchar* infoLog);
void QOpenGLFunctions_3_3_Compatibility_GlGetProgramiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t pname, int32_t* params);
int32_t QOpenGLFunctions_3_3_Compatibility_GlGetAttribLocation(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlGetAttachedShaders(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, int32_t maxCount, int32_t* count, uint32_t* obj);
void QOpenGLFunctions_3_3_Compatibility_GlEnableVertexAttribArray(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlDisableVertexAttribArray(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlDetachShader(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t shader);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteShader(QOpenGLFunctions_3_3_Compatibility* self, uint32_t shader);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteProgram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program);
uint32_t QOpenGLFunctions_3_3_Compatibility_GlCreateShader(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal);
uint32_t QOpenGLFunctions_3_3_Compatibility_GlCreateProgram(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlCompileShader(QOpenGLFunctions_3_3_Compatibility* self, uint32_t shader);
void QOpenGLFunctions_3_3_Compatibility_GlBindAttribLocation(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t index, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlAttachShader(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t shader);
void QOpenGLFunctions_3_3_Compatibility_GlStencilMaskSeparate(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlStencilFuncSeparate(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t func, int32_t ref, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlStencilOpSeparate(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t sfail, uint32_t dpfail, uint32_t dppass);
void QOpenGLFunctions_3_3_Compatibility_GlBlendEquationSeparate(QOpenGLFunctions_3_3_Compatibility* self, uint32_t modeRGB, uint32_t modeAlpha);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix4x3fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix3x4fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix4x2fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix2x4fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix3x2fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniformMatrix2x3fv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsVertexArray(QOpenGLFunctions_3_3_Compatibility* self, uint32_t array);
void QOpenGLFunctions_3_3_Compatibility_GlGenVertexArrays(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t* arrays);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteVertexArrays(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* arrays);
void QOpenGLFunctions_3_3_Compatibility_GlBindVertexArray(QOpenGLFunctions_3_3_Compatibility* self, uint32_t array);
void QOpenGLFunctions_3_3_Compatibility_GlFlushMappedBufferRange(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int64_t offset, int64_t length);
void* QOpenGLFunctions_3_3_Compatibility_GlMapBufferRange(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int64_t offset, int64_t length, uint32_t access);
void QOpenGLFunctions_3_3_Compatibility_GlFramebufferTextureLayer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t texture, int32_t level, int32_t layer);
void QOpenGLFunctions_3_3_Compatibility_GlRenderbufferStorageMultisample(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t samples, uint32_t internalformat, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlBlitFramebuffer(QOpenGLFunctions_3_3_Compatibility* self, int32_t srcX0, int32_t srcY0, int32_t srcX1, int32_t srcY1, int32_t dstX0, int32_t dstY0, int32_t dstX1, int32_t dstY1, uint32_t mask, uint32_t filter);
void QOpenGLFunctions_3_3_Compatibility_GlGenerateMipmap(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target);
void QOpenGLFunctions_3_3_Compatibility_GlGetFramebufferAttachmentParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlFramebufferRenderbuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t renderbuffertarget, uint32_t renderbuffer);
void QOpenGLFunctions_3_3_Compatibility_GlFramebufferTexture3D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level, int32_t zoffset);
void QOpenGLFunctions_3_3_Compatibility_GlFramebufferTexture2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_3_Compatibility_GlFramebufferTexture1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_3_Compatibility_GlGenFramebuffers(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t* framebuffers);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteFramebuffers(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* framebuffers);
void QOpenGLFunctions_3_3_Compatibility_GlBindFramebuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t framebuffer);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsFramebuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t framebuffer);
void QOpenGLFunctions_3_3_Compatibility_GlGetRenderbufferParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlRenderbufferStorage(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlGenRenderbuffers(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t* renderbuffers);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteRenderbuffers(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* renderbuffers);
void QOpenGLFunctions_3_3_Compatibility_GlBindRenderbuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t renderbuffer);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsRenderbuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t renderbuffer);
const uint8_t* QOpenGLFunctions_3_3_Compatibility_GlGetStringi(QOpenGLFunctions_3_3_Compatibility* self, uint32_t name, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlClearBufferfi(QOpenGLFunctions_3_3_Compatibility* self, uint32_t buffer, int32_t drawbuffer, float depth, int32_t stencil);
void QOpenGLFunctions_3_3_Compatibility_GlClearBufferfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t buffer, int32_t drawbuffer, const float* value);
void QOpenGLFunctions_3_3_Compatibility_GlClearBufferuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t buffer, int32_t drawbuffer, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlClearBufferiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t buffer, int32_t drawbuffer, const int32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexParameterIuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexParameterIiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexParameterIuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const uint32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexParameterIiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlUniform4uiv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform3uiv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform2uiv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform1uiv(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlUniform4ui(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3);
void QOpenGLFunctions_3_3_Compatibility_GlUniform3ui(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, uint32_t v0, uint32_t v1, uint32_t v2);
void QOpenGLFunctions_3_3_Compatibility_GlUniform2ui(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, uint32_t v0, uint32_t v1);
void QOpenGLFunctions_3_3_Compatibility_GlUniform1ui(QOpenGLFunctions_3_3_Compatibility* self, int32_t location, uint32_t v0);
int32_t QOpenGLFunctions_3_3_Compatibility_GlGetFragDataLocation(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlBindFragDataLocation(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t color, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlGetUniformuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, int32_t location, uint32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetVertexAttribIuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetVertexAttribIiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribIPointer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlEndConditionalRender(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlBeginConditionalRender(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlClampColor(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t clamp);
void QOpenGLFunctions_3_3_Compatibility_GlBindBufferBase(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index, uint32_t buffer);
void QOpenGLFunctions_3_3_Compatibility_GlBindBufferRange(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index, uint32_t buffer, int64_t offset, int64_t size);
void QOpenGLFunctions_3_3_Compatibility_GlEndTransformFeedback(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlBeginTransformFeedback(QOpenGLFunctions_3_3_Compatibility* self, uint32_t primitiveMode);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsEnabledi(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlDisablei(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlEnablei(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlGetIntegeriV(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index, int32_t* data);
void QOpenGLFunctions_3_3_Compatibility_GlGetBooleaniV(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index, unsigned char* data);
void QOpenGLFunctions_3_3_Compatibility_GlColorMaski(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
void QOpenGLFunctions_3_3_Compatibility_GlCopyBufferSubData(QOpenGLFunctions_3_3_Compatibility* self, uint32_t readTarget, uint32_t writeTarget, int64_t readOffset, int64_t writeOffset, int64_t size);
void QOpenGLFunctions_3_3_Compatibility_GlUniformBlockBinding(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t uniformBlockIndex, uint32_t uniformBlockBinding);
void QOpenGLFunctions_3_3_Compatibility_GlGetActiveUniformBlockName(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t uniformBlockIndex, int32_t bufSize, int32_t* length, GLchar* uniformBlockName);
void QOpenGLFunctions_3_3_Compatibility_GlGetActiveUniformBlockiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t uniformBlockIndex, uint32_t pname, int32_t* params);
uint32_t QOpenGLFunctions_3_3_Compatibility_GlGetUniformBlockIndex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, const GLchar* uniformBlockName);
void QOpenGLFunctions_3_3_Compatibility_GlGetActiveUniformName(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t uniformIndex, int32_t bufSize, int32_t* length, GLchar* uniformName);
void QOpenGLFunctions_3_3_Compatibility_GlGetActiveUniformsiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, int32_t uniformCount, const uint32_t* uniformIndices, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlPrimitiveRestartIndex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index);
void QOpenGLFunctions_3_3_Compatibility_GlTexBuffer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, uint32_t buffer);
void QOpenGLFunctions_3_3_Compatibility_GlDrawElementsInstanced(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t instancecount);
void QOpenGLFunctions_3_3_Compatibility_GlDrawArraysInstanced(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t first, int32_t count, int32_t instancecount);
void QOpenGLFunctions_3_3_Compatibility_GlSampleMaski(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlGetMultisamplefv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, uint32_t index, float* val);
void QOpenGLFunctions_3_3_Compatibility_GlTexImage3DMultisample(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t samples, int32_t internalformat, int32_t width, int32_t height, int32_t depth, unsigned char fixedsamplelocations);
void QOpenGLFunctions_3_3_Compatibility_GlTexImage2DMultisample(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t samples, int32_t internalformat, int32_t width, int32_t height, unsigned char fixedsamplelocations);
void QOpenGLFunctions_3_3_Compatibility_GlGetInteger64v(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int64_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlProvokingVertex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlDrawElementsInstancedBaseVertex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t instancecount, int32_t basevertex);
void QOpenGLFunctions_3_3_Compatibility_GlDrawRangeElementsBaseVertex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, uint32_t start, uint32_t end, int32_t count, uint32_t typeVal, const void* indices, int32_t basevertex);
void QOpenGLFunctions_3_3_Compatibility_GlDrawElementsBaseVertex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t basevertex);
void QOpenGLFunctions_3_3_Compatibility_GlFramebufferTexture(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t attachment, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_3_Compatibility_GlGetBufferParameteri64v(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int64_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetInteger64iV(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t index, int64_t* data);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP2uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP2ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP1uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribP1ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColorP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* color);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColorP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t color);
void QOpenGLFunctions_3_3_Compatibility_GlColorP4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* color);
void QOpenGLFunctions_3_3_Compatibility_GlColorP4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t color);
void QOpenGLFunctions_3_3_Compatibility_GlColorP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* color);
void QOpenGLFunctions_3_3_Compatibility_GlColorP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t color);
void QOpenGLFunctions_3_3_Compatibility_GlNormalP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlNormalP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP2uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP2ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP1uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoordP1ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP2uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP2ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP1uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* coords);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordP1ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t coords);
void QOpenGLFunctions_3_3_Compatibility_GlVertexP4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexP4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexP3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexP3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexP2uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, const uint32_t* value);
void QOpenGLFunctions_3_3_Compatibility_GlVertexP2ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, uint32_t value);
void QOpenGLFunctions_3_3_Compatibility_GlGetQueryObjectui64v(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id, uint32_t pname, uint64_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetQueryObjecti64v(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id, uint32_t pname, int64_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlQueryCounter(QOpenGLFunctions_3_3_Compatibility* self, uint32_t id, uint32_t target);
void QOpenGLFunctions_3_3_Compatibility_GlGetSamplerParameterIuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetSamplerParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetSamplerParameterIiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetSamplerParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlSamplerParameterIuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, const uint32_t* param);
void QOpenGLFunctions_3_3_Compatibility_GlSamplerParameterIiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, const int32_t* param);
void QOpenGLFunctions_3_3_Compatibility_GlSamplerParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, const float* param);
void QOpenGLFunctions_3_3_Compatibility_GlSamplerParameterf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlSamplerParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, const int32_t* param);
void QOpenGLFunctions_3_3_Compatibility_GlSamplerParameteri(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlBindSampler(QOpenGLFunctions_3_3_Compatibility* self, uint32_t unit, uint32_t sampler);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsSampler(QOpenGLFunctions_3_3_Compatibility* self, uint32_t sampler);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteSamplers(QOpenGLFunctions_3_3_Compatibility* self, int32_t count, const uint32_t* samplers);
void QOpenGLFunctions_3_3_Compatibility_GlGenSamplers(QOpenGLFunctions_3_3_Compatibility* self, int32_t count, uint32_t* samplers);
int32_t QOpenGLFunctions_3_3_Compatibility_GlGetFragDataIndex(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlBindFragDataLocationIndexed(QOpenGLFunctions_3_3_Compatibility* self, uint32_t program, uint32_t colorNumber, uint32_t index, const GLchar* name);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribDivisor(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t divisor);
void QOpenGLFunctions_3_3_Compatibility_GlTranslatef(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlTranslated(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlScalef(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlScaled(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlRotatef(QOpenGLFunctions_3_3_Compatibility* self, float angle, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlRotated(QOpenGLFunctions_3_3_Compatibility* self, double angle, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlPushMatrix(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlPopMatrix(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlOrtho(QOpenGLFunctions_3_3_Compatibility* self, double left, double right, double bottom, double top, double zNear, double zFar);
void QOpenGLFunctions_3_3_Compatibility_GlMultMatrixd(QOpenGLFunctions_3_3_Compatibility* self, const double* m);
void QOpenGLFunctions_3_3_Compatibility_GlMultMatrixf(QOpenGLFunctions_3_3_Compatibility* self, const float* m);
void QOpenGLFunctions_3_3_Compatibility_GlMatrixMode(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlLoadMatrixd(QOpenGLFunctions_3_3_Compatibility* self, const double* m);
void QOpenGLFunctions_3_3_Compatibility_GlLoadMatrixf(QOpenGLFunctions_3_3_Compatibility* self, const float* m);
void QOpenGLFunctions_3_3_Compatibility_GlLoadIdentity(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlFrustum(QOpenGLFunctions_3_3_Compatibility* self, double left, double right, double bottom, double top, double zNear, double zFar);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlIsList(QOpenGLFunctions_3_3_Compatibility* self, uint32_t list);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexGeniv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexGenfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexGendv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, double* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexEnviv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetTexEnvfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetPolygonStipple(QOpenGLFunctions_3_3_Compatibility* self, uint8_t* mask);
void QOpenGLFunctions_3_3_Compatibility_GlGetPixelMapusv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mapVal, uint16_t* values);
void QOpenGLFunctions_3_3_Compatibility_GlGetPixelMapuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mapVal, uint32_t* values);
void QOpenGLFunctions_3_3_Compatibility_GlGetPixelMapfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mapVal, float* values);
void QOpenGLFunctions_3_3_Compatibility_GlGetMaterialiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetMaterialfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetMapiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t query, int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlGetMapfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t query, float* v);
void QOpenGLFunctions_3_3_Compatibility_GlGetMapdv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t query, double* v);
void QOpenGLFunctions_3_3_Compatibility_GlGetLightiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t light, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetLightfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t light, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetClipPlane(QOpenGLFunctions_3_3_Compatibility* self, uint32_t plane, double* equation);
void QOpenGLFunctions_3_3_Compatibility_GlDrawPixels(QOpenGLFunctions_3_3_Compatibility* self, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Compatibility_GlCopyPixels(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t width, int32_t height, uint32_t typeVal);
void QOpenGLFunctions_3_3_Compatibility_GlPixelMapusv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mapVal, int32_t mapsize, const uint16_t* values);
void QOpenGLFunctions_3_3_Compatibility_GlPixelMapuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mapVal, int32_t mapsize, const uint32_t* values);
void QOpenGLFunctions_3_3_Compatibility_GlPixelMapfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mapVal, int32_t mapsize, const float* values);
void QOpenGLFunctions_3_3_Compatibility_GlPixelTransferi(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlPixelTransferf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlPixelZoom(QOpenGLFunctions_3_3_Compatibility* self, float xfactor, float yfactor);
void QOpenGLFunctions_3_3_Compatibility_GlAlphaFunc(QOpenGLFunctions_3_3_Compatibility* self, uint32_t func, float ref);
void QOpenGLFunctions_3_3_Compatibility_GlEvalPoint2(QOpenGLFunctions_3_3_Compatibility* self, int32_t i, int32_t j);
void QOpenGLFunctions_3_3_Compatibility_GlEvalMesh2(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t i1Val, int32_t i2Val, int32_t j1, int32_t j2);
void QOpenGLFunctions_3_3_Compatibility_GlEvalPoint1(QOpenGLFunctions_3_3_Compatibility* self, int32_t i);
void QOpenGLFunctions_3_3_Compatibility_GlEvalMesh1(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode, int32_t i1Val, int32_t i2Val);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord2fv(QOpenGLFunctions_3_3_Compatibility* self, const float* u);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord2f(QOpenGLFunctions_3_3_Compatibility* self, float u, float v);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord2dv(QOpenGLFunctions_3_3_Compatibility* self, const double* u);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord2d(QOpenGLFunctions_3_3_Compatibility* self, double u, double v);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord1fv(QOpenGLFunctions_3_3_Compatibility* self, const float* u);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord1f(QOpenGLFunctions_3_3_Compatibility* self, float u);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord1dv(QOpenGLFunctions_3_3_Compatibility* self, const double* u);
void QOpenGLFunctions_3_3_Compatibility_GlEvalCoord1d(QOpenGLFunctions_3_3_Compatibility* self, double u);
void QOpenGLFunctions_3_3_Compatibility_GlMapGrid2f(QOpenGLFunctions_3_3_Compatibility* self, int32_t un, float u1Val, float u2Val, int32_t vn, float v1, float v2);
void QOpenGLFunctions_3_3_Compatibility_GlMapGrid2d(QOpenGLFunctions_3_3_Compatibility* self, int32_t un, double u1Val, double u2Val, int32_t vn, double v1, double v2);
void QOpenGLFunctions_3_3_Compatibility_GlMapGrid1f(QOpenGLFunctions_3_3_Compatibility* self, int32_t un, float u1Val, float u2Val);
void QOpenGLFunctions_3_3_Compatibility_GlMapGrid1d(QOpenGLFunctions_3_3_Compatibility* self, int32_t un, double u1Val, double u2Val);
void QOpenGLFunctions_3_3_Compatibility_GlMap2f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, float u1Val, float u2Val, int32_t ustride, int32_t uorder, float v1, float v2, int32_t vstride, int32_t vorder, const float* points);
void QOpenGLFunctions_3_3_Compatibility_GlMap2d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, double u1Val, double u2Val, int32_t ustride, int32_t uorder, double v1, double v2, int32_t vstride, int32_t vorder, const double* points);
void QOpenGLFunctions_3_3_Compatibility_GlMap1f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, float u1Val, float u2Val, int32_t stride, int32_t order, const float* points);
void QOpenGLFunctions_3_3_Compatibility_GlMap1d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, double u1Val, double u2Val, int32_t stride, int32_t order, const double* points);
void QOpenGLFunctions_3_3_Compatibility_GlPushAttrib(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlPopAttrib(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlAccum(QOpenGLFunctions_3_3_Compatibility* self, uint32_t op, float value);
void QOpenGLFunctions_3_3_Compatibility_GlIndexMask(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlClearIndex(QOpenGLFunctions_3_3_Compatibility* self, float c);
void QOpenGLFunctions_3_3_Compatibility_GlClearAccum(QOpenGLFunctions_3_3_Compatibility* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_3_Compatibility_GlPushName(QOpenGLFunctions_3_3_Compatibility* self, uint32_t name);
void QOpenGLFunctions_3_3_Compatibility_GlPopName(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlPassThrough(QOpenGLFunctions_3_3_Compatibility* self, float token);
void QOpenGLFunctions_3_3_Compatibility_GlLoadName(QOpenGLFunctions_3_3_Compatibility* self, uint32_t name);
void QOpenGLFunctions_3_3_Compatibility_GlInitNames(QOpenGLFunctions_3_3_Compatibility* self);
int32_t QOpenGLFunctions_3_3_Compatibility_GlRenderMode(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlSelectBuffer(QOpenGLFunctions_3_3_Compatibility* self, int32_t size, uint32_t* buffer);
void QOpenGLFunctions_3_3_Compatibility_GlFeedbackBuffer(QOpenGLFunctions_3_3_Compatibility* self, int32_t size, uint32_t typeVal, float* buffer);
void QOpenGLFunctions_3_3_Compatibility_GlTexGeniv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexGeni(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlTexGenfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexGenf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlTexGendv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, const double* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexGend(QOpenGLFunctions_3_3_Compatibility* self, uint32_t coord, uint32_t pname, double param);
void QOpenGLFunctions_3_3_Compatibility_GlTexEnviv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexEnvi(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlTexEnvfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlTexEnvf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlShadeModel(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlPolygonStipple(QOpenGLFunctions_3_3_Compatibility* self, const uint8_t* mask);
void QOpenGLFunctions_3_3_Compatibility_GlMaterialiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlMateriali(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlMaterialfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlMaterialf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlLineStipple(QOpenGLFunctions_3_3_Compatibility* self, int32_t factor, uint16_t pattern);
void QOpenGLFunctions_3_3_Compatibility_GlLightModeliv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlLightModeli(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlLightModelfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlLightModelf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlLightiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t light, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlLighti(QOpenGLFunctions_3_3_Compatibility* self, uint32_t light, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlLightfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t light, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlLightf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t light, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlFogiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlFogi(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Compatibility_GlFogfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlFogf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Compatibility_GlColorMaterial(QOpenGLFunctions_3_3_Compatibility* self, uint32_t face, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlClipPlane(QOpenGLFunctions_3_3_Compatibility* self, uint32_t plane, const double* equation);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y, int16_t z, int16_t w);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t z, int32_t w);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z, float w);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex4d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z, double w);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y, int16_t z);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t z);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex3d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertex2d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4s(QOpenGLFunctions_3_3_Compatibility* self, int16_t s, int16_t t, int16_t r, int16_t q);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4i(QOpenGLFunctions_3_3_Compatibility* self, int32_t s, int32_t t, int32_t r, int32_t q);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4f(QOpenGLFunctions_3_3_Compatibility* self, float s, float t, float r, float q);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord4d(QOpenGLFunctions_3_3_Compatibility* self, double s, double t, double r, double q);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t s, int16_t t, int16_t r);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t s, int32_t t, int32_t r);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3f(QOpenGLFunctions_3_3_Compatibility* self, float s, float t, float r);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord3d(QOpenGLFunctions_3_3_Compatibility* self, double s, double t, double r);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2s(QOpenGLFunctions_3_3_Compatibility* self, int16_t s, int16_t t);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2i(QOpenGLFunctions_3_3_Compatibility* self, int32_t s, int32_t t);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2f(QOpenGLFunctions_3_3_Compatibility* self, float s, float t);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord2d(QOpenGLFunctions_3_3_Compatibility* self, double s, double t);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1s(QOpenGLFunctions_3_3_Compatibility* self, int16_t s);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1i(QOpenGLFunctions_3_3_Compatibility* self, int32_t s);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1f(QOpenGLFunctions_3_3_Compatibility* self, float s);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoord1d(QOpenGLFunctions_3_3_Compatibility* self, double s);
void QOpenGLFunctions_3_3_Compatibility_GlRectsv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v1, const int16_t* v2);
void QOpenGLFunctions_3_3_Compatibility_GlRects(QOpenGLFunctions_3_3_Compatibility* self, int16_t x1, int16_t y1, int16_t x2, int16_t y2);
void QOpenGLFunctions_3_3_Compatibility_GlRectiv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v1, const int32_t* v2);
void QOpenGLFunctions_3_3_Compatibility_GlRecti(QOpenGLFunctions_3_3_Compatibility* self, int32_t x1, int32_t y1, int32_t x2, int32_t y2);
void QOpenGLFunctions_3_3_Compatibility_GlRectfv(QOpenGLFunctions_3_3_Compatibility* self, const float* v1, const float* v2);
void QOpenGLFunctions_3_3_Compatibility_GlRectf(QOpenGLFunctions_3_3_Compatibility* self, float x1, float y1, float x2, float y2);
void QOpenGLFunctions_3_3_Compatibility_GlRectdv(QOpenGLFunctions_3_3_Compatibility* self, const double* v1, const double* v2);
void QOpenGLFunctions_3_3_Compatibility_GlRectd(QOpenGLFunctions_3_3_Compatibility* self, double x1, double y1, double x2, double y2);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y, int16_t z, int16_t w);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t z, int32_t w);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z, float w);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos4d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z, double w);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y, int16_t z);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t z);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos3d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlRasterPos2d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t nx, int16_t ny, int16_t nz);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t nx, int32_t ny, int32_t nz);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3f(QOpenGLFunctions_3_3_Compatibility* self, float nx, float ny, float nz);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3d(QOpenGLFunctions_3_3_Compatibility* self, double nx, double ny, double nz);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3bv(QOpenGLFunctions_3_3_Compatibility* self, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlNormal3b(QOpenGLFunctions_3_3_Compatibility* self, signed char nx, signed char ny, signed char nz);
void QOpenGLFunctions_3_3_Compatibility_GlIndexsv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexs(QOpenGLFunctions_3_3_Compatibility* self, int16_t c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexiv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexi(QOpenGLFunctions_3_3_Compatibility* self, int32_t c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexfv(QOpenGLFunctions_3_3_Compatibility* self, const float* c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexf(QOpenGLFunctions_3_3_Compatibility* self, float c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexdv(QOpenGLFunctions_3_3_Compatibility* self, const double* c);
void QOpenGLFunctions_3_3_Compatibility_GlIndexd(QOpenGLFunctions_3_3_Compatibility* self, double c);
void QOpenGLFunctions_3_3_Compatibility_GlEnd(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlEdgeFlagv(QOpenGLFunctions_3_3_Compatibility* self, const unsigned char* flag);
void QOpenGLFunctions_3_3_Compatibility_GlEdgeFlag(QOpenGLFunctions_3_3_Compatibility* self, unsigned char flag);
void QOpenGLFunctions_3_3_Compatibility_GlColor4usv(QOpenGLFunctions_3_3_Compatibility* self, const uint16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4us(QOpenGLFunctions_3_3_Compatibility* self, uint16_t red, uint16_t green, uint16_t blue, uint16_t alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4uiv(QOpenGLFunctions_3_3_Compatibility* self, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t red, uint32_t green, uint32_t blue, uint32_t alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4ubv(QOpenGLFunctions_3_3_Compatibility* self, const uint8_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4ub(QOpenGLFunctions_3_3_Compatibility* self, uint8_t red, uint8_t green, uint8_t blue, uint8_t alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4s(QOpenGLFunctions_3_3_Compatibility* self, int16_t red, int16_t green, int16_t blue, int16_t alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4i(QOpenGLFunctions_3_3_Compatibility* self, int32_t red, int32_t green, int32_t blue, int32_t alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4f(QOpenGLFunctions_3_3_Compatibility* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4d(QOpenGLFunctions_3_3_Compatibility* self, double red, double green, double blue, double alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor4bv(QOpenGLFunctions_3_3_Compatibility* self, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor4b(QOpenGLFunctions_3_3_Compatibility* self, signed char red, signed char green, signed char blue, signed char alpha);
void QOpenGLFunctions_3_3_Compatibility_GlColor3usv(QOpenGLFunctions_3_3_Compatibility* self, const uint16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3us(QOpenGLFunctions_3_3_Compatibility* self, uint16_t red, uint16_t green, uint16_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3uiv(QOpenGLFunctions_3_3_Compatibility* self, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t red, uint32_t green, uint32_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3ubv(QOpenGLFunctions_3_3_Compatibility* self, const uint8_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3ub(QOpenGLFunctions_3_3_Compatibility* self, uint8_t red, uint8_t green, uint8_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t red, int16_t green, int16_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t red, int32_t green, int32_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3f(QOpenGLFunctions_3_3_Compatibility* self, float red, float green, float blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3d(QOpenGLFunctions_3_3_Compatibility* self, double red, double green, double blue);
void QOpenGLFunctions_3_3_Compatibility_GlColor3bv(QOpenGLFunctions_3_3_Compatibility* self, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlColor3b(QOpenGLFunctions_3_3_Compatibility* self, signed char red, signed char green, signed char blue);
void QOpenGLFunctions_3_3_Compatibility_GlBitmap(QOpenGLFunctions_3_3_Compatibility* self, int32_t width, int32_t height, float xorig, float yorig, float xmove, float ymove, const uint8_t* bitmap);
void QOpenGLFunctions_3_3_Compatibility_GlBegin(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlListBase(QOpenGLFunctions_3_3_Compatibility* self, uint32_t base);
uint32_t QOpenGLFunctions_3_3_Compatibility_GlGenLists(QOpenGLFunctions_3_3_Compatibility* self, int32_t range);
void QOpenGLFunctions_3_3_Compatibility_GlDeleteLists(QOpenGLFunctions_3_3_Compatibility* self, uint32_t list, int32_t range);
void QOpenGLFunctions_3_3_Compatibility_GlCallLists(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, uint32_t typeVal, const void* lists);
void QOpenGLFunctions_3_3_Compatibility_GlCallList(QOpenGLFunctions_3_3_Compatibility* self, uint32_t list);
void QOpenGLFunctions_3_3_Compatibility_GlEndList(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlNewList(QOpenGLFunctions_3_3_Compatibility* self, uint32_t list, uint32_t mode);
void QOpenGLFunctions_3_3_Compatibility_GlPushClientAttrib(QOpenGLFunctions_3_3_Compatibility* self, uint32_t mask);
void QOpenGLFunctions_3_3_Compatibility_GlPopClientAttrib(QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_GlPrioritizeTextures(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* textures, const float* priorities);
unsigned char QOpenGLFunctions_3_3_Compatibility_GlAreTexturesResident(QOpenGLFunctions_3_3_Compatibility* self, int32_t n, const uint32_t* textures, unsigned char* residences);
void QOpenGLFunctions_3_3_Compatibility_GlVertexPointer(QOpenGLFunctions_3_3_Compatibility* self, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlTexCoordPointer(QOpenGLFunctions_3_3_Compatibility* self, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlNormalPointer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlInterleavedArrays(QOpenGLFunctions_3_3_Compatibility* self, uint32_t format, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlIndexPointer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlEnableClientState(QOpenGLFunctions_3_3_Compatibility* self, uint32_t array);
void QOpenGLFunctions_3_3_Compatibility_GlEdgeFlagPointer(QOpenGLFunctions_3_3_Compatibility* self, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlDisableClientState(QOpenGLFunctions_3_3_Compatibility* self, uint32_t array);
void QOpenGLFunctions_3_3_Compatibility_GlColorPointer(QOpenGLFunctions_3_3_Compatibility* self, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlArrayElement(QOpenGLFunctions_3_3_Compatibility* self, int32_t i);
void QOpenGLFunctions_3_3_Compatibility_GlResetMinmax(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target);
void QOpenGLFunctions_3_3_Compatibility_GlResetHistogram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target);
void QOpenGLFunctions_3_3_Compatibility_GlMinmax(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, unsigned char sink);
void QOpenGLFunctions_3_3_Compatibility_GlHistogram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t width, uint32_t internalformat, unsigned char sink);
void QOpenGLFunctions_3_3_Compatibility_GlGetMinmaxParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetMinmaxParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetMinmax(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, unsigned char reset, uint32_t format, uint32_t typeVal, void* values);
void QOpenGLFunctions_3_3_Compatibility_GlGetHistogramParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetHistogramParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetHistogram(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, unsigned char reset, uint32_t format, uint32_t typeVal, void* values);
void QOpenGLFunctions_3_3_Compatibility_GlSeparableFilter2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, const void* row, const void* column);
void QOpenGLFunctions_3_3_Compatibility_GlGetSeparableFilter(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t format, uint32_t typeVal, void* row, void* column, void* span);
void QOpenGLFunctions_3_3_Compatibility_GlGetConvolutionParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetConvolutionParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetConvolutionFilter(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t format, uint32_t typeVal, void* image);
void QOpenGLFunctions_3_3_Compatibility_GlCopyConvolutionFilter2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Compatibility_GlCopyConvolutionFilter1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t x, int32_t y, int32_t width);
void QOpenGLFunctions_3_3_Compatibility_GlConvolutionParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlConvolutionParameteri(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t params);
void QOpenGLFunctions_3_3_Compatibility_GlConvolutionParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlConvolutionParameterf(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float params);
void QOpenGLFunctions_3_3_Compatibility_GlConvolutionFilter2D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, const void* image);
void QOpenGLFunctions_3_3_Compatibility_GlConvolutionFilter1D(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t width, uint32_t format, uint32_t typeVal, const void* image);
void QOpenGLFunctions_3_3_Compatibility_GlCopyColorSubTable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t start, int32_t x, int32_t y, int32_t width);
void QOpenGLFunctions_3_3_Compatibility_GlColorSubTable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t start, int32_t count, uint32_t format, uint32_t typeVal, const void* data);
void QOpenGLFunctions_3_3_Compatibility_GlGetColorTableParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetColorTableParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Compatibility_GlGetColorTable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t format, uint32_t typeVal, void* table);
void QOpenGLFunctions_3_3_Compatibility_GlCopyColorTable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t x, int32_t y, int32_t width);
void QOpenGLFunctions_3_3_Compatibility_GlColorTableParameteriv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Compatibility_GlColorTableParameterfv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Compatibility_GlColorTable(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, uint32_t internalformat, int32_t width, uint32_t format, uint32_t typeVal, const void* table);
void QOpenGLFunctions_3_3_Compatibility_GlMultTransposeMatrixd(QOpenGLFunctions_3_3_Compatibility* self, const double* m);
void QOpenGLFunctions_3_3_Compatibility_GlMultTransposeMatrixf(QOpenGLFunctions_3_3_Compatibility* self, const float* m);
void QOpenGLFunctions_3_3_Compatibility_GlLoadTransposeMatrixd(QOpenGLFunctions_3_3_Compatibility* self, const double* m);
void QOpenGLFunctions_3_3_Compatibility_GlLoadTransposeMatrixf(QOpenGLFunctions_3_3_Compatibility* self, const float* m);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int16_t s, int16_t t, int16_t r, int16_t q);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t s, int32_t t, int32_t r, int32_t q);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, float s, float t, float r, float q);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord4d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, double s, double t, double r, double q);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int16_t s, int16_t t, int16_t r);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t s, int32_t t, int32_t r);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, float s, float t, float r);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord3d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, double s, double t, double r);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int16_t s, int16_t t);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t s, int32_t t);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, float s, float t);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord2d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, double s, double t);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int16_t s);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, int32_t s);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, float s);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlMultiTexCoord1d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t target, double s);
void QOpenGLFunctions_3_3_Compatibility_GlClientActiveTexture(QOpenGLFunctions_3_3_Compatibility* self, uint32_t texture);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y, int16_t z);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y, int32_t z);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos3d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2s(QOpenGLFunctions_3_3_Compatibility* self, int16_t x, int16_t y);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2i(QOpenGLFunctions_3_3_Compatibility* self, int32_t x, int32_t y);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2f(QOpenGLFunctions_3_3_Compatibility* self, float x, float y);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlWindowPos2d(QOpenGLFunctions_3_3_Compatibility* self, double x, double y);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColorPointer(QOpenGLFunctions_3_3_Compatibility* self, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3usv(QOpenGLFunctions_3_3_Compatibility* self, const uint16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3us(QOpenGLFunctions_3_3_Compatibility* self, uint16_t red, uint16_t green, uint16_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3uiv(QOpenGLFunctions_3_3_Compatibility* self, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t red, uint32_t green, uint32_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3ubv(QOpenGLFunctions_3_3_Compatibility* self, const uint8_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3ub(QOpenGLFunctions_3_3_Compatibility* self, uint8_t red, uint8_t green, uint8_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3sv(QOpenGLFunctions_3_3_Compatibility* self, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3s(QOpenGLFunctions_3_3_Compatibility* self, int16_t red, int16_t green, int16_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3iv(QOpenGLFunctions_3_3_Compatibility* self, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3i(QOpenGLFunctions_3_3_Compatibility* self, int32_t red, int32_t green, int32_t blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3fv(QOpenGLFunctions_3_3_Compatibility* self, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3f(QOpenGLFunctions_3_3_Compatibility* self, float red, float green, float blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3dv(QOpenGLFunctions_3_3_Compatibility* self, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3d(QOpenGLFunctions_3_3_Compatibility* self, double red, double green, double blue);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3bv(QOpenGLFunctions_3_3_Compatibility* self, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlSecondaryColor3b(QOpenGLFunctions_3_3_Compatibility* self, signed char red, signed char green, signed char blue);
void QOpenGLFunctions_3_3_Compatibility_GlFogCoordPointer(QOpenGLFunctions_3_3_Compatibility* self, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Compatibility_GlFogCoorddv(QOpenGLFunctions_3_3_Compatibility* self, const double* coord);
void QOpenGLFunctions_3_3_Compatibility_GlFogCoordd(QOpenGLFunctions_3_3_Compatibility* self, double coord);
void QOpenGLFunctions_3_3_Compatibility_GlFogCoordfv(QOpenGLFunctions_3_3_Compatibility* self, const float* coord);
void QOpenGLFunctions_3_3_Compatibility_GlFogCoordf(QOpenGLFunctions_3_3_Compatibility* self, float coord);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4usv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4ubv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint8_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int16_t x, int16_t y, int16_t z, int16_t w);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, float x, float y, float z, float w);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, double x, double y, double z, double w);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4bv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Nusv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Nuiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Nubv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint8_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Nub(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint8_t x, uint8_t y, uint8_t z, uint8_t w);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Nsv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Niv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib4Nbv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib3sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib3s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int16_t x, int16_t y, int16_t z);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib3fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib3f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, float x, float y, float z);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib3dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib3d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, double x, double y, double z);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib2sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib2s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int16_t x, int16_t y);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib2fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib2f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, float x, float y);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib2dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib2d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, double x, double y);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib1sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib1s(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int16_t x);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib1fv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const float* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib1f(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, float x);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib1dv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const double* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttrib1d(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, double x);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4usv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4ubv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint8_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4sv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int16_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4bv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const signed char* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI3uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI2uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI1uiv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const uint32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI3iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI2iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI1iv(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, const int32_t* v);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t x, uint32_t y, uint32_t z, uint32_t w);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI3ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t x, uint32_t y, uint32_t z);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI2ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t x, uint32_t y);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI1ui(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, uint32_t x);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI4i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int32_t x, int32_t y, int32_t z, int32_t w);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI3i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int32_t x, int32_t y, int32_t z);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI2i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int32_t x, int32_t y);
void QOpenGLFunctions_3_3_Compatibility_GlVertexAttribI1i(QOpenGLFunctions_3_3_Compatibility* self, uint32_t index, int32_t x);
void QOpenGLFunctions_3_3_Compatibility_OnInitializeOpenGLFunctions(QOpenGLFunctions_3_3_Compatibility* self, intptr_t slot);
bool QOpenGLFunctions_3_3_Compatibility_QBaseInitializeOpenGLFunctions(QOpenGLFunctions_3_3_Compatibility* self);
bool QOpenGLFunctions_3_3_Compatibility_IsInitialized(const QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_OnIsInitialized(const QOpenGLFunctions_3_3_Compatibility* self, intptr_t slot);
bool QOpenGLFunctions_3_3_Compatibility_QBaseIsInitialized(const QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_SetOwningContext(QOpenGLFunctions_3_3_Compatibility* self, const QOpenGLContext* context);
void QOpenGLFunctions_3_3_Compatibility_OnSetOwningContext(QOpenGLFunctions_3_3_Compatibility* self, intptr_t slot);
void QOpenGLFunctions_3_3_Compatibility_QBaseSetOwningContext(QOpenGLFunctions_3_3_Compatibility* self, const QOpenGLContext* context);
QOpenGLContext* QOpenGLFunctions_3_3_Compatibility_OwningContext(const QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_OnOwningContext(const QOpenGLFunctions_3_3_Compatibility* self, intptr_t slot);
QOpenGLContext* QOpenGLFunctions_3_3_Compatibility_QBaseOwningContext(const QOpenGLFunctions_3_3_Compatibility* self);
void QOpenGLFunctions_3_3_Compatibility_Delete(QOpenGLFunctions_3_3_Compatibility* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
