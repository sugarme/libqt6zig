// THIS FILE IS AUTOMATICALLY GENERATED

pub const C = @import("qtzig");

pub const Emulation_enums = @import("posix-restricted-qtermwidget/libEmulation.zig").enums;
pub const Filter_enums = @import("posix-restricted-qtermwidget/libFilter.zig").enums;
pub const KeyboardTranslator_enums = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").enums;
pub const abstractannotationitemdelegate_enums = @import("extras-ktexteditor/libabstractannotationitemdelegate.zig").enums;
pub const achievement_enums = @import("extras-attica/libachievement.zig").enums;
pub const annotationinterface_enums = @import("extras-ktexteditor/libannotationinterface.zig").enums;
pub const applicationlauncherjob_enums = @import("extras-kio/libapplicationlauncherjob.zig").enums;
pub const askuseractioninterface_enums = @import("extras-kio/libaskuseractioninterface.zig").enums;
pub const attica = @import("extras-attica/libversion.zig").attica;
pub const attica__accountbalance = @import("extras-attica/libaccountbalance.zig").attica__accountbalance;
pub const attica__achievement = @import("extras-attica/libachievement.zig").attica__achievement;
pub const attica__activity = @import("extras-attica/libactivity.zig").attica__activity;
pub const attica__basejob = @import("extras-attica/libatticabasejob.zig").attica__basejob;
pub const attica__buildservice = @import("extras-attica/libbuildservice.zig").attica__buildservice;
pub const attica__buildservicejob = @import("extras-attica/libbuildservicejob.zig").attica__buildservicejob;
pub const attica__buildservicejoboutput = @import("extras-attica/libbuildservicejoboutput.zig").attica__buildservicejoboutput;
pub const attica__category = @import("extras-attica/libcategory.zig").attica__category;
pub const attica__comment = @import("extras-attica/libcomment.zig").attica__comment;
pub const attica__config = @import("extras-attica/libconfig.zig").attica__config;
pub const attica__content = @import("extras-attica/libcontent.zig").attica__content;
pub const attica__deletejob = @import("extras-attica/libdeletejob.zig").attica__deletejob;
pub const attica__distribution = @import("extras-attica/libdistribution.zig").attica__distribution;
pub const attica__downloaddescription = @import("extras-attica/libdownloaddescription.zig").attica__downloaddescription;
pub const attica__downloaditem = @import("extras-attica/libdownloaditem.zig").attica__downloaditem;
pub const attica__event = @import("extras-attica/libevent.zig").attica__event;
pub const attica__field = @import("extras-attica/libpublisher.zig").attica__field;
pub const attica__folder = @import("extras-attica/libfolder.zig").attica__folder;
pub const attica__forum = @import("extras-attica/libforum.zig").attica__forum;
pub const attica__getjob = @import("extras-attica/libgetjob.zig").attica__getjob;
pub const attica__homepageentry = @import("extras-attica/libhomepageentry.zig").attica__homepageentry;
pub const attica__homepagetype = @import("extras-attica/libhomepagetype.zig").attica__homepagetype;
pub const attica__icon = @import("extras-attica/libicon.zig").attica__icon;
pub const attica__knowledgebaseentry = @import("extras-attica/libknowledgebaseentry.zig").attica__knowledgebaseentry;
pub const attica__license = @import("extras-attica/liblicense.zig").attica__license;
pub const attica__message = @import("extras-attica/libmessage.zig").attica__message;
pub const attica__metadata = @import("extras-attica/libmetadata.zig").attica__metadata;
pub const attica__person = @import("extras-attica/libperson.zig").attica__person;
pub const attica__platformdependent = @import("extras-attica/libplatformdependent.zig").attica__platformdependent;
pub const attica__platformdependentv2 = @import("extras-attica/libplatformdependent_v2.zig").attica__platformdependentv2;
pub const attica__platformdependentv3 = @import("extras-attica/libplatformdependent_v3.zig").attica__platformdependentv3;
pub const attica__postjob = @import("extras-attica/libpostjob.zig").attica__postjob;
pub const attica__privatedata = @import("extras-attica/libprivatedata.zig").attica__privatedata;
pub const attica__project = @import("extras-attica/libproject.zig").attica__project;
pub const attica__provider = @import("extras-attica/libprovider.zig").attica__provider;
pub const attica__providermanager = @import("extras-attica/libprovidermanager.zig").attica__providermanager;
pub const attica__publisher = @import("extras-attica/libpublisher.zig").attica__publisher;
pub const attica__publisherfield = @import("extras-attica/libpublisherfield.zig").attica__publisherfield;
pub const attica__putjob = @import("extras-attica/libputjob.zig").attica__putjob;
pub const attica__remoteaccount = @import("extras-attica/libremoteaccount.zig").attica__remoteaccount;
pub const attica__target = @import("extras-attica/libbuildservice.zig").attica__target;
pub const attica__topic = @import("extras-attica/libtopic.zig").attica__topic;
pub const attica__utils = @import("extras-attica/libatticautils.zig").attica__utils;
pub const atticabasejob_enums = @import("extras-attica/libatticabasejob.zig").enums;
pub const attribute_enums = @import("extras-ktexteditor/libattribute.zig").enums;
pub const authinfo_enums = @import("extras-kio/libauthinfo.zig").enums;
pub const battery_enums = @import("extras-solid/libbattery.zig").enums;
pub const codecompletionmodel_enums = @import("extras-ktexteditor/libcodecompletionmodel.zig").enums;
pub const codecompletionmodelcontrollerinterface_enums = @import("extras-ktexteditor/libcodecompletionmodelcontrollerinterface.zig").enums;
pub const comment_enums = @import("extras-attica/libcomment.zig").enums;
pub const copyjob_enums = @import("extras-kio/libcopyjob.zig").enums;
pub const definition_enums = @import("extras-ksyntaxhighlighting/libdefinition.zig").enums;
pub const deviceinterface_enums = @import("extras-solid/libdeviceinterface.zig").enums;
pub const disambiguated_t = @import("libqnamespace.zig").disambiguated_t;
pub const document_enums = @import("extras-ktexteditor/libdocument.zig").enums;
pub const documentcursor_enums = @import("extras-ktexteditor/libdocumentcursor.zig").enums;
pub const downloaddescription_enums = @import("extras-attica/libdownloaddescription.zig").enums;
pub const dropjob_enums = @import("extras-kio/libdropjob.zig").enums;
pub const enginebase_enums = @import("extras-knewstuff/libenginebase.zig").enums;
pub const entry_enums = @import("extras-knewstuff/libentry.zig").enums;
pub const errorcode_enums = @import("extras-knewstuff/liberrorcode.zig").enums;
pub const fileinfoextension_enums = @import("extras-kparts/libfileinfoextension.zig").enums;
pub const fileundomanager_enums = @import("extras-kio/libfileundomanager.zig").enums;
pub const foldingregion_enums = @import("extras-ksyntaxhighlighting/libfoldingregion.zig").enums;
pub const forwardingworkerbase_enums = @import("extras-kio/libforwardingworkerbase.zig").enums;
pub const framesvg_enums = @import("extras-ksvg/libframesvg.zig").enums;
pub const genericinterface_enums = @import("extras-solid/libgenericinterface.zig").enums;
pub const global_enums = @import("extras-kio/libglobal.zig").enums;
pub const job_base_enums = @import("extras-kio/libjob_base.zig").enums;
pub const jobuidelegateextension_enums = @import("extras-kio/libjobuidelegateextension.zig").enums;
pub const kaboutapplicationdialog = @import("extras-kxmlgui/libkaboutapplicationdialog.zig").kaboutapplicationdialog;
pub const kaboutapplicationdialog_enums = @import("extras-kxmlgui/libkaboutapplicationdialog.zig").enums;
pub const kaboutcomponent = @import("extras-kcoreaddons/libkaboutdata.zig").kaboutcomponent;
pub const kaboutdata = @import("extras-kcoreaddons/libkaboutdata.zig").kaboutdata;
pub const kaboutdata_enums = @import("extras-kcoreaddons/libkaboutdata.zig").enums;
pub const kaboutlicense = @import("extras-kcoreaddons/libkaboutdata.zig").kaboutlicense;
pub const kaboutperson = @import("extras-kcoreaddons/libkaboutdata.zig").kaboutperson;
pub const kaboutplugindialog = @import("extras-kxmlgui/libkaboutplugindialog.zig").kaboutplugindialog;
pub const kaboutplugindialog_enums = @import("extras-kxmlgui/libkaboutplugindialog.zig").enums;
pub const kabstractfileitemactionplugin = @import("extras-kio/libkabstractfileitemactionplugin.zig").kabstractfileitemactionplugin;
pub const kabstractviewadapter = @import("extras-kio/libkabstractviewadapter.zig").kabstractviewadapter;
pub const kabstractviewadapter_enums = @import("extras-kio/libkabstractviewadapter.zig").enums;
pub const kabstractwidgetjobtracker = @import("extras-kjobwidgets/libkabstractwidgetjobtracker.zig").kabstractwidgetjobtracker;
pub const kacceleratormanager = @import("extras-kwidgetsaddons/libkacceleratormanager.zig").kacceleratormanager;
pub const kacl = @import("extras-kio/libkacl.zig").kacl;
pub const kactioncategory = @import("extras-kxmlgui/libkactioncategory.zig").kactioncategory;
pub const kactioncollection = @import("extras-kxmlgui/libkactioncollection.zig").kactioncollection;
pub const kactionmenu = @import("extras-kwidgetsaddons/libkactionmenu.zig").kactionmenu;
pub const kactionselector = @import("extras-kwidgetsaddons/libkactionselector.zig").kactionselector;
pub const kactionselector_enums = @import("extras-kwidgetsaddons/libkactionselector.zig").enums;
pub const kadjustingscrollarea = @import("extras-kwidgetsaddons/libkadjustingscrollarea.zig").kadjustingscrollarea;
pub const kanimatedbutton = @import("extras-kwidgetsaddons/libkanimatedbutton.zig").kanimatedbutton;
pub const kapplicationtrader = @import("extras-kservice/libkapplicationtrader.zig").kapplicationtrader;
pub const kassistantdialog = @import("extras-kwidgetsaddons/libkassistantdialog.zig").kassistantdialog;
pub const kauthorized = @import("extras-kconfig/libkauthorized.zig").kauthorized;
pub const kauthorized_enums = @import("extras-kconfig/libkauthorized.zig").enums;
pub const kautosavefile = @import("extras-kcoreaddons/libkautosavefile.zig").kautosavefile;
pub const kbackup = @import("extras-kcoreaddons/libkbackup.zig").kbackup;
pub const kbookmark = @import("extras-kbookmarks/libkbookmark.zig").kbookmark;
pub const kbookmark__list = @import("extras-kbookmarks/libkbookmark.zig").kbookmark__list;
pub const kbookmark_enums = @import("extras-kbookmarks/libkbookmark.zig").enums;
pub const kbookmarkaction = @import("extras-kbookmarks/libkbookmarkaction.zig").kbookmarkaction;
pub const kbookmarkactioninterface = @import("extras-kbookmarks/libkbookmarkactioninterface.zig").kbookmarkactioninterface;
pub const kbookmarkactionmenu = @import("extras-kbookmarks/libkbookmarkactionmenu.zig").kbookmarkactionmenu;
pub const kbookmarkcontextmenu = @import("extras-kbookmarks/libkbookmarkcontextmenu.zig").kbookmarkcontextmenu;
pub const kbookmarkdialog = @import("extras-kbookmarks/libkbookmarkdialog.zig").kbookmarkdialog;
pub const kbookmarkgroup = @import("extras-kbookmarks/libkbookmark.zig").kbookmarkgroup;
pub const kbookmarkmanager = @import("extras-kbookmarks/libkbookmarkmanager.zig").kbookmarkmanager;
pub const kbookmarkmenu = @import("extras-kbookmarks/libkbookmarkmenu.zig").kbookmarkmenu;
pub const kbookmarkowner = @import("extras-kbookmarks/libkbookmarkowner.zig").kbookmarkowner;
pub const kbookmarkowner__futurebookmark = @import("extras-kbookmarks/libkbookmarkowner.zig").kbookmarkowner__futurebookmark;
pub const kbookmarkowner_enums = @import("extras-kbookmarks/libkbookmarkowner.zig").enums;
pub const kbreadcrumbselectionmodel = @import("extras-kitemmodels/libkbreadcrumbselectionmodel.zig").kbreadcrumbselectionmodel;
pub const kbreadcrumbselectionmodel_enums = @import("extras-kitemmodels/libkbreadcrumbselectionmodel.zig").enums;
pub const kbugreport = @import("extras-kxmlgui/libkbugreport.zig").kbugreport;
pub const kbuildsycocaprogressdialog = @import("extras-kio/libkbuildsycocaprogressdialog.zig").kbuildsycocaprogressdialog;
pub const kbusyindicatorwidget = @import("extras-kwidgetsaddons/libkbusyindicatorwidget.zig").kbusyindicatorwidget;
pub const kcapacitybar = @import("extras-kwidgetsaddons/libkcapacitybar.zig").kcapacitybar;
pub const kcapacitybar_enums = @import("extras-kwidgetsaddons/libkcapacitybar.zig").enums;
pub const kcategorizedsortfilterproxymodel = @import("extras-kitemviews/libkcategorizedsortfilterproxymodel.zig").kcategorizedsortfilterproxymodel;
pub const kcategorizedsortfilterproxymodel_enums = @import("extras-kitemviews/libkcategorizedsortfilterproxymodel.zig").enums;
pub const kcategorizedview = @import("extras-kitemviews/libkcategorizedview.zig").kcategorizedview;
pub const kcategorydrawer = @import("extras-kitemviews/libkcategorydrawer.zig").kcategorydrawer;
pub const kcharmacroexpander = @import("extras-kcoreaddons/libkmacroexpander.zig").kcharmacroexpander;
pub const kcharselect = @import("extras-kwidgetsaddons/libkcharselect.zig").kcharselect;
pub const kcharselect_enums = @import("extras-kwidgetsaddons/libkcharselect.zig").enums;
pub const kcharsets = @import("extras-kcodecs/libkcharsets.zig").kcharsets;
pub const kcheckableproxymodel = @import("extras-kitemmodels/libkcheckableproxymodel.zig").kcheckableproxymodel;
pub const kcodecaction = @import("extras-kconfigwidgets/libkcodecaction.zig").kcodecaction;
pub const kcodecs = @import("extras-kcodecs/libkcodecs.zig").kcodecs;
pub const kcodecs__codec = @import("extras-kcodecs/libkcodecs.zig").kcodecs__codec;
pub const kcodecs__decoder = @import("extras-kcodecs/libkcodecs.zig").kcodecs__decoder;
pub const kcodecs__encoder = @import("extras-kcodecs/libkcodecs.zig").kcodecs__encoder;
pub const kcodecs_enums = @import("extras-kcodecs/libkcodecs.zig").enums;
pub const kcollapsiblegroupbox = @import("extras-kwidgetsaddons/libkcollapsiblegroupbox.zig").kcollapsiblegroupbox;
pub const kcolorbutton = @import("extras-kwidgetsaddons/libkcolorbutton.zig").kcolorbutton;
pub const kcolorcollection = @import("extras-kguiaddons/libkcolorcollection.zig").kcolorcollection;
pub const kcolorcollection_enums = @import("extras-kguiaddons/libkcolorcollection.zig").enums;
pub const kcolorcombo = @import("extras-kwidgetsaddons/libkcolorcombo.zig").kcolorcombo;
pub const kcolormimedata = @import("extras-kguiaddons/libkcolormimedata.zig").kcolormimedata;
pub const kcolorscheme = @import("extras-kcolorscheme/libkcolorscheme.zig").kcolorscheme;
pub const kcolorscheme_enums = @import("extras-kcolorscheme/libkcolorscheme.zig").enums;
pub const kcolorschememanager = @import("extras-kcolorscheme/libkcolorschememanager.zig").kcolorschememanager;
pub const kcolorschememenu = @import("extras-kconfigwidgets/libkcolorschememenu.zig").kcolorschememenu;
pub const kcolorschememodel = @import("extras-kcolorscheme/libkcolorschememodel.zig").kcolorschememodel;
pub const kcolorschememodel_enums = @import("extras-kcolorscheme/libkcolorschememodel.zig").enums;
pub const kcolorschemewatcher = @import("extras-kguiaddons/libkcolorschemewatcher.zig").kcolorschemewatcher;
pub const kcolorschemewatcher_enums = @import("extras-kguiaddons/libkcolorschemewatcher.zig").enums;
pub const kcolorutils = @import("extras-kguiaddons/libkcolorutils.zig").kcolorutils;
pub const kcolumnheadersmodel = @import("extras-kitemmodels/libkcolumnheadersmodel.zig").kcolumnheadersmodel;
pub const kcolumnheadersmodel_enums = @import("extras-kitemmodels/libkcolumnheadersmodel.zig").enums;
pub const kcolumnresizer = @import("extras-kwidgetsaddons/libkcolumnresizer.zig").kcolumnresizer;
pub const kcombobox = @import("extras-kcompletion/libkcombobox.zig").kcombobox;
pub const kcommandbar = @import("extras-kconfigwidgets/libkcommandbar.zig").kcommandbar;
pub const kcommandbar__actiongroup = @import("extras-kconfigwidgets/libkcommandbar.zig").kcommandbar__actiongroup;
pub const kcompletion = @import("extras-kcompletion/libkcompletion.zig").kcompletion;
pub const kcompletion_enums = @import("extras-kcompletion/libkcompletion.zig").enums;
pub const kcompletionbase = @import("extras-kcompletion/libkcompletionbase.zig").kcompletionbase;
pub const kcompletionbase_enums = @import("extras-kcompletion/libkcompletionbase.zig").enums;
pub const kcompletionbox = @import("extras-kcompletion/libkcompletionbox.zig").kcompletionbox;
pub const kcompletionmatches = @import("extras-kcompletion/libkcompletionmatches.zig").kcompletionmatches;
pub const kcompositejob = @import("extras-kcoreaddons/libkcompositejob.zig").kcompositejob;
pub const kconfig = @import("extras-kconfig/libkconfig.zig").kconfig;
pub const kconfig_enums = @import("extras-kconfig/libkconfig.zig").enums;
pub const kconfigbase = @import("extras-kconfig/libkconfigbase.zig").kconfigbase;
pub const kconfigbase_enums = @import("extras-kconfig/libkconfigbase.zig").enums;
pub const kconfigcompilersignallingitem = @import("extras-kconfig/libkcoreconfigskeleton.zig").kconfigcompilersignallingitem;
pub const kconfigconversioncheck__supported = @import("extras-kconfig/libkconfigconversioncheck_p.zig").kconfigconversioncheck__supported;
pub const kconfigconversioncheck__unsupported = @import("extras-kconfig/libkconfigconversioncheck_p.zig").kconfigconversioncheck__unsupported;
pub const kconfigdialog = @import("extras-kconfigwidgets/libkconfigdialog.zig").kconfigdialog;
pub const kconfigdialogmanager = @import("extras-kconfigwidgets/libkconfigdialogmanager.zig").kconfigdialogmanager;
pub const kconfiggroup = @import("extras-kconfig/libkconfiggroup.zig").kconfiggroup;
pub const kconfiggui = @import("extras-kconfig/libkconfiggui.zig").kconfiggui;
pub const kconfigloader = @import("extras-kconfig/libkconfigloader.zig").kconfigloader;
pub const kconfigskeleton = @import("extras-kconfig/libkconfigskeleton.zig").kconfigskeleton;
pub const kconfigskeleton__itemcolor = @import("extras-kconfig/libkconfigskeleton.zig").kconfigskeleton__itemcolor;
pub const kconfigskeleton__itemfont = @import("extras-kconfig/libkconfigskeleton.zig").kconfigskeleton__itemfont;
pub const kconfigskeletonitem = @import("extras-kconfig/libkcoreconfigskeleton.zig").kconfigskeletonitem;
pub const kconfigviewstatesaver = @import("extras-kconfigwidgets/libkconfigviewstatesaver.zig").kconfigviewstatesaver;
pub const kconfigwatcher = @import("extras-kconfig/libkconfigwatcher.zig").kconfigwatcher;
pub const kcontextualhelpbutton = @import("extras-kwidgetsaddons/libkcontextualhelpbutton.zig").kcontextualhelpbutton;
pub const kcoreaddons = @import("extras-kcoreaddons/libkcoreaddons.zig").kcoreaddons;
pub const kcoreconfigskeleton = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton;
pub const kcoreconfigskeleton__itembool = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itembool;
pub const kcoreconfigskeleton__itemdatetime = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemdatetime;
pub const kcoreconfigskeleton__itemdouble = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemdouble;
pub const kcoreconfigskeleton__itemenum = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemenum;
pub const kcoreconfigskeleton__itemenum__choice = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemenum__choice;
pub const kcoreconfigskeleton__itemint = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemint;
pub const kcoreconfigskeleton__itemintlist = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemintlist;
pub const kcoreconfigskeleton__itemlonglong = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemlonglong;
pub const kcoreconfigskeleton__itempassword = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itempassword;
pub const kcoreconfigskeleton__itempath = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itempath;
pub const kcoreconfigskeleton__itempathlist = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itempathlist;
pub const kcoreconfigskeleton__itempoint = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itempoint;
pub const kcoreconfigskeleton__itempointf = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itempointf;
pub const kcoreconfigskeleton__itemproperty = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemproperty;
pub const kcoreconfigskeleton__itemrect = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemrect;
pub const kcoreconfigskeleton__itemrectf = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemrectf;
pub const kcoreconfigskeleton__itemsize = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemsize;
pub const kcoreconfigskeleton__itemsizef = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemsizef;
pub const kcoreconfigskeleton__itemstring = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemstring;
pub const kcoreconfigskeleton__itemstringlist = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemstringlist;
pub const kcoreconfigskeleton__itemuint = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemuint;
pub const kcoreconfigskeleton__itemulonglong = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemulonglong;
pub const kcoreconfigskeleton__itemurl = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemurl;
pub const kcoreconfigskeleton__itemurllist = @import("extras-kconfig/libkcoreconfigskeleton.zig").kcoreconfigskeleton__itemurllist;
pub const kcoreconfigskeleton_enums = @import("extras-kconfig/libkcoreconfigskeleton.zig").enums;
pub const kcoredirlister = @import("extras-kio/libkcoredirlister.zig").kcoredirlister;
pub const kcoredirlister_enums = @import("extras-kio/libkcoredirlister.zig").enums;
pub const kcoreurlnavigator = @import("extras-kio/libkcoreurlnavigator.zig").kcoreurlnavigator;
pub const kcountry = @import("extras-ki18n/libkcountry.zig").kcountry;
pub const kcountryflagemojiiconengine = @import("extras-kguiaddons/libkcountryflagemojiiconengine.zig").kcountryflagemojiiconengine;
pub const kcountrysubdivision = @import("extras-ki18n/libkcountrysubdivision.zig").kcountrysubdivision;
pub const kcrash = @import("extras-kcrash/libkcrash.zig").kcrash;
pub const kcrash_enums = @import("extras-kcrash/libkcrash.zig").enums;
pub const kcrash_kaboutdata = @import("extras-kcoreaddons/libkaboutdata.zig").kcrash;
pub const kcursor = @import("extras-kwidgetsaddons/libkcursor.zig").kcursor;
pub const kcursorsaver = @import("extras-kguiaddons/libkcursorsaver.zig").kcursorsaver;
pub const kdatecombobox = @import("extras-kwidgetsaddons/libkdatecombobox.zig").kdatecombobox;
pub const kdatecombobox_enums = @import("extras-kwidgetsaddons/libkdatecombobox.zig").enums;
pub const kdatepicker = @import("extras-kwidgetsaddons/libkdatepicker.zig").kdatepicker;
pub const kdatepickerpopup = @import("extras-kwidgetsaddons/libkdatepickerpopup.zig").kdatepickerpopup;
pub const kdatepickerpopup_enums = @import("extras-kwidgetsaddons/libkdatepickerpopup.zig").enums;
pub const kdatetimeedit = @import("extras-kwidgetsaddons/libkdatetimeedit.zig").kdatetimeedit;
pub const kdatetimeedit_enums = @import("extras-kwidgetsaddons/libkdatetimeedit.zig").enums;
pub const kdatevalidator = @import("extras-kguiaddons/libkdatevalidator.zig").kdatevalidator;
pub const kde = @import("extras-kiconthemes/libkiconloader.zig").kde;
pub const kdescendantsproxymodel = @import("extras-kitemmodels/libkdescendantsproxymodel.zig").kdescendantsproxymodel;
pub const kdescendantsproxymodel_enums = @import("extras-kitemmodels/libkdescendantsproxymodel.zig").enums;
pub const kdesktopfile = @import("extras-kconfig/libkdesktopfile.zig").kdesktopfile;
pub const kdesktopfileaction = @import("extras-kconfig/libkdesktopfileaction.zig").kdesktopfileaction;
pub const kdialogjobuidelegate = @import("extras-kjobwidgets/libkdialogjobuidelegate.zig").kdialogjobuidelegate;
pub const kdirlister = @import("extras-kio/libkdirlister.zig").kdirlister;
pub const kdirmodel = @import("extras-kio/libkdirmodel.zig").kdirmodel;
pub const kdirmodel_enums = @import("extras-kio/libkdirmodel.zig").enums;
pub const kdiroperator = @import("extras-kio/libkdiroperator.zig").kdiroperator;
pub const kdiroperator_enums = @import("extras-kio/libkdiroperator.zig").enums;
pub const kdirsortfilterproxymodel = @import("extras-kio/libkdirsortfilterproxymodel.zig").kdirsortfilterproxymodel;
pub const kdirwatch = @import("extras-kcoreaddons/libkdirwatch.zig").kdirwatch;
pub const kdirwatch_enums = @import("extras-kcoreaddons/libkdirwatch.zig").enums;
pub const kdragwidgetdecoratorbase = @import("extras-kwidgetsaddons/libkdragwidgetdecorator.zig").kdragwidgetdecoratorbase;
pub const kdualaction = @import("extras-kwidgetsaddons/libkdualaction.zig").kdualaction;
pub const keditlistwidget = @import("extras-kwidgetsaddons/libkeditlistwidget.zig").keditlistwidget;
pub const keditlistwidget__customeditor = @import("extras-kwidgetsaddons/libkeditlistwidget.zig").keditlistwidget__customeditor;
pub const keditlistwidget_enums = @import("extras-kwidgetsaddons/libkeditlistwidget.zig").enums;
pub const kedittoolbar = @import("extras-kxmlgui/libkedittoolbar.zig").kedittoolbar;
pub const kemailaddress = @import("extras-kcodecs/libkemailaddress.zig").kemailaddress;
pub const kemailaddress_enums = @import("extras-kcodecs/libkemailaddress.zig").enums;
pub const kemailclientlauncherjob = @import("extras-kio/libkemailclientlauncherjob.zig").kemailclientlauncherjob;
pub const kemailsettings = @import("extras-kconfig/libkemailsettings.zig").kemailsettings;
pub const kemailsettings_enums = @import("extras-kconfig/libkemailsettings.zig").enums;
pub const kemailvalidator = @import("extras-kcompletion/libkemailvalidator.zig").kemailvalidator;
pub const kencodingfiledialog = @import("extras-kio/libkencodingfiledialog.zig").kencodingfiledialog;
pub const kencodingfiledialog__result = @import("extras-kio/libkencodingfiledialog.zig").kencodingfiledialog__result;
pub const kencodingprober = @import("extras-kcodecs/libkencodingprober.zig").kencodingprober;
pub const kencodingprober_enums = @import("extras-kcodecs/libkencodingprober.zig").enums;
pub const kextendableitemdelegate = @import("extras-kitemviews/libkextendableitemdelegate.zig").kextendableitemdelegate;
pub const kextendableitemdelegate_enums = @import("extras-kitemviews/libkextendableitemdelegate.zig").enums;
pub const kextracolumnsproxymodel = @import("extras-kitemmodels/libkextracolumnsproxymodel.zig").kextracolumnsproxymodel;
pub const keychain_enums = @import("extras-qtkeychain/libkeychain.zig").enums;
pub const kfile = @import("extras-kio/libkfile.zig").kfile;
pub const kfile_enums = @import("extras-kio/libkfile.zig").enums;
pub const kfilecopytomenu = @import("extras-kio/libkfilecopytomenu.zig").kfilecopytomenu;
pub const kfilecustomdialog = @import("extras-kio/libkfilecustomdialog.zig").kfilecustomdialog;
pub const kfilefilter = @import("extras-kio/libkfilefilter.zig").kfilefilter;
pub const kfilefiltercombo = @import("extras-kio/libkfilefiltercombo.zig").kfilefiltercombo;
pub const kfileitem = @import("extras-kio/libkfileitem.zig").kfileitem;
pub const kfileitem__mostlocalurlresult = @import("extras-kio/libkfileitem.zig").kfileitem__mostlocalurlresult;
pub const kfileitem_enums = @import("extras-kio/libkfileitem.zig").enums;
pub const kfileitemactions = @import("extras-kio/libkfileitemactions.zig").kfileitemactions;
pub const kfileitemactions_enums = @import("extras-kio/libkfileitemactions.zig").enums;
pub const kfileitemdelegate = @import("extras-kio/libkfileitemdelegate.zig").kfileitemdelegate;
pub const kfileitemdelegate_enums = @import("extras-kio/libkfileitemdelegate.zig").enums;
pub const kfileitemlist = @import("extras-kio/libkfileitem.zig").kfileitemlist;
pub const kfileitemlistproperties = @import("extras-kio/libkfileitemlistproperties.zig").kfileitemlistproperties;
pub const kfileplaceeditdialog = @import("extras-kio/libkfileplaceeditdialog.zig").kfileplaceeditdialog;
pub const kfileplacesmodel = @import("extras-kio/libkfileplacesmodel.zig").kfileplacesmodel;
pub const kfileplacesmodel_enums = @import("extras-kio/libkfileplacesmodel.zig").enums;
pub const kfileplacesview = @import("extras-kio/libkfileplacesview.zig").kfileplacesview;
pub const kfilepreviewgenerator = @import("extras-kio/libkfilepreviewgenerator.zig").kfilepreviewgenerator;
pub const kfilesystemtype = @import("extras-kcoreaddons/libkfilesystemtype.zig").kfilesystemtype;
pub const kfilesystemtype_enums = @import("extras-kcoreaddons/libkfilesystemtype.zig").enums;
pub const kfileutils = @import("extras-kcoreaddons/libkfileutils.zig").kfileutils;
pub const kfilewidget = @import("extras-kio/libkfilewidget.zig").kfilewidget;
pub const kfilewidget_enums = @import("extras-kio/libkfilewidget.zig").enums;
pub const kfind = @import("extras-ktextwidgets/libkfind.zig").kfind;
pub const kfind_enums = @import("extras-ktextwidgets/libkfind.zig").enums;
pub const kfinddialog = @import("extras-ktextwidgets/libkfinddialog.zig").kfinddialog;
pub const kfontaction = @import("extras-kwidgetsaddons/libkfontaction.zig").kfontaction;
pub const kfontchooser = @import("extras-kwidgetsaddons/libkfontchooser.zig").kfontchooser;
pub const kfontchooser_enums = @import("extras-kwidgetsaddons/libkfontchooser.zig").enums;
pub const kfontchooserdialog = @import("extras-kwidgetsaddons/libkfontchooserdialog.zig").kfontchooserdialog;
pub const kfontrequester = @import("extras-kwidgetsaddons/libkfontrequester.zig").kfontrequester;
pub const kfontsizeaction = @import("extras-kwidgetsaddons/libkfontsizeaction.zig").kfontsizeaction;
pub const kfontutils = @import("extras-kguiaddons/libkfontutils.zig").kfontutils;
pub const kfontutils_enums = @import("extras-kguiaddons/libkfontutils.zig").enums;
pub const kformat = @import("extras-kcoreaddons/libkformat.zig").kformat;
pub const kformat_enums = @import("extras-kcoreaddons/libkformat.zig").enums;
pub const kfuzzymatcher__range = @import("extras-kcoreaddons/libkfuzzymatcher.zig").kfuzzymatcher__range;
pub const kfuzzymatcher__result = @import("extras-kcoreaddons/libkfuzzymatcher.zig").kfuzzymatcher__result;
pub const kfuzzymatcher_enums = @import("extras-kcoreaddons/libkfuzzymatcher.zig").enums;
pub const kglobalaccel = @import("foss-extras-kglobalaccel/libkglobalaccel.zig").kglobalaccel;
pub const kglobalaccel_enums = @import("foss-extras-kglobalaccel/libkglobalaccel.zig").enums;
pub const kglobalshortcutinfo = @import("foss-extras-kglobalaccel/libkglobalshortcutinfo.zig").kglobalshortcutinfo;
pub const kgradientselector = @import("extras-kwidgetsaddons/libkselector.zig").kgradientselector;
pub const kguiitem = @import("extras-kwidgetsaddons/libkguiitem.zig").kguiitem;
pub const khamburgermenu = @import("extras-kconfigwidgets/libkhamburgermenu.zig").khamburgermenu;
pub const khelpclient = @import("extras-kconfigwidgets/libkhelpclient.zig").khelpclient;
pub const khelpmenu = @import("extras-kxmlgui/libkhelpmenu.zig").khelpmenu;
pub const khelpmenu_enums = @import("extras-kxmlgui/libkhelpmenu.zig").enums;
pub const khistorycombobox = @import("extras-kcompletion/libkhistorycombobox.zig").khistorycombobox;
pub const kiconbutton = @import("extras-kiconthemes/libkiconbutton.zig").kiconbutton;
pub const kiconcolors = @import("extras-kiconthemes/libkiconcolors.zig").kiconcolors;
pub const kicondialog = @import("extras-kiconthemes/libkicondialog.zig").kicondialog;
pub const kiconeffect = @import("extras-kiconthemes/libkiconeffect.zig").kiconeffect;
pub const kiconeffect_enums = @import("extras-kiconthemes/libkiconeffect.zig").enums;
pub const kiconengine = @import("extras-kiconthemes/libkiconengine.zig").kiconengine;
pub const kiconloader = @import("extras-kiconthemes/libkiconloader.zig").kiconloader;
pub const kiconloader_enums = @import("extras-kiconthemes/libkiconloader.zig").enums;
pub const kicontheme = @import("extras-kiconthemes/libkicontheme.zig").kicontheme;
pub const kiconutils = @import("extras-kguiaddons/libkiconutils.zig").kiconutils;
pub const kimagefilepreview = @import("extras-kio/libkimagefilepreview.zig").kimagefilepreview;
pub const kio__applicationlauncherjob = @import("extras-kio/libapplicationlauncherjob.zig").kio__applicationlauncherjob;
pub const kio__askuseractioninterface = @import("extras-kio/libaskuseractioninterface.zig").kio__askuseractioninterface;
pub const kio__authinfo = @import("extras-kio/libauthinfo.zig").kio__authinfo;
pub const kio__batchrenamejob = @import("extras-kio/libbatchrenamejob.zig").kio__batchrenamejob;
pub const kio__chmodjob = @import("extras-kio/libchmodjob.zig").kio__chmodjob;
pub const kio__commandlauncherjob = @import("extras-kio/libcommandlauncherjob.zig").kio__commandlauncherjob;
pub const kio__copyjob = @import("extras-kio/libcopyjob.zig").kio__copyjob;
pub const kio__davjob = @import("extras-kio/libdavjob.zig").kio__davjob;
pub const kio__deletejob = @import("extras-kio/libdeletejob_1.zig").kio__deletejob;
pub const kio__deleteortrashjob = @import("extras-kio/libdeleteortrashjob.zig").kio__deleteortrashjob;
pub const kio__desktopexecparser = @import("extras-kio/libdesktopexecparser.zig").kio__desktopexecparser;
pub const kio__directorysizejob = @import("extras-kio/libdirectorysizejob.zig").kio__directorysizejob;
pub const kio__dndpopupmenuplugin = @import("extras-kio/libdndpopupmenuplugin.zig").kio__dndpopupmenuplugin;
pub const kio__dropjob = @import("extras-kio/libdropjob.zig").kio__dropjob;
pub const kio__emptytrashjob = @import("extras-kio/libemptytrashjob.zig").kio__emptytrashjob;
pub const kio__faviconrequestjob = @import("extras-kio/libfaviconrequestjob.zig").kio__faviconrequestjob;
pub const kio__filecopyjob = @import("extras-kio/libfilecopyjob.zig").kio__filecopyjob;
pub const kio__filejob = @import("extras-kio/libfilejob.zig").kio__filejob;
pub const kio__filesystemfreespacejob = @import("extras-kio/libfilesystemfreespacejob.zig").kio__filesystemfreespacejob;
pub const kio__fileundomanager = @import("extras-kio/libfileundomanager.zig").kio__fileundomanager;
pub const kio__fileundomanager__uiinterface = @import("extras-kio/libfileundomanager.zig").kio__fileundomanager__uiinterface;
pub const kio__forwardingworkerbase = @import("extras-kio/libforwardingworkerbase.zig").kio__forwardingworkerbase;
pub const kio__job = @import("extras-kio/libjob_base.zig").kio__job;
pub const kio__jobuidelegate = @import("extras-kio/libjobuidelegate.zig").kio__jobuidelegate;
pub const kio__jobuidelegateextension = @import("extras-kio/libjobuidelegateextension.zig").kio__jobuidelegateextension;
pub const kio__jobuidelegatefactory = @import("extras-kio/libjobuidelegatefactory.zig").kio__jobuidelegatefactory;
pub const kio__kurifiltersearchprovideractions = @import("extras-kio/libkurifiltersearchprovideractions.zig").kio__kurifiltersearchprovideractions;
pub const kio__listjob = @import("extras-kio/liblistjob.zig").kio__listjob;
pub const kio__metadata = @import("extras-kio/libmetadata_1.zig").kio__metadata;
pub const kio__mimetypefinderjob = @import("extras-kio/libmimetypefinderjob.zig").kio__mimetypefinderjob;
pub const kio__mimetypejob = @import("extras-kio/libmimetypejob.zig").kio__mimetypejob;
pub const kio__mkdirjob = @import("extras-kio/libmkdirjob.zig").kio__mkdirjob;
pub const kio__mkpathjob = @import("extras-kio/libmkpathjob.zig").kio__mkpathjob;
pub const kio__namefinderjob = @import("extras-kio/libnamefinderjob.zig").kio__namefinderjob;
pub const kio__openfilemanagerwindowjob = @import("extras-kio/libopenfilemanagerwindowjob.zig").kio__openfilemanagerwindowjob;
pub const kio__openurljob = @import("extras-kio/libopenurljob.zig").kio__openurljob;
pub const kio__openwith = @import("extras-kio/libopenwith.zig").kio__openwith;
pub const kio__openwith__acceptresult = @import("extras-kio/libopenwith.zig").kio__openwith__acceptresult;
pub const kio__openwithhandlerinterface = @import("extras-kio/libopenwithhandlerinterface.zig").kio__openwithhandlerinterface;
pub const kio__pastejob = @import("extras-kio/libpastejob.zig").kio__pastejob;
pub const kio__previewjob = @import("extras-kio/libpreviewjob.zig").kio__previewjob;
pub const kio__renamedialog = @import("extras-kio/librenamedialog.zig").kio__renamedialog;
pub const kio__renamefiledialog = @import("extras-kio/librenamefiledialog.zig").kio__renamefiledialog;
pub const kio__restorejob = @import("extras-kio/librestorejob.zig").kio__restorejob;
pub const kio__simplejob = @import("extras-kio/libsimplejob.zig").kio__simplejob;
pub const kio__skipdialog = @import("extras-kio/libskipdialog.zig").kio__skipdialog;
pub const kio__specialjob = @import("extras-kio/libspecialjob.zig").kio__specialjob;
pub const kio__sslui = @import("extras-kio/libsslui.zig").kio__sslui;
pub const kio__statjob = @import("extras-kio/libstatjob.zig").kio__statjob;
pub const kio__storedtransferjob = @import("extras-kio/libstoredtransferjob.zig").kio__storedtransferjob;
pub const kio__thumbnailcreator = @import("extras-kio/libthumbnailcreator.zig").kio__thumbnailcreator;
pub const kio__thumbnailrequest = @import("extras-kio/libthumbnailcreator.zig").kio__thumbnailrequest;
pub const kio__thumbnailresult = @import("extras-kio/libthumbnailcreator.zig").kio__thumbnailresult;
pub const kio__transferjob = @import("extras-kio/libtransferjob.zig").kio__transferjob;
pub const kio__udsentry = @import("extras-kio/libudsentry.zig").kio__udsentry;
pub const kio__untrustedprogramhandlerinterface = @import("extras-kio/libuntrustedprogramhandlerinterface.zig").kio__untrustedprogramhandlerinterface;
pub const kio__widgetsaskuseractionhandler = @import("extras-kio/libwidgetsaskuseractionhandler.zig").kio__widgetsaskuseractionhandler;
pub const kio__workerbase = @import("extras-kio/libworkerbase.zig").kio__workerbase;
pub const kio__workerfactory = @import("extras-kio/libworkerfactory.zig").kio__workerfactory;
pub const kio__workerresult = @import("extras-kio/libworkerbase.zig").kio__workerresult;
pub const kio_batchrenamejob = @import("extras-kio/libbatchrenamejob.zig").kio;
pub const kio_copyjob = @import("extras-kio/libcopyjob.zig").kio;
pub const kio_davjob = @import("extras-kio/libdavjob.zig").kio;
pub const kio_deletejob_1 = @import("extras-kio/libdeletejob_1.zig").kio;
pub const kio_directorysizejob = @import("extras-kio/libdirectorysizejob.zig").kio;
pub const kio_dropjob = @import("extras-kio/libdropjob.zig").kio;
pub const kio_emptytrashjob = @import("extras-kio/libemptytrashjob.zig").kio;
pub const kio_filecopyjob = @import("extras-kio/libfilecopyjob.zig").kio;
pub const kio_filejob = @import("extras-kio/libfilejob.zig").kio;
pub const kio_filesystemfreespacejob = @import("extras-kio/libfilesystemfreespacejob.zig").kio;
pub const kio_global = @import("extras-kio/libglobal.zig").kio;
pub const kio_job = @import("extras-kio/libjob.zig").kio;
pub const kio_jobtracker = @import("extras-kio/libjobtracker.zig").kio;
pub const kio_jobuidelegateextension = @import("extras-kio/libjobuidelegateextension.zig").kio;
pub const kio_jobuidelegatefactory = @import("extras-kio/libjobuidelegatefactory.zig").kio;
pub const kio_listjob = @import("extras-kio/liblistjob.zig").kio;
pub const kio_mimetypejob = @import("extras-kio/libmimetypejob.zig").kio;
pub const kio_mkdirjob = @import("extras-kio/libmkdirjob.zig").kio;
pub const kio_mkpathjob = @import("extras-kio/libmkpathjob.zig").kio;
pub const kio_openfilemanagerwindowjob = @import("extras-kio/libopenfilemanagerwindowjob.zig").kio;
pub const kio_paste = @import("extras-kio/libpaste.zig").kio;
pub const kio_pastejob = @import("extras-kio/libpastejob.zig").kio;
pub const kio_previewjob = @import("extras-kio/libpreviewjob.zig").kio;
pub const kio_restorejob = @import("extras-kio/librestorejob.zig").kio;
pub const kio_simplejob = @import("extras-kio/libsimplejob.zig").kio;
pub const kio_statjob = @import("extras-kio/libstatjob.zig").kio;
pub const kio_storedtransferjob = @import("extras-kio/libstoredtransferjob.zig").kio;
pub const kio_transferjob = @import("extras-kio/libtransferjob.zig").kio;
pub const kio_workerbase = @import("extras-kio/libworkerbase.zig").kio;
pub const kjob = @import("extras-kcoreaddons/libkjob.zig").kjob;
pub const kjob_enums = @import("extras-kcoreaddons/libkjob.zig").enums;
pub const kjobtrackerinterface = @import("extras-kcoreaddons/libkjobtrackerinterface.zig").kjobtrackerinterface;
pub const kjobuidelegate = @import("extras-kcoreaddons/libkjobuidelegate.zig").kjobuidelegate;
pub const kjobuidelegate_enums = @import("extras-kcoreaddons/libkjobuidelegate.zig").enums;
pub const kjobwidgets = @import("extras-kwidgetsaddons/libkjobwidgets.zig").kjobwidgets;
pub const kjobwindows = @import("extras-kguiaddons/libkjobwindows.zig").kjobwindows;
pub const kjsonutils = @import("extras-kcoreaddons/libkjsonutils.zig").kjsonutils;
pub const kkeysequencerecorder = @import("extras-kguiaddons/libkkeysequencerecorder.zig").kkeysequencerecorder;
pub const kkeysequencerecorder_enums = @import("extras-kguiaddons/libkkeysequencerecorder.zig").enums;
pub const kkeysequencewidget = @import("extras-kxmlgui/libkkeysequencewidget.zig").kkeysequencewidget;
pub const kkeysequencewidget_enums = @import("extras-kxmlgui/libkkeysequencewidget.zig").enums;
pub const kkeyserver = @import("foss-extras-kwindowsystem/libkkeyserver.zig").kkeyserver;
pub const klanguagebutton = @import("extras-kconfigwidgets/libklanguagebutton.zig").klanguagebutton;
pub const klanguagename = @import("extras-kconfigwidgets/libklanguagename.zig").klanguagename;
pub const klazylocalizedstring = @import("extras-ki18n/libklazylocalizedstring.zig").klazylocalizedstring;
pub const kled = @import("extras-kwidgetsaddons/libkled.zig").kled;
pub const kled_enums = @import("extras-kwidgetsaddons/libkled.zig").enums;
pub const klibexec = @import("extras-kcoreaddons/libklibexec.zig").klibexec;
pub const klineedit = @import("extras-kcompletion/libklineedit.zig").klineedit;
pub const klineediteventhandler = @import("extras-kwidgetsaddons/libklineediteventhandler.zig").klineediteventhandler;
pub const klineediturldropeventfilter = @import("extras-kwidgetsaddons/libklineediturldropeventfilter.zig").klineediturldropeventfilter;
pub const klinkitemselectionmodel = @import("extras-kitemmodels/libklinkitemselectionmodel.zig").klinkitemselectionmodel;
pub const klistopenfilesjob = @import("extras-kcoreaddons/libklistopenfilesjob.zig").klistopenfilesjob;
pub const klistopenfilesjob_enums = @import("extras-kcoreaddons/libklistopenfilesjob.zig").enums;
pub const klistwidgetsearchline = @import("extras-kitemviews/libklistwidgetsearchline.zig").klistwidgetsearchline;
pub const klocalimagecacheimplementation = @import("extras-kguiaddons/libklocalimagecacheimpl.zig").klocalimagecacheimplementation;
pub const klocalizedcontext = @import("extras-ki18n/libklocalizedcontext.zig").klocalizedcontext;
pub const klocalizedqmlcontext = @import("extras-ki18n/libklocalizedqmlcontext.zig").klocalizedqmlcontext;
pub const klocalizedstring = @import("extras-ki18n/libklocalizedstring.zig").klocalizedstring;
pub const klocalizedtranslator = @import("extras-ki18n/libklocalizedtranslator.zig").klocalizedtranslator;
pub const kmacroexpander = @import("extras-kcoreaddons/libkmacroexpander.zig").kmacroexpander;
pub const kmacroexpanderbase = @import("extras-kcoreaddons/libkmacroexpander.zig").kmacroexpanderbase;
pub const kmainwindow = @import("extras-kxmlgui/libkmainwindow.zig").kmainwindow;
pub const kmemoryinfo = @import("extras-kcoreaddons/libkmemoryinfo.zig").kmemoryinfo;
pub const kmessagebox = @import("extras-kwidgetsaddons/libkmessagebox.zig").kmessagebox;
pub const kmessagebox_enums = @import("extras-kwidgetsaddons/libkmessagebox.zig").enums;
pub const kmessageboxdontaskagaininterface = @import("extras-kwidgetsaddons/libkmessageboxdontaskagaininterface.zig").kmessageboxdontaskagaininterface;
pub const kmessageboxnotifyinterface = @import("extras-kwidgetsaddons/libkmessageboxnotifyinterface.zig").kmessageboxnotifyinterface;
pub const kmessagedialog = @import("extras-kwidgetsaddons/libkmessagedialog.zig").kmessagedialog;
pub const kmessagedialog_enums = @import("extras-kwidgetsaddons/libkmessagedialog.zig").enums;
pub const kmessagewidget = @import("extras-kwidgetsaddons/libkmessagewidget.zig").kmessagewidget;
pub const kmessagewidget_enums = @import("extras-kwidgetsaddons/libkmessagewidget.zig").enums;
pub const kmimetypechooser = @import("extras-kwidgetsaddons/libkmimetypechooser.zig").kmimetypechooser;
pub const kmimetypechooser_enums = @import("extras-kwidgetsaddons/libkmimetypechooser.zig").enums;
pub const kmimetypechooserdialog = @import("extras-kwidgetsaddons/libkmimetypechooser.zig").kmimetypechooserdialog;
pub const kmimetypeeditor = @import("extras-kwidgetsaddons/libkmimetypeeditor.zig").kmimetypeeditor;
pub const kmodelindexproxymapper = @import("extras-kitemmodels/libkmodelindexproxymapper.zig").kmodelindexproxymapper;
pub const kmodifierkeyinfo = @import("extras-kguiaddons/libkmodifierkeyinfo.zig").kmodifierkeyinfo;
pub const kmodifierkeyinfoprovider = @import("extras-kguiaddons/libkmodifierkeyinfoprovider_p.zig").kmodifierkeyinfoprovider;
pub const kmodifierkeyinfoprovider_p_enums = @import("extras-kguiaddons/libkmodifierkeyinfoprovider_p.zig").enums;
pub const kmountpoint = @import("extras-kio/libkmountpoint.zig").kmountpoint;
pub const kmountpoint__list = @import("extras-kio/libkmountpoint.zig").kmountpoint__list;
pub const kmountpoint_enums = @import("extras-kio/libkmountpoint.zig").enums;
pub const kmultitabbar = @import("extras-kwidgetsaddons/libkmultitabbar.zig").kmultitabbar;
pub const kmultitabbar_enums = @import("extras-kwidgetsaddons/libkmultitabbar.zig").enums;
pub const kmultitabbarbutton = @import("extras-kwidgetsaddons/libkmultitabbar.zig").kmultitabbarbutton;
pub const kmultitabbartab = @import("extras-kwidgetsaddons/libkmultitabbar.zig").kmultitabbartab;
pub const knameandurlinputdialog = @import("extras-kio/libknameandurlinputdialog.zig").knameandurlinputdialog;
pub const knetworkmounts = @import("extras-kcoreaddons/libknetworkmounts.zig").knetworkmounts;
pub const knetworkmounts_enums = @import("extras-kcoreaddons/libknetworkmounts.zig").enums;
pub const knewfilemenu = @import("extras-kio/libknewfilemenu.zig").knewfilemenu;
pub const knewpassworddialog = @import("extras-kwidgetsaddons/libknewpassworddialog.zig").knewpassworddialog;
pub const knewpasswordwidget = @import("extras-kwidgetsaddons/libknewpasswordwidget.zig").knewpasswordwidget;
pub const knewpasswordwidget_enums = @import("extras-kwidgetsaddons/libknewpasswordwidget.zig").enums;
pub const knotification = @import("extras-knotifications/libknotification.zig").knotification;
pub const knotification_enums = @import("extras-knotifications/libknotification.zig").enums;
pub const knotificationaction = @import("extras-knotifications/libknotification.zig").knotificationaction;
pub const knotificationjobuidelegate = @import("extras-kjobwidgets/libknotificationjobuidelegate.zig").knotificationjobuidelegate;
pub const knotificationpermission = @import("extras-knotifications/libknotificationpermission.zig").knotificationpermission;
pub const knotificationreplyaction = @import("extras-knotifications/libknotificationreplyaction.zig").knotificationreplyaction;
pub const knotificationreplyaction_enums = @import("extras-knotifications/libknotificationreplyaction.zig").enums;
pub const knotifyconfig = @import("extras-knotifications/libknotifyconfig.zig").knotifyconfig;
pub const knscore__author = @import("extras-knewstuff/libauthor.zig").knscore__author;
pub const knscore__cache = @import("extras-knewstuff/libcache.zig").knscore__cache;
pub const knscore__categorymetadata = @import("extras-knewstuff/libcategorymetadata.zig").knscore__categorymetadata;
pub const knscore__enginebase = @import("extras-knewstuff/libenginebase.zig").knscore__enginebase;
pub const knscore__entry = @import("extras-knewstuff/libentry.zig").knscore__entry;
pub const knscore__entry__downloadlinkinformation = @import("extras-knewstuff/libentry.zig").knscore__entry__downloadlinkinformation;
pub const knscore__errorcode = @import("extras-knewstuff/liberrorcode.zig").knscore__errorcode;
pub const knscore__itemsmodel = @import("extras-knewstuff/libitemsmodel.zig").knscore__itemsmodel;
pub const knscore__provider = @import("extras-knewstuff/libprovider_1.zig").knscore__provider;
pub const knscore__provider__categorymetadata = @import("extras-knewstuff/libprovider_1.zig").knscore__provider__categorymetadata;
pub const knscore__provider__searchpreset = @import("extras-knewstuff/libprovider_1.zig").knscore__provider__searchpreset;
pub const knscore__provider__searchrequest = @import("extras-knewstuff/libprovider_1.zig").knscore__provider__searchrequest;
pub const knscore__providercore = @import("extras-knewstuff/libprovidercore.zig").knscore__providercore;
pub const knscore__providersmodel = @import("extras-knewstuff/libprovidersmodel.zig").knscore__providersmodel;
pub const knscore__question = @import("extras-knewstuff/libquestion.zig").knscore__question;
pub const knscore__questionlistener = @import("extras-knewstuff/libquestionlistener.zig").knscore__questionlistener;
pub const knscore__questionmanager = @import("extras-knewstuff/libquestionmanager.zig").knscore__questionmanager;
pub const knscore__resultsstream = @import("extras-knewstuff/libresultsstream.zig").knscore__resultsstream;
pub const knscore__searchpreset = @import("extras-knewstuff/libsearchpreset.zig").knscore__searchpreset;
pub const knscore__searchrequest = @import("extras-knewstuff/libsearchrequest.zig").knscore__searchrequest;
pub const knscore__tagsfilterchecker = @import("extras-knewstuff/libtagsfilterchecker.zig").knscore__tagsfilterchecker;
pub const knscore__transaction = @import("extras-knewstuff/libtransaction.zig").knscore__transaction;
pub const knscore_entry = @import("extras-knewstuff/libentry.zig").knscore;
pub const knscore_searchrequest = @import("extras-knewstuff/libsearchrequest.zig").knscore;
pub const knswidgets__action = @import("extras-knewstuff/libaction.zig").knswidgets__action;
pub const knswidgets__button = @import("extras-knewstuff/libbutton.zig").knswidgets__button;
pub const knswidgets__dialog = @import("extras-knewstuff/libdialog.zig").knswidgets__dialog;
pub const knumbermodel = @import("extras-kitemmodels/libknumbermodel.zig").knumbermodel;
pub const knumbermodel_enums = @import("extras-kitemmodels/libknumbermodel.zig").enums;
pub const konsole = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").konsole;
pub const konsole__emulation = @import("posix-restricted-qtermwidget/libEmulation.zig").konsole__emulation;
pub const konsole__filter = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__filter;
pub const konsole__filter__hotspot = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__filter__hotspot;
pub const konsole__filterchain = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__filterchain;
pub const konsole__filterobject = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__filterobject;
pub const konsole__keyboardtranslator = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").konsole__keyboardtranslator;
pub const konsole__keyboardtranslator__entry = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").konsole__keyboardtranslator__entry;
pub const konsole__keyboardtranslatormanager = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").konsole__keyboardtranslatormanager;
pub const konsole__keyboardtranslatorreader = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").konsole__keyboardtranslatorreader;
pub const konsole__keyboardtranslatorwriter = @import("posix-restricted-qtermwidget/libKeyboardTranslator.zig").konsole__keyboardtranslatorwriter;
pub const konsole__regexpfilter = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__regexpfilter;
pub const konsole__regexpfilter__hotspot = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__regexpfilter__hotspot;
pub const konsole__terminalimagefilterchain = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__terminalimagefilterchain;
pub const konsole__urlfilter = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__urlfilter;
pub const konsole__urlfilter__hotspot = @import("posix-restricted-qtermwidget/libFilter.zig").konsole__urlfilter__hotspot;
pub const kopenwithdialog = @import("extras-kio/libkopenwithdialog.zig").kopenwithdialog;
pub const kosrelease = @import("extras-kcoreaddons/libkosrelease.zig").kosrelease;
pub const koverlayiconplugin = @import("extras-kio/libkoverlayiconplugin.zig").koverlayiconplugin;
pub const kpagedialog = @import("extras-kwidgetsaddons/libkpagedialog.zig").kpagedialog;
pub const kpagedialog_enums = @import("extras-kwidgetsaddons/libkpagedialog.zig").enums;
pub const kpagemodel = @import("extras-kwidgetsaddons/libkpagemodel.zig").kpagemodel;
pub const kpagemodel_enums = @import("extras-kwidgetsaddons/libkpagemodel.zig").enums;
pub const kpageview = @import("extras-kwidgetsaddons/libkpageview.zig").kpageview;
pub const kpageview_enums = @import("extras-kwidgetsaddons/libkpageview.zig").enums;
pub const kpagewidget = @import("extras-kwidgetsaddons/libkpagewidget.zig").kpagewidget;
pub const kpagewidgetitem = @import("extras-kwidgetsaddons/libkpagewidgetmodel.zig").kpagewidgetitem;
pub const kpagewidgetmodel = @import("extras-kwidgetsaddons/libkpagewidgetmodel.zig").kpagewidgetmodel;
pub const kparts = @import("extras-kparts/libpartloader.zig").kparts;
pub const kparts__fileinfoextension = @import("extras-kparts/libfileinfoextension.zig").kparts__fileinfoextension;
pub const kparts__guiactivateevent = @import("extras-kparts/libguiactivateevent.zig").kparts__guiactivateevent;
pub const kparts__listingfilterextension = @import("extras-kparts/liblistingfilterextension.zig").kparts__listingfilterextension;
pub const kparts__listingnotificationextension = @import("extras-kparts/liblistingnotificationextension.zig").kparts__listingnotificationextension;
pub const kparts__mainwindow = @import("extras-kparts/libmainwindow.zig").kparts__mainwindow;
pub const kparts__navigationextension = @import("extras-kparts/libnavigationextension.zig").kparts__navigationextension;
pub const kparts__openurlarguments = @import("extras-kparts/libopenurlarguments.zig").kparts__openurlarguments;
pub const kparts__openurlevent = @import("extras-kparts/libopenurlevent.zig").kparts__openurlevent;
pub const kparts__part = @import("extras-kparts/libpart.zig").kparts__part;
pub const kparts__partactivateevent = @import("extras-kparts/libpartactivateevent.zig").kparts__partactivateevent;
pub const kparts__partbase = @import("extras-kparts/libpartbase.zig").kparts__partbase;
pub const kparts__partloader = @import("extras-kparts/libpartloader.zig").kparts__partloader;
pub const kparts__partmanager = @import("extras-kparts/libpartmanager.zig").kparts__partmanager;
pub const kparts__readonlypart = @import("extras-kparts/libreadonlypart.zig").kparts__readonlypart;
pub const kparts__readwritepart = @import("extras-kparts/libreadwritepart.zig").kparts__readwritepart;
pub const kparts__statusbarextension = @import("extras-kparts/libstatusbarextension.zig").kparts__statusbarextension;
pub const kpasswdserverclient = @import("extras-kio/libkpasswdserverclient.zig").kpasswdserverclient;
pub const kpassword = @import("extras-kwidgetsaddons/libkpassword.zig").kpassword;
pub const kpassword_enums = @import("extras-kwidgetsaddons/libkpassword.zig").enums;
pub const kpassworddialog = @import("extras-kwidgetsaddons/libkpassworddialog.zig").kpassworddialog;
pub const kpassworddialog_enums = @import("extras-kwidgetsaddons/libkpassworddialog.zig").enums;
pub const kpasswordlineedit = @import("extras-kwidgetsaddons/libkpasswordlineedit.zig").kpasswordlineedit;
pub const kpixmapregionselectordialog = @import("extras-kwidgetsaddons/libkpixmapregionselectordialog.zig").kpixmapregionselectordialog;
pub const kpixmapregionselectorwidget = @import("extras-kwidgetsaddons/libkpixmapregionselectorwidget.zig").kpixmapregionselectorwidget;
pub const kpixmapregionselectorwidget_enums = @import("extras-kwidgetsaddons/libkpixmapregionselectorwidget.zig").enums;
pub const kpixmapsequence = @import("extras-kwidgetsaddons/libkpixmapsequence.zig").kpixmapsequence;
pub const kpixmapsequenceloader = @import("extras-kiconthemes/libkpixmapsequenceloader.zig").kpixmapsequenceloader;
pub const kpixmapsequenceoverlaypainter = @import("extras-kwidgetsaddons/libkpixmapsequenceoverlaypainter.zig").kpixmapsequenceoverlaypainter;
pub const kpixmapsequencewidget = @import("extras-kwidgetsaddons/libkpixmapsequencewidget.zig").kpixmapsequencewidget;
pub const kplotaxis = @import("extras-kplotting/libkplotaxis.zig").kplotaxis;
pub const kplotobject = @import("extras-kplotting/libkplotobject.zig").kplotobject;
pub const kplotobject_enums = @import("extras-kplotting/libkplotobject.zig").enums;
pub const kplotpoint = @import("extras-kplotting/libkplotpoint.zig").kplotpoint;
pub const kplotwidget = @import("extras-kplotting/libkplotwidget.zig").kplotwidget;
pub const kplotwidget_enums = @import("extras-kplotting/libkplotwidget.zig").enums;
pub const kpluginfactory = @import("extras-kcoreaddons/libkpluginfactory.zig").kpluginfactory;
pub const kpluginfactory_enums = @import("extras-kcoreaddons/libkpluginfactory.zig").enums;
pub const kpluginmetadata = @import("extras-kcoreaddons/libkpluginmetadata.zig").kpluginmetadata;
pub const kpluginmetadata_enums = @import("extras-kcoreaddons/libkpluginmetadata.zig").enums;
pub const kpluralhandlingspinbox = @import("extras-ktextwidgets/libkpluralhandlingspinbox.zig").kpluralhandlingspinbox;
pub const kpopupframe = @import("extras-kwidgetsaddons/libkpopupframe.zig").kpopupframe;
pub const kpreviewwidgetbase = @import("extras-kio/libkpreviewwidgetbase.zig").kpreviewwidgetbase;
pub const kprocess = @import("extras-kcoreaddons/libkprocess.zig").kprocess;
pub const kprocess_enums = @import("extras-kcoreaddons/libkprocess.zig").enums;
pub const kprocesslist = @import("extras-kcoreaddons/libkprocesslist.zig").kprocesslist;
pub const kprocesslist__kprocessinfo = @import("extras-kcoreaddons/libkprocesslist.zig").kprocesslist__kprocessinfo;
pub const kpropertiesdialog = @import("extras-kio/libkpropertiesdialog.zig").kpropertiesdialog;
pub const kpropertiesdialogplugin = @import("extras-kio/libkpropertiesdialogplugin.zig").kpropertiesdialogplugin;
pub const kpropertyskeletonitem = @import("extras-kconfig/libkcoreconfigskeleton.zig").kpropertyskeletonitem;
pub const kprotocolinfo = @import("extras-kio/libkprotocolinfo.zig").kprotocolinfo;
pub const kprotocolinfo__extrafield = @import("extras-kio/libkprotocolinfo.zig").kprotocolinfo__extrafield;
pub const kprotocolinfo_enums = @import("extras-kio/libkprotocolinfo.zig").enums;
pub const kprotocolmanager = @import("extras-kio/libkprotocolmanager.zig").kprotocolmanager;
pub const krandom = @import("extras-kcoreaddons/libkrandom.zig").krandom;
pub const kratingpainter = @import("extras-kwidgetsaddons/libkratingpainter.zig").kratingpainter;
pub const kratingwidget = @import("extras-kwidgetsaddons/libkratingwidget.zig").kratingwidget;
pub const krearrangecolumnsproxymodel = @import("extras-kitemmodels/libkrearrangecolumnsproxymodel.zig").krearrangecolumnsproxymodel;
pub const krecentdirs = @import("extras-kio/libkrecentdirs.zig").krecentdirs;
pub const krecentdocument = @import("extras-kio/libkrecentdocument.zig").krecentdocument;
pub const krecentdocument_enums = @import("extras-kio/libkrecentdocument.zig").enums;
pub const krecentfilesaction = @import("extras-kconfigwidgets/libkrecentfilesaction.zig").krecentfilesaction;
pub const krecentfilesmenu = @import("extras-kwidgetsaddons/libkrecentfilesmenu.zig").krecentfilesmenu;
pub const kremoteencoding = @import("extras-kio/libkremoteencoding.zig").kremoteencoding;
pub const kreplace = @import("extras-ktextwidgets/libkreplace.zig").kreplace;
pub const kreplacedialog = @import("extras-ktextwidgets/libkreplacedialog.zig").kreplacedialog;
pub const kreplacedialog_enums = @import("extras-ktextwidgets/libkreplacedialog.zig").enums;
pub const krichtextedit = @import("extras-ktextwidgets/libkrichtextedit.zig").krichtextedit;
pub const krichtextedit_enums = @import("extras-ktextwidgets/libkrichtextedit.zig").enums;
pub const krichtextwidget = @import("extras-ktextwidgets/libkrichtextwidget.zig").krichtextwidget;
pub const krichtextwidget_enums = @import("extras-ktextwidgets/libkrichtextwidget.zig").enums;
pub const kruler = @import("extras-kwidgetsaddons/libkruler.zig").kruler;
pub const kruler_enums = @import("extras-kwidgetsaddons/libkruler.zig").enums;
pub const kruntimeplatform = @import("extras-kcoreaddons/libkruntimeplatform.zig").kruntimeplatform;
pub const ksambashare = @import("extras-kio/libksambashare.zig").ksambashare;
pub const ksambasharedata = @import("extras-kio/libksambasharedata.zig").ksambasharedata;
pub const ksambasharedata_enums = @import("extras-kio/libksambasharedata.zig").enums;
pub const ksandbox = @import("extras-kcoreaddons/libksandbox.zig").ksandbox;
pub const ksandbox__processcontext = @import("extras-kcoreaddons/libksandbox.zig").ksandbox__processcontext;
pub const kselectaction = @import("extras-kwidgetsaddons/libkselectaction.zig").kselectaction;
pub const kselectaction_enums = @import("extras-kwidgetsaddons/libkselectaction.zig").enums;
pub const kselectionowner = @import("foss-extras-kwindowsystem/libkselectionowner.zig").kselectionowner;
pub const kselectionproxymodel = @import("extras-kitemmodels/libkselectionproxymodel.zig").kselectionproxymodel;
pub const kselectionproxymodel_enums = @import("extras-kitemmodels/libkselectionproxymodel.zig").enums;
pub const kselectionwatcher = @import("foss-extras-kwindowsystem/libkselectionwatcher.zig").kselectionwatcher;
pub const kselector = @import("extras-kwidgetsaddons/libkselector.zig").kselector;
pub const kseparator = @import("extras-kwidgetsaddons/libkseparator.zig").kseparator;
pub const kservice = @import("extras-kservice/libkservice.zig").kservice;
pub const kserviceaction = @import("extras-kservice/libkserviceaction.zig").kserviceaction;
pub const kserviceconversioncheck__supported = @import("extras-kservice/libkserviceconversioncheck_p.zig").kserviceconversioncheck__supported;
pub const kserviceconversioncheck__unsupported = @import("extras-kservice/libkserviceconversioncheck_p.zig").kserviceconversioncheck__unsupported;
pub const kservicegroup = @import("extras-kservice/libkservicegroup.zig").kservicegroup;
pub const kservicegroup_enums = @import("extras-kservice/libkservicegroup.zig").enums;
pub const ksharedconfig = @import("extras-kconfig/libksharedconfig.zig").ksharedconfig;
pub const kshareddatacache = @import("extras-kcoreaddons/libkshareddatacache.zig").kshareddatacache;
pub const kshareddatacache_enums = @import("extras-kcoreaddons/libkshareddatacache.zig").enums;
pub const kshell = @import("extras-kcoreaddons/libkshell.zig").kshell;
pub const kshell_enums = @import("extras-kcoreaddons/libkshell.zig").enums;
pub const kshellcompletion = @import("extras-kio/libkshellcompletion.zig").kshellcompletion;
pub const kshortcutsdialog = @import("extras-kxmlgui/libkshortcutsdialog.zig").kshortcutsdialog;
pub const kshortcutseditor = @import("extras-kxmlgui/libkshortcutseditor.zig").kshortcutseditor;
pub const kshortcutseditor_enums = @import("extras-kxmlgui/libkshortcutseditor.zig").enums;
pub const kshortcutwidget = @import("extras-kxmlgui/libkshortcutwidget.zig").kshortcutwidget;
pub const ksignalhandler = @import("extras-kcoreaddons/libksignalhandler.zig").ksignalhandler;
pub const ksplittercollapserbutton = @import("extras-kwidgetsaddons/libksplittercollapserbutton.zig").ksplittercollapserbutton;
pub const ksqueezedtextlabel = @import("extras-kwidgetsaddons/libksqueezedtextlabel.zig").ksqueezedtextlabel;
pub const ksslcertificatebox = @import("extras-kio/libksslcertificatebox.zig").ksslcertificatebox;
pub const ksslcertificatebox_enums = @import("extras-kio/libksslcertificatebox.zig").enums;
pub const ksslerroruidata = @import("extras-kio/libksslerroruidata.zig").ksslerroruidata;
pub const ksslinfodialog = @import("extras-kio/libksslinfodialog.zig").ksslinfodialog;
pub const kstandardaction = @import("extras-kconfigwidgets/libkstandardaction.zig").kstandardaction;
pub const kstandardaction_enums = @import("extras-kconfigwidgets/libkstandardaction.zig").enums;
pub const kstandardactions = @import("extras-kconfig/libkstandardactions.zig").kstandardactions;
pub const kstandardactions__kstandardactionsinfo = @import("extras-kconfig/libkstandardactions_p.zig").kstandardactions__kstandardactionsinfo;
pub const kstandardactions__rawstringdata = @import("extras-kconfig/libkstandardactions_p.zig").kstandardactions__rawstringdata;
pub const kstandardactions_enums = @import("extras-kconfig/libkstandardactions.zig").enums;
pub const kstandardactions_kstandardactions_p = @import("extras-kconfig/libkstandardactions_p.zig").kstandardactions;
pub const kstandardguiitem = @import("extras-kwidgetsaddons/libkstandardguiitem.zig").kstandardguiitem;
pub const kstandardguiitem_enums = @import("extras-kwidgetsaddons/libkstandardguiitem.zig").enums;
pub const kstandardshortcut = @import("extras-kconfig/libkstandardshortcut.zig").kstandardshortcut;
pub const kstandardshortcut__standardshortcutwatcher = @import("extras-kconfig/libkstandardshortcutwatcher.zig").kstandardshortcut__standardshortcutwatcher;
pub const kstandardshortcut_enums = @import("extras-kconfig/libkstandardshortcut.zig").enums;
pub const kstandardshortcut_kstandardshortcutwatcher = @import("extras-kconfig/libkstandardshortcutwatcher.zig").kstandardshortcut;
pub const kstartupinfo = @import("foss-extras-kwindowsystem/libkstartupinfo.zig").kstartupinfo;
pub const kstartupinfo_enums = @import("foss-extras-kwindowsystem/libkstartupinfo.zig").enums;
pub const kstartupinfodata = @import("foss-extras-kwindowsystem/libkstartupinfo.zig").kstartupinfodata;
pub const kstartupinfoid = @import("foss-extras-kwindowsystem/libkstartupinfo.zig").kstartupinfoid;
pub const kstatefulbrush = @import("extras-kcolorscheme/libkstatefulbrush.zig").kstatefulbrush;
pub const kstatusbarjobtracker = @import("extras-kjobwidgets/libkstatusbarjobtracker.zig").kstatusbarjobtracker;
pub const kstatusbarjobtracker_enums = @import("extras-kjobwidgets/libkstatusbarjobtracker.zig").enums;
pub const kstringhandler = @import("extras-kcoreaddons/libkstringhandler.zig").kstringhandler;
pub const kstyleextensions = @import("extras-kwidgetsaddons/libkstyleextensions.zig").kstyleextensions;
pub const kstylemanager = @import("extras-kconfigwidgets/libkstylemanager.zig").kstylemanager;
pub const ksvg__framesvg = @import("extras-ksvg/libframesvg.zig").ksvg__framesvg;
pub const ksvg__imageset = @import("extras-ksvg/libimageset.zig").ksvg__imageset;
pub const ksvg__svg = @import("extras-ksvg/libsvg.zig").ksvg__svg;
pub const ksycoca = @import("extras-kservice/libksycoca.zig").ksycoca;
pub const ksycocaentry = @import("extras-kservice/libksycocaentry.zig").ksycocaentry;
pub const ksycocatype_enums = @import("extras-kservice/libksycocatype.zig").enums;
pub const ksyntaxhighlighting__abstracthighlighter = @import("extras-ksyntaxhighlighting/libabstracthighlighter.zig").ksyntaxhighlighting__abstracthighlighter;
pub const ksyntaxhighlighting__definition = @import("extras-ksyntaxhighlighting/libdefinition.zig").ksyntaxhighlighting__definition;
pub const ksyntaxhighlighting__definitiondownloader = @import("extras-ksyntaxhighlighting/libdefinitiondownloader.zig").ksyntaxhighlighting__definitiondownloader;
pub const ksyntaxhighlighting__foldingregion = @import("extras-ksyntaxhighlighting/libfoldingregion.zig").ksyntaxhighlighting__foldingregion;
pub const ksyntaxhighlighting__format = @import("extras-ksyntaxhighlighting/libformat.zig").ksyntaxhighlighting__format;
pub const ksyntaxhighlighting__repository = @import("extras-ksyntaxhighlighting/librepository.zig").ksyntaxhighlighting__repository;
pub const ksyntaxhighlighting__state = @import("extras-ksyntaxhighlighting/libstate.zig").ksyntaxhighlighting__state;
pub const ksyntaxhighlighting__syntaxhighlighter = @import("extras-ksyntaxhighlighting/libsyntaxhighlighter.zig").ksyntaxhighlighting__syntaxhighlighter;
pub const ksyntaxhighlighting__theme = @import("extras-ksyntaxhighlighting/libtheme.zig").ksyntaxhighlighting__theme;
pub const ksystemclipboard = @import("extras-kguiaddons/libksystemclipboard.zig").ksystemclipboard;
pub const kterminallauncherjob = @import("extras-kio/libkterminallauncherjob.zig").kterminallauncherjob;
pub const ktextedit = @import("extras-ktextwidgets/libktextedit.zig").ktextedit;
pub const ktexteditor__abstractannotationitemdelegate = @import("extras-ktexteditor/libabstractannotationitemdelegate.zig").ktexteditor__abstractannotationitemdelegate;
pub const ktexteditor__annotationmodel = @import("extras-ktexteditor/libannotationinterface.zig").ktexteditor__annotationmodel;
pub const ktexteditor__application = @import("extras-ktexteditor/libapplication.zig").ktexteditor__application;
pub const ktexteditor__attribute = @import("extras-ktexteditor/libattribute.zig").ktexteditor__attribute;
pub const ktexteditor__attributeblock = @import("extras-ktexteditor/libattribute.zig").ktexteditor__attributeblock;
pub const ktexteditor__codecompletionmodel = @import("extras-ktexteditor/libcodecompletionmodel.zig").ktexteditor__codecompletionmodel;
pub const ktexteditor__codecompletionmodelcontrollerinterface = @import("extras-ktexteditor/libcodecompletionmodelcontrollerinterface.zig").ktexteditor__codecompletionmodelcontrollerinterface;
pub const ktexteditor__command = @import("extras-ktexteditor/libcommand.zig").ktexteditor__command;
pub const ktexteditor__configpage = @import("extras-ktexteditor/libconfigpage.zig").ktexteditor__configpage;
pub const ktexteditor__cursor = @import("extras-ktexteditor/libcursor.zig").ktexteditor__cursor;
pub const ktexteditor__document = @import("extras-ktexteditor/libdocument.zig").ktexteditor__document;
pub const ktexteditor__document__editingtransaction = @import("extras-ktexteditor/libdocument.zig").ktexteditor__document__editingtransaction;
pub const ktexteditor__documentcursor = @import("extras-ktexteditor/libdocumentcursor.zig").ktexteditor__documentcursor;
pub const ktexteditor__editor = @import("extras-ktexteditor/libeditor.zig").ktexteditor__editor;
pub const ktexteditor__inlinenote = @import("extras-ktexteditor/libinlinenote.zig").ktexteditor__inlinenote;
pub const ktexteditor__inlinenoteprovider = @import("extras-ktexteditor/libinlinenoteprovider.zig").ktexteditor__inlinenoteprovider;
pub const ktexteditor__linerange = @import("extras-ktexteditor/liblinerange.zig").ktexteditor__linerange;
pub const ktexteditor__mainwindow = @import("extras-ktexteditor/libmainwindow_1.zig").ktexteditor__mainwindow;
pub const ktexteditor__mark = @import("extras-ktexteditor/libdocument.zig").ktexteditor__mark;
pub const ktexteditor__message = @import("extras-ktexteditor/libmessage_1.zig").ktexteditor__message;
pub const ktexteditor__movingcursor = @import("extras-ktexteditor/libmovingcursor.zig").ktexteditor__movingcursor;
pub const ktexteditor__movingrange = @import("extras-ktexteditor/libmovingrange.zig").ktexteditor__movingrange;
pub const ktexteditor__movingrangefeedback = @import("extras-ktexteditor/libmovingrangefeedback.zig").ktexteditor__movingrangefeedback;
pub const ktexteditor__plugin = @import("extras-ktexteditor/libplugin.zig").ktexteditor__plugin;
pub const ktexteditor__range = @import("extras-ktexteditor/librange.zig").ktexteditor__range;
pub const ktexteditor__sessionconfiginterface = @import("extras-ktexteditor/libsessionconfiginterface.zig").ktexteditor__sessionconfiginterface;
pub const ktexteditor__styleoptionannotationitem = @import("extras-ktexteditor/libabstractannotationitemdelegate.zig").ktexteditor__styleoptionannotationitem;
pub const ktexteditor__texthintprovider = @import("extras-ktexteditor/libtexthintinterface.zig").ktexteditor__texthintprovider;
pub const ktexteditor__view = @import("extras-ktexteditor/libview.zig").ktexteditor__view;
pub const ktexteditor_cursor = @import("extras-ktexteditor/libcursor.zig").ktexteditor;
pub const ktexteditor_linerange = @import("extras-ktexteditor/liblinerange.zig").ktexteditor;
pub const ktexteditor_range = @import("extras-ktexteditor/librange.zig").ktexteditor;
pub const ktexttohtml = @import("extras-kcoreaddons/libktexttohtml.zig").ktexttohtml;
pub const ktexttohtml_enums = @import("extras-kcoreaddons/libktexttohtml.zig").enums;
pub const ktimecombobox = @import("extras-kwidgetsaddons/libktimecombobox.zig").ktimecombobox;
pub const ktimecombobox_enums = @import("extras-kwidgetsaddons/libktimecombobox.zig").enums;
pub const ktimezone = @import("extras-ki18n/libktimezone.zig").ktimezone;
pub const ktimezone_kcountry = @import("extras-ki18n/libkcountry.zig").ktimezone;
pub const ktitlewidget = @import("extras-kwidgetsaddons/libktitlewidget.zig").ktitlewidget;
pub const ktitlewidget_enums = @import("extras-kwidgetsaddons/libktitlewidget.zig").enums;
pub const ktoggleaction = @import("extras-kwidgetsaddons/libktoggleaction.zig").ktoggleaction;
pub const ktogglefullscreenaction = @import("extras-kwidgetsaddons/libktogglefullscreenaction.zig").ktogglefullscreenaction;
pub const ktoggletoolbaraction = @import("extras-kxmlgui/libktoggletoolbaraction.zig").ktoggletoolbaraction;
pub const ktoolbar = @import("extras-kxmlgui/libktoolbar.zig").ktoolbar;
pub const ktoolbarlabelaction = @import("extras-kwidgetsaddons/libktoolbarlabelaction.zig").ktoolbarlabelaction;
pub const ktoolbarpopupaction = @import("extras-kwidgetsaddons/libktoolbarpopupaction.zig").ktoolbarpopupaction;
pub const ktoolbarpopupaction_enums = @import("extras-kwidgetsaddons/libktoolbarpopupaction.zig").enums;
pub const ktoolbarspaceraction = @import("extras-kwidgetsaddons/libktoolbarspaceraction.zig").ktoolbarspaceraction;
pub const ktooltiphelper = @import("extras-kxmlgui/libktooltiphelper.zig").ktooltiphelper;
pub const ktooltipwidget = @import("extras-kwidgetsaddons/libktooltipwidget.zig").ktooltipwidget;
pub const ktreewidgetsearchline = @import("extras-kitemviews/libktreewidgetsearchline.zig").ktreewidgetsearchline;
pub const ktreewidgetsearchlinewidget = @import("extras-kitemviews/libktreewidgetsearchlinewidget.zig").ktreewidgetsearchlinewidget;
pub const ktwofingerswipe = @import("extras-kwidgetsaddons/libktwofingerswipe.zig").ktwofingerswipe;
pub const ktwofingerswiperecognizer = @import("extras-kwidgetsaddons/libktwofingerswipe.zig").ktwofingerswiperecognizer;
pub const ktwofingertap = @import("extras-kwidgetsaddons/libktwofingertap.zig").ktwofingertap;
pub const ktwofingertaprecognizer = @import("extras-kwidgetsaddons/libktwofingertap.zig").ktwofingertaprecognizer;
pub const kuiserverjobtracker = @import("extras-kjobwidgets/libkuiserverjobtracker.zig").kuiserverjobtracker;
pub const kuiserverv2jobtracker = @import("extras-kjobwidgets/libkuiserverv2jobtracker.zig").kuiserverv2jobtracker;
pub const kuit = @import("extras-ki18n/libkuitsetup.zig").kuit;
pub const kuitsetup = @import("extras-ki18n/libkuitsetup.zig").kuitsetup;
pub const kuitsetup_enums = @import("extras-ki18n/libkuitsetup.zig").enums;
pub const kundoactions = @import("extras-kxmlgui/libkundoactions.zig").kundoactions;
pub const kurifilter = @import("extras-kio/libkurifilter.zig").kurifilter;
pub const kurifilter_enums = @import("extras-kio/libkurifilter.zig").enums;
pub const kurifilterdata = @import("extras-kio/libkurifilter.zig").kurifilterdata;
pub const kurifiltersearchprovider = @import("extras-kio/libkurifilter.zig").kurifiltersearchprovider;
pub const kurlauthorized = @import("extras-kio/libkurlauthorized.zig").kurlauthorized;
pub const kurlcombobox = @import("extras-kio/libkurlcombobox.zig").kurlcombobox;
pub const kurlcombobox_enums = @import("extras-kio/libkurlcombobox.zig").enums;
pub const kurlcomborequester = @import("extras-kio/libkurlrequester.zig").kurlcomborequester;
pub const kurlcompletion = @import("extras-kio/libkurlcompletion.zig").kurlcompletion;
pub const kurlcompletion_enums = @import("extras-kio/libkurlcompletion.zig").enums;
pub const kurllabel = @import("extras-kwidgetsaddons/libkurllabel.zig").kurllabel;
pub const kurlmimedata = @import("extras-kcoreaddons/libkurlmimedata.zig").kurlmimedata;
pub const kurlmimedata_enums = @import("extras-kcoreaddons/libkurlmimedata.zig").enums;
pub const kurlnavigator = @import("extras-kio/libkurlnavigator.zig").kurlnavigator;
pub const kurlrequester = @import("extras-kio/libkurlrequester.zig").kurlrequester;
pub const kurlrequesterdialog = @import("extras-kio/libkurlrequesterdialog.zig").kurlrequesterdialog;
pub const kuser = @import("extras-kcoreaddons/libkuser.zig").kuser;
pub const kuser_enums = @import("extras-kcoreaddons/libkuser.zig").enums;
pub const kusergroup = @import("extras-kcoreaddons/libkuser.zig").kusergroup;
pub const kusertimestamp = @import("foss-extras-kwindowsystem/libkusertimestamp.zig").kusertimestamp;
pub const kviewstatemaintainerbase = @import("extras-kwidgetsaddons/libkviewstatemaintainerbase.zig").kviewstatemaintainerbase;
pub const kviewstateserializer = @import("extras-kwidgetsaddons/libkviewstateserializer.zig").kviewstateserializer;
pub const kwaylandextras = @import("foss-extras-kwindowsystem/libkwaylandextras.zig").kwaylandextras;
pub const kwidgetitemdelegate = @import("extras-kitemviews/libkwidgetitemdelegate.zig").kwidgetitemdelegate;
pub const kwidgetjobtracker = @import("extras-kjobwidgets/libkwidgetjobtracker.zig").kwidgetjobtracker;
pub const kwindowconfig = @import("extras-kconfig/libkwindowconfig.zig").kwindowconfig;
pub const kwindoweffects = @import("foss-extras-kwindowsystem/libkwindoweffects.zig").kwindoweffects;
pub const kwindoweffects_enums = @import("foss-extras-kwindowsystem/libkwindoweffects.zig").enums;
pub const kwindowinfo = @import("foss-extras-kwindowsystem/libkwindowinfo.zig").kwindowinfo;
pub const kwindowinsetscontroller = @import("extras-kguiaddons/libkwindowinsetscontroller.zig").kwindowinsetscontroller;
pub const kwindowshadow = @import("foss-extras-kwindowsystem/libkwindowshadow.zig").kwindowshadow;
pub const kwindowshadowtile = @import("foss-extras-kwindowsystem/libkwindowshadow.zig").kwindowshadowtile;
pub const kwindowstatesaver = @import("extras-kconfig/libkwindowstatesaver.zig").kwindowstatesaver;
pub const kwindowsystem = @import("foss-extras-kwindowsystem/libkwindowsystem.zig").kwindowsystem;
pub const kwindowsystem_enums = @import("foss-extras-kwindowsystem/libkwindowsystem.zig").enums;
pub const kwordmacroexpander = @import("extras-kcoreaddons/libkmacroexpander.zig").kwordmacroexpander;
pub const kwordwrap = @import("extras-kguiaddons/libkwordwrap.zig").kwordwrap;
pub const kwordwrap_enums = @import("extras-kguiaddons/libkwordwrap.zig").enums;
pub const kxmessages = @import("foss-extras-kwindowsystem/libkxmessages.zig").kxmessages;
pub const kxmlguibuilder = @import("extras-kxmlgui/libkxmlguibuilder.zig").kxmlguibuilder;
pub const kxmlguiclient = @import("extras-kxmlgui/libkxmlguiclient.zig").kxmlguiclient;
pub const kxmlguiclient__statechange = @import("extras-kxmlgui/libkxmlguiclient.zig").kxmlguiclient__statechange;
pub const kxmlguiclient_enums = @import("extras-kxmlgui/libkxmlguiclient.zig").enums;
pub const kxmlguifactory = @import("extras-kxmlgui/libkxmlguifactory.zig").kxmlguifactory;
pub const kxmlguiwindow = @import("extras-kxmlgui/libkxmlguiwindow.zig").kxmlguiwindow;
pub const kxmlguiwindow_enums = @import("extras-kxmlgui/libkxmlguiwindow.zig").enums;
pub const kxyselector = @import("extras-kwidgetsaddons/libkxyselector.zig").kxyselector;
pub const layershellqt__shell = @import("foss-extras-layershellqt/libshell.zig").layershellqt__shell;
pub const layershellqt__window = @import("foss-extras-layershellqt/libwindow.zig").layershellqt__window;
pub const listingfilterextension_enums = @import("extras-kparts/liblistingfilterextension.zig").enums;
pub const listingnotificationextension_enums = @import("extras-kparts/liblistingnotificationextension.zig").enums;
pub const listjob_enums = @import("extras-kio/liblistjob.zig").enums;
pub const mainwindow_1_enums = @import("extras-ktexteditor/libmainwindow_1.zig").enums;
pub const message_1_enums = @import("extras-ktexteditor/libmessage_1.zig").enums;
pub const message_enums = @import("extras-attica/libmessage.zig").enums;
pub const metadata_enums = @import("extras-attica/libmetadata.zig").enums;
pub const movingcursor_enums = @import("extras-ktexteditor/libmovingcursor.zig").enums;
pub const movingrange_enums = @import("extras-ktexteditor/libmovingrange.zig").enums;
pub const navigationextension_enums = @import("extras-kparts/libnavigationextension.zig").enums;
pub const net = @import("foss-extras-kwindowsystem/libnetwm_def.zig").net;
pub const netextendedstrut = @import("foss-extras-kwindowsystem/libnetwm_def.zig").netextendedstrut;
pub const netfullscreenmonitors = @import("foss-extras-kwindowsystem/libnetwm_def.zig").netfullscreenmonitors;
pub const neticon = @import("foss-extras-kwindowsystem/libnetwm_def.zig").neticon;
pub const netpoint = @import("foss-extras-kwindowsystem/libnetwm_def.zig").netpoint;
pub const netrect = @import("foss-extras-kwindowsystem/libnetwm_def.zig").netrect;
pub const netsize = @import("foss-extras-kwindowsystem/libnetwm_def.zig").netsize;
pub const netstrut = @import("foss-extras-kwindowsystem/libnetwm_def.zig").netstrut;
pub const netwm_def_enums = @import("foss-extras-kwindowsystem/libnetwm_def.zig").enums;
pub const netwm_enums = @import("foss-extras-kwindowsystem/libnetwm.zig").enums;
pub const networkshare_enums = @import("extras-solid/libnetworkshare.zig").enums;
pub const openfilemanagerwindowjob_enums = @import("extras-kio/libopenfilemanagerwindowjob.zig").enums;
pub const opticaldisc_enums = @import("extras-solid/libopticaldisc.zig").enums;
pub const opticaldrive_enums = @import("extras-solid/libopticaldrive.zig").enums;
pub const partial_ordering = @import("libqcompare.zig").partial_ordering;
pub const partloader_enums = @import("extras-kparts/libpartloader.zig").enums;
pub const partmanager_enums = @import("extras-kparts/libpartmanager.zig").enums;
pub const predicate_enums = @import("extras-solid/libpredicate.zig").enums;
pub const previewjob_enums = @import("extras-kio/libpreviewjob.zig").enums;
pub const processor_enums = @import("extras-solid/libprocessor.zig").enums;
pub const provider_1_enums = @import("extras-knewstuff/libprovider_1.zig").enums;
pub const provider_enums = @import("extras-attica/libprovider.zig").enums;
pub const providermanager_enums = @import("extras-attica/libprovidermanager.zig").enums;
pub const providersmodel_enums = @import("extras-knewstuff/libprovidersmodel.zig").enums;
pub const q20 = @import("libq20type_traits.zig").q20;
pub const qabstractanimation = @import("libqabstractanimation.zig").qabstractanimation;
pub const qabstractanimation_enums = @import("libqabstractanimation.zig").enums;
pub const qabstractaxis = @import("restricted-extras-charts/libqabstractaxis.zig").qabstractaxis;
pub const qabstractaxis_enums = @import("restricted-extras-charts/libqabstractaxis.zig").enums;
pub const qabstractbarseries = @import("restricted-extras-charts/libqabstractbarseries.zig").qabstractbarseries;
pub const qabstractbarseries_enums = @import("restricted-extras-charts/libqabstractbarseries.zig").enums;
pub const qabstractbutton = @import("libqabstractbutton.zig").qabstractbutton;
pub const qabstracteventdispatcher = @import("libqabstracteventdispatcher.zig").qabstracteventdispatcher;
pub const qabstracteventdispatcher__timerinfo = @import("libqabstracteventdispatcher.zig").qabstracteventdispatcher__timerinfo;
pub const qabstracteventdispatcher__timerinfov2 = @import("libqabstracteventdispatcher.zig").qabstracteventdispatcher__timerinfov2;
pub const qabstracteventdispatcherv2 = @import("libqabstracteventdispatcher.zig").qabstracteventdispatcherv2;
pub const qabstractfileiconprovider = @import("libqabstractfileiconprovider.zig").qabstractfileiconprovider;
pub const qabstractfileiconprovider_enums = @import("libqabstractfileiconprovider.zig").enums;
pub const qabstractgraphicsshapeitem = @import("libqgraphicsitem.zig").qabstractgraphicsshapeitem;
pub const qabstractitemdelegate = @import("libqabstractitemdelegate.zig").qabstractitemdelegate;
pub const qabstractitemdelegate_enums = @import("libqabstractitemdelegate.zig").enums;
pub const qabstractitemmodel = @import("libqabstractitemmodel.zig").qabstractitemmodel;
pub const qabstractitemmodel_enums = @import("libqabstractitemmodel.zig").enums;
pub const qabstractitemview = @import("libqabstractitemview.zig").qabstractitemview;
pub const qabstractitemview_enums = @import("libqabstractitemview.zig").enums;
pub const qabstractlistmodel = @import("libqabstractitemmodel.zig").qabstractlistmodel;
pub const qabstractnativeeventfilter = @import("libqabstractnativeeventfilter.zig").qabstractnativeeventfilter;
pub const qabstractnetworkcache = @import("network/libqabstractnetworkcache.zig").qabstractnetworkcache;
pub const qabstractopenglfunctions = @import("opengl/libqopenglversionfunctions.zig").qabstractopenglfunctions;
pub const qabstractprintdialog = @import("printsupport/libqabstractprintdialog.zig").qabstractprintdialog;
pub const qabstractprintdialog_enums = @import("printsupport/libqabstractprintdialog.zig").enums;
pub const qabstractproxymodel = @import("libqabstractproxymodel.zig").qabstractproxymodel;
pub const qabstractscrollarea = @import("libqabstractscrollarea.zig").qabstractscrollarea;
pub const qabstractscrollarea_enums = @import("libqabstractscrollarea.zig").enums;
pub const qabstractseries = @import("restricted-extras-charts/libqabstractseries.zig").qabstractseries;
pub const qabstractseries_enums = @import("restricted-extras-charts/libqabstractseries.zig").enums;
pub const qabstractslider = @import("libqabstractslider.zig").qabstractslider;
pub const qabstractslider_enums = @import("libqabstractslider.zig").enums;
pub const qabstractsocket = @import("network/libqabstractsocket.zig").qabstractsocket;
pub const qabstractsocket_enums = @import("network/libqabstractsocket.zig").enums;
pub const qabstractspinbox = @import("libqabstractspinbox.zig").qabstractspinbox;
pub const qabstractspinbox_enums = @import("libqabstractspinbox.zig").enums;
pub const qabstracttablemodel = @import("libqabstractitemmodel.zig").qabstracttablemodel;
pub const qabstracttextdocumentlayout = @import("libqabstracttextdocumentlayout.zig").qabstracttextdocumentlayout;
pub const qabstracttextdocumentlayout__paintcontext = @import("libqabstracttextdocumentlayout.zig").qabstracttextdocumentlayout__paintcontext;
pub const qabstracttextdocumentlayout__selection = @import("libqabstracttextdocumentlayout.zig").qabstracttextdocumentlayout__selection;
pub const qabstractundoitem = @import("libqtextdocument.zig").qabstractundoitem;
pub const qabstractvideobuffer = @import("multimedia/libqabstractvideobuffer.zig").qabstractvideobuffer;
pub const qabstractvideobuffer__mapdata = @import("multimedia/libqabstractvideobuffer.zig").qabstractvideobuffer__mapdata;
pub const qaccessible = @import("libqaccessible_base.zig").qaccessible;
pub const qaccessible__activationobserver = @import("libqaccessible_base.zig").qaccessible__activationobserver;
pub const qaccessible__state = @import("libqaccessible_base.zig").qaccessible__state;
pub const qaccessible_base_enums = @import("libqaccessible_base.zig").enums;
pub const qaccessible_enums = @import("libqaccessible.zig").enums;
pub const qaccessibleactioninterface = @import("libqaccessible.zig").qaccessibleactioninterface;
pub const qaccessibleannouncementevent = @import("libqaccessible.zig").qaccessibleannouncementevent;
pub const qaccessibleapplication = @import("libqaccessibleobject.zig").qaccessibleapplication;
pub const qaccessibleattributesinterface = @import("libqaccessible.zig").qaccessibleattributesinterface;
pub const qaccessiblebridge = @import("libqaccessiblebridge.zig").qaccessiblebridge;
pub const qaccessiblebridgeplugin = @import("libqaccessiblebridge.zig").qaccessiblebridgeplugin;
pub const qaccessibleeditabletextinterface = @import("libqaccessible.zig").qaccessibleeditabletextinterface;
pub const qaccessibleevent = @import("libqaccessible.zig").qaccessibleevent;
pub const qaccessiblehyperlinkinterface = @import("libqaccessible.zig").qaccessiblehyperlinkinterface;
pub const qaccessibleimageinterface = @import("libqaccessible.zig").qaccessibleimageinterface;
pub const qaccessibleinterface = @import("libqaccessible.zig").qaccessibleinterface;
pub const qaccessibleobject = @import("libqaccessibleobject.zig").qaccessibleobject;
pub const qaccessibleplugin = @import("libqaccessibleplugin.zig").qaccessibleplugin;
pub const qaccessibleselectioninterface = @import("libqaccessible.zig").qaccessibleselectioninterface;
pub const qaccessiblestatechangeevent = @import("libqaccessible.zig").qaccessiblestatechangeevent;
pub const qaccessibletablecellinterface = @import("libqaccessible.zig").qaccessibletablecellinterface;
pub const qaccessibletableinterface = @import("libqaccessible.zig").qaccessibletableinterface;
pub const qaccessibletablemodelchangeevent = @import("libqaccessible.zig").qaccessibletablemodelchangeevent;
pub const qaccessibletextcursorevent = @import("libqaccessible.zig").qaccessibletextcursorevent;
pub const qaccessibletextinsertevent = @import("libqaccessible.zig").qaccessibletextinsertevent;
pub const qaccessibletextinterface = @import("libqaccessible.zig").qaccessibletextinterface;
pub const qaccessibletextremoveevent = @import("libqaccessible.zig").qaccessibletextremoveevent;
pub const qaccessibletextselectionevent = @import("libqaccessible.zig").qaccessibletextselectionevent;
pub const qaccessibletextupdateevent = @import("libqaccessible.zig").qaccessibletextupdateevent;
pub const qaccessiblevaluechangeevent = @import("libqaccessible.zig").qaccessiblevaluechangeevent;
pub const qaccessiblevalueinterface = @import("libqaccessible.zig").qaccessiblevalueinterface;
pub const qaccessiblewidget = @import("libqaccessiblewidget.zig").qaccessiblewidget;
pub const qaction = @import("libqaction.zig").qaction;
pub const qaction_enums = @import("libqaction.zig").enums;
pub const qactionevent = @import("libqevent.zig").qactionevent;
pub const qactiongroup = @import("libqactiongroup.zig").qactiongroup;
pub const qactiongroup_enums = @import("libqactiongroup.zig").enums;
pub const qadoptshareddatatag = @import("libqshareddata.zig").qadoptshareddatatag;
pub const qambientsound = @import("spatialaudio/libqambientsound.zig").qambientsound;
pub const qambientsound_enums = @import("spatialaudio/libqambientsound.zig").enums;
pub const qanimationdriver = @import("libqabstractanimation.zig").qanimationdriver;
pub const qanimationgroup = @import("libqanimationgroup.zig").qanimationgroup;
pub const qanystringview = @import("libqanystringview.zig").qanystringview;
pub const qapplication = @import("libqapplication.zig").qapplication;
pub const qapplicationstatechangeevent = @import("libqevent.zig").qapplicationstatechangeevent;
pub const qarealegendmarker = @import("restricted-extras-charts/libqarealegendmarker.zig").qarealegendmarker;
pub const qareaseries = @import("restricted-extras-charts/libqareaseries.zig").qareaseries;
pub const qarraydata = @import("libqarraydata.zig").qarraydata;
pub const qarraydata_enums = @import("libqarraydata.zig").enums;
pub const qaudio = @import("multimedia/libqaudio.zig").qaudio;
pub const qaudio_enums = @import("multimedia/libqaudio.zig").enums;
pub const qaudiobuffer = @import("multimedia/libqaudiobuffer.zig").qaudiobuffer;
pub const qaudiobufferinput = @import("multimedia/libqaudiobufferinput.zig").qaudiobufferinput;
pub const qaudiobufferoutput = @import("multimedia/libqaudiobufferoutput.zig").qaudiobufferoutput;
pub const qaudiodecoder = @import("multimedia/libqaudiodecoder.zig").qaudiodecoder;
pub const qaudiodecoder_enums = @import("multimedia/libqaudiodecoder.zig").enums;
pub const qaudiodevice = @import("multimedia/libqaudiodevice.zig").qaudiodevice;
pub const qaudiodevice_enums = @import("multimedia/libqaudiodevice.zig").enums;
pub const qaudioengine = @import("spatialaudio/libqaudioengine.zig").qaudioengine;
pub const qaudioengine_enums = @import("spatialaudio/libqaudioengine.zig").enums;
pub const qaudioformat = @import("multimedia/libqaudioformat.zig").qaudioformat;
pub const qaudioformat_enums = @import("multimedia/libqaudioformat.zig").enums;
pub const qaudioinput = @import("multimedia/libqaudioinput.zig").qaudioinput;
pub const qaudiolistener = @import("spatialaudio/libqaudiolistener.zig").qaudiolistener;
pub const qaudiooutput = @import("multimedia/libqaudiooutput.zig").qaudiooutput;
pub const qaudioroom = @import("spatialaudio/libqaudioroom.zig").qaudioroom;
pub const qaudioroom_enums = @import("spatialaudio/libqaudioroom.zig").enums;
pub const qaudiosink = @import("multimedia/libqaudiosink.zig").qaudiosink;
pub const qaudiosource = @import("multimedia/libqaudiosource.zig").qaudiosource;
pub const qauthenticator = @import("network/libqauthenticator.zig").qauthenticator;
pub const qbackingstore = @import("libqbackingstore.zig").qbackingstore;
pub const qbarcategoryaxis = @import("restricted-extras-charts/libqbarcategoryaxis.zig").qbarcategoryaxis;
pub const qbarlegendmarker = @import("restricted-extras-charts/libqbarlegendmarker.zig").qbarlegendmarker;
pub const qbarmodelmapper = @import("restricted-extras-charts/libqbarmodelmapper.zig").qbarmodelmapper;
pub const qbarseries = @import("restricted-extras-charts/libqbarseries.zig").qbarseries;
pub const qbarset = @import("restricted-extras-charts/libqbarset.zig").qbarset;
pub const qbasicmutex = @import("libqmutex.zig").qbasicmutex;
pub const qbasictimer = @import("libqbasictimer.zig").qbasictimer;
pub const qbindingstatus = @import("libqbindingstorage.zig").qbindingstatus;
pub const qbindingstorage = @import("libqbindingstorage.zig").qbindingstorage;
pub const qbitarray = @import("libqbitarray.zig").qbitarray;
pub const qbitmap = @import("libqbitmap.zig").qbitmap;
pub const qbitref = @import("libqbitarray.zig").qbitref;
pub const qbluetoothpermission = @import("libqpermissions.zig").qbluetoothpermission;
pub const qboxlayout = @import("libqboxlayout.zig").qboxlayout;
pub const qboxlayout_enums = @import("libqboxlayout.zig").enums;
pub const qboxplotlegendmarker = @import("restricted-extras-charts/libqboxplotlegendmarker.zig").qboxplotlegendmarker;
pub const qboxplotmodelmapper = @import("restricted-extras-charts/libqboxplotmodelmapper.zig").qboxplotmodelmapper;
pub const qboxplotseries = @import("restricted-extras-charts/libqboxplotseries.zig").qboxplotseries;
pub const qboxset = @import("restricted-extras-charts/libqboxset.zig").qboxset;
pub const qboxset_enums = @import("restricted-extras-charts/libqboxset.zig").enums;
pub const qbrush = @import("libqbrush.zig").qbrush;
pub const qbrush_enums = @import("libqbrush.zig").enums;
pub const qbrushdata = @import("libqbrush.zig").qbrushdata;
pub const qbuffer = @import("libqbuffer.zig").qbuffer;
pub const qbuttongroup = @import("libqbuttongroup.zig").qbuttongroup;
pub const qbytearraymatcher = @import("libqbytearraymatcher.zig").qbytearraymatcher;
pub const qbytearrayview = @import("libqbytearrayview.zig").qbytearrayview;
pub const qcalendar = @import("libqcalendar.zig").qcalendar;
pub const qcalendar__systemid = @import("libqcalendar.zig").qcalendar__systemid;
pub const qcalendar__yearmonthday = @import("libqcalendar.zig").qcalendar__yearmonthday;
pub const qcalendar_enums = @import("libqcalendar.zig").enums;
pub const qcalendarpermission = @import("libqpermissions.zig").qcalendarpermission;
pub const qcalendarwidget = @import("libqcalendarwidget.zig").qcalendarwidget;
pub const qcalendarwidget_enums = @import("libqcalendarwidget.zig").enums;
pub const qcamera = @import("multimedia/libqcamera.zig").qcamera;
pub const qcamera_enums = @import("multimedia/libqcamera.zig").enums;
pub const qcameradevice = @import("multimedia/libqcameradevice.zig").qcameradevice;
pub const qcameradevice_enums = @import("multimedia/libqcameradevice.zig").enums;
pub const qcameraformat = @import("multimedia/libqcameradevice.zig").qcameraformat;
pub const qcamerapermission = @import("libqpermissions.zig").qcamerapermission;
pub const qcandlesticklegendmarker = @import("restricted-extras-charts/libqcandlesticklegendmarker.zig").qcandlesticklegendmarker;
pub const qcandlestickmodelmapper = @import("restricted-extras-charts/libqcandlestickmodelmapper.zig").qcandlestickmodelmapper;
pub const qcandlestickseries = @import("restricted-extras-charts/libqcandlestickseries.zig").qcandlestickseries;
pub const qcandlestickset = @import("restricted-extras-charts/libqcandlestickset.zig").qcandlestickset;
pub const qcapturablewindow = @import("multimedia/libqcapturablewindow.zig").qcapturablewindow;
pub const qcategoryaxis = @import("restricted-extras-charts/libqcategoryaxis.zig").qcategoryaxis;
pub const qcategoryaxis_enums = @import("restricted-extras-charts/libqcategoryaxis.zig").enums;
pub const qcborarray = @import("cbor/libqcborarray.zig").qcborarray;
pub const qcborarray__constiterator = @import("cbor/libqcborarray.zig").qcborarray__constiterator;
pub const qcborarray__iterator = @import("cbor/libqcborarray.zig").qcborarray__iterator;
pub const qcborcommon_enums = @import("cbor/libqcborcommon.zig").enums;
pub const qcborerror = @import("cbor/libqcborcommon.zig").qcborerror;
pub const qcbormap = @import("cbor/libqcbormap.zig").qcbormap;
pub const qcbormap__constiterator = @import("cbor/libqcbormap.zig").qcbormap__constiterator;
pub const qcbormap__iterator = @import("cbor/libqcbormap.zig").qcbormap__iterator;
pub const qcborparsererror = @import("cbor/libqcborvalue.zig").qcborparsererror;
pub const qcborstreamreader = @import("cbor/libqcborstreamreader.zig").qcborstreamreader;
pub const qcborstreamreader_enums = @import("cbor/libqcborstreamreader.zig").enums;
pub const qcborstreamwriter = @import("cbor/libqcborstreamwriter.zig").qcborstreamwriter;
pub const qcborvalue = @import("cbor/libqcborvalue.zig").qcborvalue;
pub const qcborvalue_enums = @import("cbor/libqcborvalue.zig").enums;
pub const qcborvalueconstref = @import("cbor/libqcborvalue.zig").qcborvalueconstref;
pub const qcborvalueref = @import("cbor/libqcborvalue.zig").qcborvalueref;
pub const qchar = @import("libqchar.zig").qchar;
pub const qchar_enums = @import("libqchar.zig").enums;
pub const qchart = @import("restricted-extras-charts/libqchart.zig").qchart;
pub const qchart_enums = @import("restricted-extras-charts/libqchart.zig").enums;
pub const qchartview = @import("restricted-extras-charts/libqchartview.zig").qchartview;
pub const qchartview_enums = @import("restricted-extras-charts/libqchartview.zig").enums;
pub const qcheckbox = @import("libqcheckbox.zig").qcheckbox;
pub const qchildevent = @import("libqcoreevent.zig").qchildevent;
pub const qchildwindowevent = @import("libqevent.zig").qchildwindowevent;
pub const qchronotimer = @import("libqchronotimer.zig").qchronotimer;
pub const qclipboard = @import("libqclipboard.zig").qclipboard;
pub const qclipboard_enums = @import("libqclipboard.zig").enums;
pub const qcloseevent = @import("libqevent.zig").qcloseevent;
pub const qcollator = @import("libqcollator.zig").qcollator;
pub const qcollatorsortkey = @import("libqcollator.zig").qcollatorsortkey;
pub const qcolor = @import("libqcolor.zig").qcolor;
pub const qcolor_enums = @import("libqcolor.zig").enums;
pub const qcoloraxis = @import("restricted-extras-charts/libqcoloraxis.zig").qcoloraxis;
pub const qcolordialog = @import("libqcolordialog.zig").qcolordialog;
pub const qcolordialog_enums = @import("libqcolordialog.zig").enums;
pub const qcolormap = @import("libqcolormap.zig").qcolormap;
pub const qcolormap_enums = @import("libqcolormap.zig").enums;
pub const qcolorspace = @import("libqcolorspace.zig").qcolorspace;
pub const qcolorspace_enums = @import("libqcolorspace.zig").enums;
pub const qcolortransform = @import("libqcolortransform.zig").qcolortransform;
pub const qcolumnview = @import("libqcolumnview.zig").qcolumnview;
pub const qcombobox = @import("libqcombobox.zig").qcombobox;
pub const qcombobox_enums = @import("libqcombobox.zig").enums;
pub const qcommandlineoption = @import("libqcommandlineoption.zig").qcommandlineoption;
pub const qcommandlineoption_enums = @import("libqcommandlineoption.zig").enums;
pub const qcommandlineparser = @import("libqcommandlineparser.zig").qcommandlineparser;
pub const qcommandlineparser_enums = @import("libqcommandlineparser.zig").enums;
pub const qcommandlinkbutton = @import("libqcommandlinkbutton.zig").qcommandlinkbutton;
pub const qcommonstyle = @import("libqcommonstyle.zig").qcommonstyle;
pub const qcompare_enums = @import("libqcompare.zig").enums;
pub const qcompleter = @import("libqcompleter.zig").qcompleter;
pub const qcompleter_enums = @import("libqcompleter.zig").enums;
pub const qconcatenatetablesproxymodel = @import("libqconcatenatetablesproxymodel.zig").qconcatenatetablesproxymodel;
pub const qconicalgradient = @import("libqbrush.zig").qconicalgradient;
pub const qcontactspermission = @import("libqpermissions.zig").qcontactspermission;
pub const qcontextmenuevent = @import("libqevent.zig").qcontextmenuevent;
pub const qcontiguouscachedata = @import("libqcontiguouscache.zig").qcontiguouscachedata;
pub const qcoreapplication = @import("libqcoreapplication.zig").qcoreapplication;
pub const qcoreapplication_enums = @import("libqcoreapplication.zig").enums;
pub const qcoreevent_enums = @import("libqcoreevent.zig").enums;
pub const qcp = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcp;
pub const qcpabstractitem = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpabstractitem;
pub const qcpabstractlegenditem = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpabstractlegenditem;
pub const qcpabstractpaintbuffer = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpabstractpaintbuffer;
pub const qcpabstractplottable = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpabstractplottable;
pub const qcpaxis = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxis;
pub const qcpaxisrect = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxisrect;
pub const qcpaxisticker = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxisticker;
pub const qcpaxistickerdatetime = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxistickerdatetime;
pub const qcpaxistickerfixed = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxistickerfixed;
pub const qcpaxistickerlog = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxistickerlog;
pub const qcpaxistickerpi = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxistickerpi;
pub const qcpaxistickertext = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxistickertext;
pub const qcpaxistickertime = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpaxistickertime;
pub const qcpbars = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpbars;
pub const qcpbarsdata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpbarsdata;
pub const qcpbarsgroup = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpbarsgroup;
pub const qcpcolorgradient = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpcolorgradient;
pub const qcpcolormap = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpcolormap;
pub const qcpcolormapdata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpcolormapdata;
pub const qcpcolorscale = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpcolorscale;
pub const qcpcurve = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpcurve;
pub const qcpcurvedata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpcurvedata;
pub const qcpdatarange = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpdatarange;
pub const qcpdataselection = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpdataselection;
pub const qcperrorbars = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcperrorbars;
pub const qcperrorbarsdata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcperrorbarsdata;
pub const qcpfinancial = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpfinancial;
pub const qcpfinancialdata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpfinancialdata;
pub const qcpgraph = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpgraph;
pub const qcpgraphdata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpgraphdata;
pub const qcpgrid = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpgrid;
pub const qcpitemanchor = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemanchor;
pub const qcpitembracket = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitembracket;
pub const qcpitemcurve = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemcurve;
pub const qcpitemellipse = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemellipse;
pub const qcpitemline = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemline;
pub const qcpitempixmap = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitempixmap;
pub const qcpitemposition = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemposition;
pub const qcpitemrect = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemrect;
pub const qcpitemstraightline = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemstraightline;
pub const qcpitemtext = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemtext;
pub const qcpitemtracer = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpitemtracer;
pub const qcplayer = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplayer;
pub const qcplayerable = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplayerable;
pub const qcplayout = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplayout;
pub const qcplayoutelement = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplayoutelement;
pub const qcplayoutgrid = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplayoutgrid;
pub const qcplayoutinset = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplayoutinset;
pub const qcplegend = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplegend;
pub const qcplineending = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcplineending;
pub const qcpmargingroup = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpmargingroup;
pub const qcppaintbufferpixmap = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppaintbufferpixmap;
pub const qcppainter = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppainter;
pub const qcpplottableinterface1d = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpplottableinterface1d;
pub const qcpplottablelegenditem = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpplottablelegenditem;
pub const qcppolaraxisangular = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppolaraxisangular;
pub const qcppolaraxisradial = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppolaraxisradial;
pub const qcppolargraph = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppolargraph;
pub const qcppolargrid = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppolargrid;
pub const qcppolarlegenditem = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcppolarlegenditem;
pub const qcprange = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcprange;
pub const qcpscatterstyle = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpscatterstyle;
pub const qcpselectiondecorator = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpselectiondecorator;
pub const qcpselectiondecoratorbracket = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpselectiondecoratorbracket;
pub const qcpselectionrect = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpselectionrect;
pub const qcpstatisticalbox = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpstatisticalbox;
pub const qcpstatisticalboxdata = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpstatisticalboxdata;
pub const qcptextelement = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcptextelement;
pub const qcpvector2d = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcpvector2d;
pub const qcryptographichash = @import("libqcryptographichash.zig").qcryptographichash;
pub const qcryptographichash_enums = @import("libqcryptographichash.zig").enums;
pub const qcursor = @import("libqcursor.zig").qcursor;
pub const qcustomplot = @import("restricted-extras-qcustomplot/libqcustomplot.zig").qcustomplot;
pub const qcustomplot_enums = @import("restricted-extras-qcustomplot/libqcustomplot.zig").enums;
pub const qdatastream = @import("libqdatastream.zig").qdatastream;
pub const qdatastream_enums = @import("libqdatastream.zig").enums;
pub const qdatawidgetmapper = @import("libqdatawidgetmapper.zig").qdatawidgetmapper;
pub const qdatawidgetmapper_enums = @import("libqdatawidgetmapper.zig").enums;
pub const qdate = @import("libqdatetime.zig").qdate;
pub const qdateedit = @import("libqdatetimeedit.zig").qdateedit;
pub const qdatetime = @import("libqdatetime.zig").qdatetime;
pub const qdatetime_enums = @import("libqdatetime.zig").enums;
pub const qdatetimeaxis = @import("restricted-extras-charts/libqdatetimeaxis.zig").qdatetimeaxis;
pub const qdatetimeedit = @import("libqdatetimeedit.zig").qdatetimeedit;
pub const qdatetimeedit_enums = @import("libqdatetimeedit.zig").enums;
pub const qdbusabstractadaptor = @import("posix-extras-dbus/libqdbusabstractadaptor.zig").qdbusabstractadaptor;
pub const qdbusabstractinterface = @import("posix-extras-dbus/libqdbusabstractinterface.zig").qdbusabstractinterface;
pub const qdbusabstractinterfacebase = @import("posix-extras-dbus/libqdbusabstractinterface.zig").qdbusabstractinterfacebase;
pub const qdbusargument = @import("posix-extras-dbus/libqdbusargument.zig").qdbusargument;
pub const qdbusargument_enums = @import("posix-extras-dbus/libqdbusargument.zig").enums;
pub const qdbusconnection = @import("posix-extras-dbus/libqdbusconnection.zig").qdbusconnection;
pub const qdbusconnection_enums = @import("posix-extras-dbus/libqdbusconnection.zig").enums;
pub const qdbusconnectioninterface = @import("posix-extras-dbus/libqdbusconnectioninterface.zig").qdbusconnectioninterface;
pub const qdbusconnectioninterface_enums = @import("posix-extras-dbus/libqdbusconnectioninterface.zig").enums;
pub const qdbuscontext = @import("posix-extras-dbus/libqdbuscontext.zig").qdbuscontext;
pub const qdbuserror = @import("posix-extras-dbus/libqdbuserror.zig").qdbuserror;
pub const qdbuserror_enums = @import("posix-extras-dbus/libqdbuserror.zig").enums;
pub const qdbusinterface = @import("posix-extras-dbus/libqdbusinterface.zig").qdbusinterface;
pub const qdbusmessage = @import("posix-extras-dbus/libqdbusmessage.zig").qdbusmessage;
pub const qdbusmessage_enums = @import("posix-extras-dbus/libqdbusmessage.zig").enums;
pub const qdbusmetatype = @import("posix-extras-dbus/libqdbusmetatype.zig").qdbusmetatype;
pub const qdbusobjectpath = @import("posix-extras-dbus/libqdbusextratypes.zig").qdbusobjectpath;
pub const qdbuspendingcall = @import("posix-extras-dbus/libqdbuspendingcall.zig").qdbuspendingcall;
pub const qdbuspendingcallwatcher = @import("posix-extras-dbus/libqdbuspendingcall.zig").qdbuspendingcallwatcher;
pub const qdbuspendingreplybase = @import("posix-extras-dbus/libqdbuspendingreply.zig").qdbuspendingreplybase;
pub const qdbusserver = @import("posix-extras-dbus/libqdbusserver.zig").qdbusserver;
pub const qdbusservicewatcher = @import("posix-extras-dbus/libqdbusservicewatcher.zig").qdbusservicewatcher;
pub const qdbusservicewatcher_enums = @import("posix-extras-dbus/libqdbusservicewatcher.zig").enums;
pub const qdbussignature = @import("posix-extras-dbus/libqdbusextratypes.zig").qdbussignature;
pub const qdbusunixfiledescriptor = @import("posix-extras-dbus/libqdbusunixfiledescriptor.zig").qdbusunixfiledescriptor;
pub const qdbusvariant = @import("posix-extras-dbus/libqdbusextratypes.zig").qdbusvariant;
pub const qdbusvirtualobject = @import("posix-extras-dbus/libqdbusvirtualobject.zig").qdbusvirtualobject;
pub const qdeadlinetimer = @import("libqdeadlinetimer.zig").qdeadlinetimer;
pub const qdeadlinetimer_enums = @import("libqdeadlinetimer.zig").enums;
pub const qdebug = @import("libqdebug.zig").qdebug;
pub const qdebug_enums = @import("libqdebug.zig").enums;
pub const qdebugstatesaver = @import("libqdebug.zig").qdebugstatesaver;
pub const qdesktopservices = @import("libqdesktopservices.zig").qdesktopservices;
pub const qdial = @import("libqdial.zig").qdial;
pub const qdialog = @import("libqdialog.zig").qdialog;
pub const qdialog_enums = @import("libqdialog.zig").enums;
pub const qdialogbuttonbox = @import("libqdialogbuttonbox.zig").qdialogbuttonbox;
pub const qdialogbuttonbox_enums = @import("libqdialogbuttonbox.zig").enums;
pub const qdir = @import("libqdir.zig").qdir;
pub const qdir_enums = @import("libqdir.zig").enums;
pub const qdiriterator = @import("libqdiriterator.zig").qdiriterator;
pub const qdiriterator_enums = @import("libqdiriterator.zig").enums;
pub const qdirlisting = @import("libqdirlisting.zig").qdirlisting;
pub const qdirlisting__const_iterator = @import("libqdirlisting.zig").qdirlisting__const_iterator;
pub const qdirlisting__direntry = @import("libqdirlisting.zig").qdirlisting__direntry;
pub const qdirlisting__sentinel = @import("libqdirlisting.zig").qdirlisting__sentinel;
pub const qdirlisting_enums = @import("libqdirlisting.zig").enums;
pub const qdnsdomainnamerecord = @import("network/libqdnslookup.zig").qdnsdomainnamerecord;
pub const qdnshostaddressrecord = @import("network/libqdnslookup.zig").qdnshostaddressrecord;
pub const qdnslookup = @import("network/libqdnslookup.zig").qdnslookup;
pub const qdnslookup_enums = @import("network/libqdnslookup.zig").enums;
pub const qdnsmailexchangerecord = @import("network/libqdnslookup.zig").qdnsmailexchangerecord;
pub const qdnsservicerecord = @import("network/libqdnslookup.zig").qdnsservicerecord;
pub const qdnstextrecord = @import("network/libqdnslookup.zig").qdnstextrecord;
pub const qdnstlsassociationrecord = @import("network/libqdnslookup.zig").qdnstlsassociationrecord;
pub const qdockwidget = @import("libqdockwidget.zig").qdockwidget;
pub const qdockwidget_enums = @import("libqdockwidget.zig").enums;
pub const qdom_enums = @import("xml/libqdom.zig").enums;
pub const qdomattr = @import("xml/libqdom.zig").qdomattr;
pub const qdomcdatasection = @import("xml/libqdom.zig").qdomcdatasection;
pub const qdomcharacterdata = @import("xml/libqdom.zig").qdomcharacterdata;
pub const qdomcomment = @import("xml/libqdom.zig").qdomcomment;
pub const qdomdocument = @import("xml/libqdom.zig").qdomdocument;
pub const qdomdocument__parseresult = @import("xml/libqdom.zig").qdomdocument__parseresult;
pub const qdomdocumentfragment = @import("xml/libqdom.zig").qdomdocumentfragment;
pub const qdomdocumenttype = @import("xml/libqdom.zig").qdomdocumenttype;
pub const qdomelement = @import("xml/libqdom.zig").qdomelement;
pub const qdomentity = @import("xml/libqdom.zig").qdomentity;
pub const qdomentityreference = @import("xml/libqdom.zig").qdomentityreference;
pub const qdomimplementation = @import("xml/libqdom.zig").qdomimplementation;
pub const qdomnamednodemap = @import("xml/libqdom.zig").qdomnamednodemap;
pub const qdomnode = @import("xml/libqdom.zig").qdomnode;
pub const qdomnodelist = @import("xml/libqdom.zig").qdomnodelist;
pub const qdomnotation = @import("xml/libqdom.zig").qdomnotation;
pub const qdomprocessinginstruction = @import("xml/libqdom.zig").qdomprocessinginstruction;
pub const qdomtext = @import("xml/libqdom.zig").qdomtext;
pub const qdoublespinbox = @import("libqspinbox.zig").qdoublespinbox;
pub const qdoublevalidator = @import("libqvalidator.zig").qdoublevalidator;
pub const qdrag = @import("libqdrag.zig").qdrag;
pub const qdragenterevent = @import("libqevent.zig").qdragenterevent;
pub const qdragleaveevent = @import("libqevent.zig").qdragleaveevent;
pub const qdragmoveevent = @import("libqevent.zig").qdragmoveevent;
pub const qdrawutil_enums = @import("libqdrawutil.zig").enums;
pub const qdropevent = @import("libqevent.zig").qdropevent;
pub const qdtls = @import("network/libqdtls.zig").qdtls;
pub const qdtls_enums = @import("network/libqdtls.zig").enums;
pub const qdtlsclientverifier = @import("network/libqdtls.zig").qdtlsclientverifier;
pub const qdtlsclientverifier__generatorparameters = @import("network/libqdtls.zig").qdtlsclientverifier__generatorparameters;
pub const qdynamicpropertychangeevent = @import("libqcoreevent.zig").qdynamicpropertychangeevent;
pub const qeasingcurve = @import("libqeasingcurve.zig").qeasingcurve;
pub const qeasingcurve_enums = @import("libqeasingcurve.zig").enums;
pub const qelapsedtimer = @import("libqelapsedtimer.zig").qelapsedtimer;
pub const qelapsedtimer_enums = @import("libqelapsedtimer.zig").enums;
pub const qenterevent = @import("libqevent.zig").qenterevent;
pub const qerrormessage = @import("libqerrormessage.zig").qerrormessage;
pub const qevent = @import("libqcoreevent.zig").qevent;
pub const qevent_enums = @import("libqevent.zig").enums;
pub const qeventloop = @import("libqeventloop.zig").qeventloop;
pub const qeventloop_enums = @import("libqeventloop.zig").enums;
pub const qeventlooplocker = @import("libqeventloop.zig").qeventlooplocker;
pub const qeventpoint = @import("libqeventpoint.zig").qeventpoint;
pub const qeventpoint_enums = @import("libqeventpoint.zig").enums;
pub const qexposeevent = @import("libqevent.zig").qexposeevent;
pub const qfactoryinterface = @import("libqfactoryinterface.zig").qfactoryinterface;
pub const qfile = @import("libqfile.zig").qfile;
pub const qfiledevice = @import("libqfiledevice.zig").qfiledevice;
pub const qfiledevice_enums = @import("libqfiledevice.zig").enums;
pub const qfiledialog = @import("libqfiledialog.zig").qfiledialog;
pub const qfiledialog_enums = @import("libqfiledialog.zig").enums;
pub const qfileiconprovider = @import("libqfileiconprovider.zig").qfileiconprovider;
pub const qfileinfo = @import("libqfileinfo.zig").qfileinfo;
pub const qfileopenevent = @import("libqevent.zig").qfileopenevent;
pub const qfileselector = @import("libqfileselector.zig").qfileselector;
pub const qfilesystemmodel = @import("libqfilesystemmodel.zig").qfilesystemmodel;
pub const qfilesystemmodel_enums = @import("libqfilesystemmodel.zig").enums;
pub const qfilesystemwatcher = @import("libqfilesystemwatcher.zig").qfilesystemwatcher;
pub const qflag = @import("libqflags.zig").qflag;
pub const qfloat16 = @import("libqfloat16.zig").qfloat16;
pub const qfocusevent = @import("libqevent.zig").qfocusevent;
pub const qfocusframe = @import("libqfocusframe.zig").qfocusframe;
pub const qfont = @import("libqfont.zig").qfont;
pub const qfont__tag = @import("libqfont.zig").qfont__tag;
pub const qfont_enums = @import("libqfont.zig").enums;
pub const qfontcombobox = @import("libqfontcombobox.zig").qfontcombobox;
pub const qfontcombobox_enums = @import("libqfontcombobox.zig").enums;
pub const qfontdatabase = @import("libqfontdatabase.zig").qfontdatabase;
pub const qfontdatabase_enums = @import("libqfontdatabase.zig").enums;
pub const qfontdialog = @import("libqfontdialog.zig").qfontdialog;
pub const qfontdialog_enums = @import("libqfontdialog.zig").enums;
pub const qfontinfo = @import("libqfontinfo.zig").qfontinfo;
pub const qfontmetrics = @import("libqfontmetrics.zig").qfontmetrics;
pub const qfontmetricsf = @import("libqfontmetrics.zig").qfontmetricsf;
pub const qformdatabuilder = @import("network/libqformdatabuilder.zig").qformdatabuilder;
pub const qformdatabuilder_enums = @import("network/libqformdatabuilder.zig").enums;
pub const qformdatapartbuilder = @import("network/libqformdatabuilder.zig").qformdatapartbuilder;
pub const qformlayout = @import("libqformlayout.zig").qformlayout;
pub const qformlayout__takerowresult = @import("libqformlayout.zig").qformlayout__takerowresult;
pub const qformlayout_enums = @import("libqformlayout.zig").enums;
pub const qframe = @import("libqframe.zig").qframe;
pub const qframe_enums = @import("libqframe.zig").enums;
pub const qfutureinterface_enums = @import("libqfutureinterface.zig").enums;
pub const qfutureinterfacebase = @import("libqfutureinterface.zig").qfutureinterfacebase;
pub const qfuturewatcherbase = @import("libqfuturewatcher.zig").qfuturewatcherbase;
pub const qgenericargument = @import("libqobjectdefs.zig").qgenericargument;
pub const qgenericplugin = @import("libqgenericplugin.zig").qgenericplugin;
pub const qgenericpluginfactory = @import("libqgenericpluginfactory.zig").qgenericpluginfactory;
pub const qgenericreturnargument = @import("libqobjectdefs.zig").qgenericreturnargument;
pub const qgesture = @import("libqgesture.zig").qgesture;
pub const qgesture_enums = @import("libqgesture.zig").enums;
pub const qgestureevent = @import("libqgesture.zig").qgestureevent;
pub const qgesturerecognizer = @import("libqgesturerecognizer.zig").qgesturerecognizer;
pub const qgesturerecognizer_enums = @import("libqgesturerecognizer.zig").enums;
pub const qglobalstatic_enums = @import("libqglobalstatic.zig").enums;
pub const qglyphrun = @import("libqglyphrun.zig").qglyphrun;
pub const qglyphrun_enums = @import("libqglyphrun.zig").enums;
pub const qgradient = @import("libqbrush.zig").qgradient;
pub const qgradient__qgradientdata = @import("libqbrush.zig").qgradient__qgradientdata;
pub const qgraphicsanchor = @import("libqgraphicsanchorlayout.zig").qgraphicsanchor;
pub const qgraphicsanchorlayout = @import("libqgraphicsanchorlayout.zig").qgraphicsanchorlayout;
pub const qgraphicsblureffect = @import("libqgraphicseffect.zig").qgraphicsblureffect;
pub const qgraphicscolorizeeffect = @import("libqgraphicseffect.zig").qgraphicscolorizeeffect;
pub const qgraphicsdropshadoweffect = @import("libqgraphicseffect.zig").qgraphicsdropshadoweffect;
pub const qgraphicseffect = @import("libqgraphicseffect.zig").qgraphicseffect;
pub const qgraphicseffect_enums = @import("libqgraphicseffect.zig").enums;
pub const qgraphicsellipseitem = @import("libqgraphicsitem.zig").qgraphicsellipseitem;
pub const qgraphicsgridlayout = @import("libqgraphicsgridlayout.zig").qgraphicsgridlayout;
pub const qgraphicsitem = @import("libqgraphicsitem.zig").qgraphicsitem;
pub const qgraphicsitem_enums = @import("libqgraphicsitem.zig").enums;
pub const qgraphicsitemanimation = @import("libqgraphicsitemanimation.zig").qgraphicsitemanimation;
pub const qgraphicsitemgroup = @import("libqgraphicsitem.zig").qgraphicsitemgroup;
pub const qgraphicslayout = @import("libqgraphicslayout.zig").qgraphicslayout;
pub const qgraphicslayoutitem = @import("libqgraphicslayoutitem.zig").qgraphicslayoutitem;
pub const qgraphicslinearlayout = @import("libqgraphicslinearlayout.zig").qgraphicslinearlayout;
pub const qgraphicslineitem = @import("libqgraphicsitem.zig").qgraphicslineitem;
pub const qgraphicsobject = @import("libqgraphicsitem.zig").qgraphicsobject;
pub const qgraphicsopacityeffect = @import("libqgraphicseffect.zig").qgraphicsopacityeffect;
pub const qgraphicspathitem = @import("libqgraphicsitem.zig").qgraphicspathitem;
pub const qgraphicspixmapitem = @import("libqgraphicsitem.zig").qgraphicspixmapitem;
pub const qgraphicspolygonitem = @import("libqgraphicsitem.zig").qgraphicspolygonitem;
pub const qgraphicsproxywidget = @import("libqgraphicsproxywidget.zig").qgraphicsproxywidget;
pub const qgraphicsproxywidget_enums = @import("libqgraphicsproxywidget.zig").enums;
pub const qgraphicsrectitem = @import("libqgraphicsitem.zig").qgraphicsrectitem;
pub const qgraphicsrotation = @import("libqgraphicstransform.zig").qgraphicsrotation;
pub const qgraphicsscale = @import("libqgraphicstransform.zig").qgraphicsscale;
pub const qgraphicsscene = @import("libqgraphicsscene.zig").qgraphicsscene;
pub const qgraphicsscene_enums = @import("libqgraphicsscene.zig").enums;
pub const qgraphicsscenecontextmenuevent = @import("libqgraphicssceneevent.zig").qgraphicsscenecontextmenuevent;
pub const qgraphicsscenedragdropevent = @import("libqgraphicssceneevent.zig").qgraphicsscenedragdropevent;
pub const qgraphicssceneevent = @import("libqgraphicssceneevent.zig").qgraphicssceneevent;
pub const qgraphicssceneevent_enums = @import("libqgraphicssceneevent.zig").enums;
pub const qgraphicsscenehelpevent = @import("libqgraphicssceneevent.zig").qgraphicsscenehelpevent;
pub const qgraphicsscenehoverevent = @import("libqgraphicssceneevent.zig").qgraphicsscenehoverevent;
pub const qgraphicsscenemouseevent = @import("libqgraphicssceneevent.zig").qgraphicsscenemouseevent;
pub const qgraphicsscenemoveevent = @import("libqgraphicssceneevent.zig").qgraphicsscenemoveevent;
pub const qgraphicssceneresizeevent = @import("libqgraphicssceneevent.zig").qgraphicssceneresizeevent;
pub const qgraphicsscenewheelevent = @import("libqgraphicssceneevent.zig").qgraphicsscenewheelevent;
pub const qgraphicssimpletextitem = @import("libqgraphicsitem.zig").qgraphicssimpletextitem;
pub const qgraphicssvgitem = @import("svg/libqgraphicssvgitem.zig").qgraphicssvgitem;
pub const qgraphicssvgitem_enums = @import("svg/libqgraphicssvgitem.zig").enums;
pub const qgraphicstextitem = @import("libqgraphicsitem.zig").qgraphicstextitem;
pub const qgraphicstransform = @import("libqgraphicstransform.zig").qgraphicstransform;
pub const qgraphicsvideoitem = @import("multimedia/libqgraphicsvideoitem.zig").qgraphicsvideoitem;
pub const qgraphicsvideoitem_enums = @import("multimedia/libqgraphicsvideoitem.zig").enums;
pub const qgraphicsview = @import("libqgraphicsview.zig").qgraphicsview;
pub const qgraphicsview_enums = @import("libqgraphicsview.zig").enums;
pub const qgraphicswidget = @import("libqgraphicswidget.zig").qgraphicswidget;
pub const qgraphicswidget_enums = @import("libqgraphicswidget.zig").enums;
pub const qgridlayout = @import("libqgridlayout.zig").qgridlayout;
pub const qgroupbox = @import("libqgroupbox.zig").qgroupbox;
pub const qguiapplication = @import("libqguiapplication.zig").qguiapplication;
pub const qhashseed = @import("libqhashfunctions.zig").qhashseed;
pub const qhbarmodelmapper = @import("restricted-extras-charts/libqhbarmodelmapper.zig").qhbarmodelmapper;
pub const qhboxlayout = @import("libqboxlayout.zig").qhboxlayout;
pub const qhboxplotmodelmapper = @import("restricted-extras-charts/libqhboxplotmodelmapper.zig").qhboxplotmodelmapper;
pub const qhcandlestickmodelmapper = @import("restricted-extras-charts/libqhcandlestickmodelmapper.zig").qhcandlestickmodelmapper;
pub const qheaderview = @import("libqheaderview.zig").qheaderview;
pub const qheaderview_enums = @import("libqheaderview.zig").enums;
pub const qhelpevent = @import("libqevent.zig").qhelpevent;
pub const qhideevent = @import("libqevent.zig").qhideevent;
pub const qhorizontalbarseries = @import("restricted-extras-charts/libqhorizontalbarseries.zig").qhorizontalbarseries;
pub const qhorizontalpercentbarseries = @import("restricted-extras-charts/libqhorizontalpercentbarseries.zig").qhorizontalpercentbarseries;
pub const qhorizontalstackedbarseries = @import("restricted-extras-charts/libqhorizontalstackedbarseries.zig").qhorizontalstackedbarseries;
pub const qhostaddress = @import("network/libqhostaddress.zig").qhostaddress;
pub const qhostaddress_enums = @import("network/libqhostaddress.zig").enums;
pub const qhostinfo = @import("network/libqhostinfo.zig").qhostinfo;
pub const qhostinfo_enums = @import("network/libqhostinfo.zig").enums;
pub const qhoverevent = @import("libqevent.zig").qhoverevent;
pub const qhpiemodelmapper = @import("restricted-extras-charts/libqhpiemodelmapper.zig").qhpiemodelmapper;
pub const qhstspolicy = @import("network/libqhstspolicy.zig").qhstspolicy;
pub const qhstspolicy_enums = @import("network/libqhstspolicy.zig").enums;
pub const qhttp1configuration = @import("network/libqhttp1configuration.zig").qhttp1configuration;
pub const qhttp2configuration = @import("network/libqhttp2configuration.zig").qhttp2configuration;
pub const qhttpheaders = @import("network/libqhttpheaders.zig").qhttpheaders;
pub const qhttpheaders_enums = @import("network/libqhttpheaders.zig").enums;
pub const qhttpmultipart = @import("network/libqhttpmultipart.zig").qhttpmultipart;
pub const qhttpmultipart_enums = @import("network/libqhttpmultipart.zig").enums;
pub const qhttppart = @import("network/libqhttpmultipart.zig").qhttppart;
pub const qhxymodelmapper = @import("restricted-extras-charts/libqhxymodelmapper.zig").qhxymodelmapper;
pub const qicon = @import("libqicon.zig").qicon;
pub const qicon_enums = @import("libqicon.zig").enums;
pub const qicondragevent = @import("libqevent.zig").qicondragevent;
pub const qiconengine = @import("libqiconengine.zig").qiconengine;
pub const qiconengine__scaledpixmapargument = @import("libqiconengine.zig").qiconengine__scaledpixmapargument;
pub const qiconengine_enums = @import("libqiconengine.zig").enums;
pub const qiconengineplugin = @import("libqiconengineplugin.zig").qiconengineplugin;
pub const qidentityproxymodel = @import("libqidentityproxymodel.zig").qidentityproxymodel;
pub const qimage = @import("libqimage.zig").qimage;
pub const qimage_enums = @import("libqimage.zig").enums;
pub const qimagecapture = @import("multimedia/libqimagecapture.zig").qimagecapture;
pub const qimagecapture_enums = @import("multimedia/libqimagecapture.zig").enums;
pub const qimageiohandler = @import("libqimageiohandler.zig").qimageiohandler;
pub const qimageiohandler_enums = @import("libqimageiohandler.zig").enums;
pub const qimageioplugin = @import("libqimageiohandler.zig").qimageioplugin;
pub const qimagereader = @import("libqimagereader.zig").qimagereader;
pub const qimagereader_enums = @import("libqimagereader.zig").enums;
pub const qimagewriter = @import("libqimagewriter.zig").qimagewriter;
pub const qimagewriter_enums = @import("libqimagewriter.zig").enums;
pub const qincompatibleflag = @import("libqflags.zig").qincompatibleflag;
pub const qinputdevice = @import("libqinputdevice.zig").qinputdevice;
pub const qinputdevice_enums = @import("libqinputdevice.zig").enums;
pub const qinputdialog = @import("libqinputdialog.zig").qinputdialog;
pub const qinputdialog_enums = @import("libqinputdialog.zig").enums;
pub const qinputevent = @import("libqevent.zig").qinputevent;
pub const qinputmethod = @import("libqinputmethod.zig").qinputmethod;
pub const qinputmethod_enums = @import("libqinputmethod.zig").enums;
pub const qinputmethodevent = @import("libqevent.zig").qinputmethodevent;
pub const qinputmethodevent__attribute = @import("libqevent.zig").qinputmethodevent__attribute;
pub const qinputmethodqueryevent = @import("libqevent.zig").qinputmethodqueryevent;
pub const qinternal = @import("libqnamespace.zig").qinternal;
pub const qintvalidator = @import("libqvalidator.zig").qintvalidator;
pub const qiodevice = @import("libqiodevice.zig").qiodevice;
pub const qiodevicebase = @import("libqiodevicebase.zig").qiodevicebase;
pub const qiodevicebase_enums = @import("libqiodevicebase.zig").enums;
pub const qipv6address = @import("network/libqhostaddress.zig").qipv6address;
pub const qitemdelegate = @import("libqitemdelegate.zig").qitemdelegate;
pub const qitemeditorcreatorbase = @import("libqitemeditorfactory.zig").qitemeditorcreatorbase;
pub const qitemeditorfactory = @import("libqitemeditorfactory.zig").qitemeditorfactory;
pub const qitemselection = @import("libqitemselectionmodel.zig").qitemselection;
pub const qitemselectionmodel = @import("libqitemselectionmodel.zig").qitemselectionmodel;
pub const qitemselectionmodel_enums = @import("libqitemselectionmodel.zig").enums;
pub const qitemselectionrange = @import("libqitemselectionmodel.zig").qitemselectionrange;
pub const qjsonarray = @import("libqjsonarray.zig").qjsonarray;
pub const qjsonarray__const_iterator = @import("libqjsonarray.zig").qjsonarray__const_iterator;
pub const qjsonarray__iterator = @import("libqjsonarray.zig").qjsonarray__iterator;
pub const qjsondocument = @import("libqjsondocument.zig").qjsondocument;
pub const qjsondocument_enums = @import("libqjsondocument.zig").enums;
pub const qjsonobject = @import("libqjsonobject.zig").qjsonobject;
pub const qjsonobject__const_iterator = @import("libqjsonobject.zig").qjsonobject__const_iterator;
pub const qjsonobject__iterator = @import("libqjsonobject.zig").qjsonobject__iterator;
pub const qjsonparseerror = @import("libqjsondocument.zig").qjsonparseerror;
pub const qjsonvalue = @import("libqjsonvalue.zig").qjsonvalue;
pub const qjsonvalue_enums = @import("libqjsonvalue.zig").enums;
pub const qjsonvalueconstref = @import("libqjsonvalue.zig").qjsonvalueconstref;
pub const qjsonvalueref = @import("libqjsonvalue.zig").qjsonvalueref;
pub const qkeychain = @import("extras-qtkeychain/libkeychain.zig").qkeychain;
pub const qkeychain__deletepasswordjob = @import("extras-qtkeychain/libkeychain.zig").qkeychain__deletepasswordjob;
pub const qkeychain__job = @import("extras-qtkeychain/libkeychain.zig").qkeychain__job;
pub const qkeychain__readpasswordjob = @import("extras-qtkeychain/libkeychain.zig").qkeychain__readpasswordjob;
pub const qkeychain__writepasswordjob = @import("extras-qtkeychain/libkeychain.zig").qkeychain__writepasswordjob;
pub const qkeycombination = @import("libqnamespace.zig").qkeycombination;
pub const qkeyevent = @import("libqevent.zig").qkeyevent;
pub const qkeysequence = @import("libqkeysequence.zig").qkeysequence;
pub const qkeysequence_enums = @import("libqkeysequence.zig").enums;
pub const qkeysequenceedit = @import("libqkeysequenceedit.zig").qkeysequenceedit;
pub const qlabel = @import("libqlabel.zig").qlabel;
pub const qlatin1char = @import("libqchar.zig").qlatin1char;
pub const qlatin1string = @import("libqlatin1stringview.zig").qlatin1string;
pub const qlatin1stringmatcher = @import("libqlatin1stringmatcher.zig").qlatin1stringmatcher;
pub const qlayout = @import("libqlayout.zig").qlayout;
pub const qlayout_enums = @import("libqlayout.zig").enums;
pub const qlayoutitem = @import("libqlayoutitem.zig").qlayoutitem;
pub const qlcdnumber = @import("libqlcdnumber.zig").qlcdnumber;
pub const qlcdnumber_enums = @import("libqlcdnumber.zig").enums;
pub const qlegend = @import("restricted-extras-charts/libqlegend.zig").qlegend;
pub const qlegend_enums = @import("restricted-extras-charts/libqlegend.zig").enums;
pub const qlegendmarker = @import("restricted-extras-charts/libqlegendmarker.zig").qlegendmarker;
pub const qlegendmarker_enums = @import("restricted-extras-charts/libqlegendmarker.zig").enums;
pub const qlibrary = @import("libqlibrary.zig").qlibrary;
pub const qlibrary_enums = @import("libqlibrary.zig").enums;
pub const qlibraryinfo = @import("libqlibraryinfo.zig").qlibraryinfo;
pub const qlibraryinfo_enums = @import("libqlibraryinfo.zig").enums;
pub const qline = @import("libqline.zig").qline;
pub const qline_enums = @import("libqline.zig").enums;
pub const qlineargradient = @import("libqbrush.zig").qlineargradient;
pub const qlineedit = @import("libqlineedit.zig").qlineedit;
pub const qlineedit_enums = @import("libqlineedit.zig").enums;
pub const qlinef = @import("libqline.zig").qlinef;
pub const qlineseries = @import("restricted-extras-charts/libqlineseries.zig").qlineseries;
pub const qlistview = @import("libqlistview.zig").qlistview;
pub const qlistview_enums = @import("libqlistview.zig").enums;
pub const qlistwidget = @import("libqlistwidget.zig").qlistwidget;
pub const qlistwidget_enums = @import("libqlistwidget.zig").enums;
pub const qlistwidgetitem = @import("libqlistwidget.zig").qlistwidgetitem;
pub const qlocale = @import("libqlocale.zig").qlocale;
pub const qlocale_enums = @import("libqlocale.zig").enums;
pub const qlocalserver = @import("network/libqlocalserver.zig").qlocalserver;
pub const qlocalserver_enums = @import("network/libqlocalserver.zig").enums;
pub const qlocalsocket = @import("network/libqlocalsocket.zig").qlocalsocket;
pub const qlocalsocket_enums = @import("network/libqlocalsocket.zig").enums;
pub const qlocationpermission = @import("libqpermissions.zig").qlocationpermission;
pub const qlockfile = @import("libqlockfile.zig").qlockfile;
pub const qlockfile_enums = @import("libqlockfile.zig").enums;
pub const qlogging_enums = @import("libqlogging.zig").enums;
pub const qloggingcategory = @import("libqloggingcategory.zig").qloggingcategory;
pub const qlogvalueaxis = @import("restricted-extras-charts/libqlogvalueaxis.zig").qlogvalueaxis;
pub const qmainwindow = @import("libqmainwindow.zig").qmainwindow;
pub const qmainwindow_enums = @import("libqmainwindow.zig").enums;
pub const qmargins = @import("libqmargins.zig").qmargins;
pub const qmarginsf = @import("libqmargins.zig").qmarginsf;
pub const qmatrix4x4 = @import("libqmatrix4x4.zig").qmatrix4x4;
pub const qmatrix4x4_enums = @import("libqmatrix4x4.zig").enums;
pub const qmdiarea = @import("libqmdiarea.zig").qmdiarea;
pub const qmdiarea_enums = @import("libqmdiarea.zig").enums;
pub const qmdisubwindow = @import("libqmdisubwindow.zig").qmdisubwindow;
pub const qmdisubwindow_enums = @import("libqmdisubwindow.zig").enums;
pub const qmediacapturesession = @import("multimedia/libqmediacapturesession.zig").qmediacapturesession;
pub const qmediadevices = @import("multimedia/libqmediadevices.zig").qmediadevices;
pub const qmediaformat = @import("multimedia/libqmediaformat.zig").qmediaformat;
pub const qmediaformat_enums = @import("multimedia/libqmediaformat.zig").enums;
pub const qmediametadata = @import("multimedia/libqmediametadata.zig").qmediametadata;
pub const qmediametadata_enums = @import("multimedia/libqmediametadata.zig").enums;
pub const qmediaplayer = @import("multimedia/libqmediaplayer.zig").qmediaplayer;
pub const qmediaplayer_enums = @import("multimedia/libqmediaplayer.zig").enums;
pub const qmediarecorder = @import("multimedia/libqmediarecorder.zig").qmediarecorder;
pub const qmediarecorder_enums = @import("multimedia/libqmediarecorder.zig").enums;
pub const qmediatimerange = @import("multimedia/libqmediatimerange.zig").qmediatimerange;
pub const qmediatimerange__interval = @import("multimedia/libqmediatimerange.zig").qmediatimerange__interval;
pub const qmenu = @import("libqmenu.zig").qmenu;
pub const qmenubar = @import("libqmenubar.zig").qmenubar;
pub const qmessageauthenticationcode = @import("libqmessageauthenticationcode.zig").qmessageauthenticationcode;
pub const qmessagebox = @import("libqmessagebox.zig").qmessagebox;
pub const qmessagebox_enums = @import("libqmessagebox.zig").enums;
pub const qmessagelogcontext = @import("libqlogging.zig").qmessagelogcontext;
pub const qmessagelogger = @import("libqlogging.zig").qmessagelogger;
pub const qmetaassociation = @import("libqmetacontainer.zig").qmetaassociation;
pub const qmetaclassinfo = @import("libqmetaobject.zig").qmetaclassinfo;
pub const qmetacontainer = @import("libqmetacontainer.zig").qmetacontainer;
pub const qmetacontainer_enums = @import("libqmetacontainer.zig").enums;
pub const qmetaenum = @import("libqmetaobject.zig").qmetaenum;
pub const qmetamethod = @import("libqmetaobject.zig").qmetamethod;
pub const qmetamethodargument = @import("libqobjectdefs.zig").qmetamethodargument;
pub const qmetamethodreturnargument = @import("libqobjectdefs.zig").qmetamethodreturnargument;
pub const qmetaobject = @import("libqobjectdefs.zig").qmetaobject;
pub const qmetaobject__connection = @import("libqobjectdefs.zig").qmetaobject__connection;
pub const qmetaobject__data = @import("libqobjectdefs.zig").qmetaobject__data;
pub const qmetaobject__superdata = @import("libqobjectdefs.zig").qmetaobject__superdata;
pub const qmetaobject_enums = @import("libqmetaobject.zig").enums;
pub const qmetaproperty = @import("libqmetaobject.zig").qmetaproperty;
pub const qmetasequence = @import("libqmetacontainer.zig").qmetasequence;
pub const qmetatype = @import("libqmetatype.zig").qmetatype;
pub const qmetatype_enums = @import("libqmetatype.zig").enums;
pub const qmicrophonepermission = @import("libqpermissions.zig").qmicrophonepermission;
pub const qmimedata = @import("libqmimedata.zig").qmimedata;
pub const qmimedatabase = @import("libqmimedatabase.zig").qmimedatabase;
pub const qmimedatabase_enums = @import("libqmimedatabase.zig").enums;
pub const qmimetype = @import("libqmimetype.zig").qmimetype;
pub const qmodelindex = @import("libqabstractitemmodel.zig").qmodelindex;
pub const qmodelroledata = @import("libqabstractitemmodel.zig").qmodelroledata;
pub const qmodelroledataspan = @import("libqabstractitemmodel.zig").qmodelroledataspan;
pub const qmouseevent = @import("libqevent.zig").qmouseevent;
pub const qmoveevent = @import("libqevent.zig").qmoveevent;
pub const qmovie = @import("libqmovie.zig").qmovie;
pub const qmovie_enums = @import("libqmovie.zig").enums;
pub const qmutex = @import("libqmutex.zig").qmutex;
pub const qnamespace_enums = @import("libqnamespace.zig").enums;
pub const qnativegestureevent = @import("libqevent.zig").qnativegestureevent;
pub const qnativeinterface__qeglcontext = @import("libqopenglcontext_platform.zig").qnativeinterface__qeglcontext;
pub const qnativeipckey = @import("libqtipccommon.zig").qnativeipckey;
pub const qnetworkaccessmanager = @import("network/libqnetworkaccessmanager.zig").qnetworkaccessmanager;
pub const qnetworkaccessmanager_enums = @import("network/libqnetworkaccessmanager.zig").enums;
pub const qnetworkaddressentry = @import("network/libqnetworkinterface.zig").qnetworkaddressentry;
pub const qnetworkcachemetadata = @import("network/libqabstractnetworkcache.zig").qnetworkcachemetadata;
pub const qnetworkcookie = @import("network/libqnetworkcookie.zig").qnetworkcookie;
pub const qnetworkcookie_enums = @import("network/libqnetworkcookie.zig").enums;
pub const qnetworkcookiejar = @import("network/libqnetworkcookiejar.zig").qnetworkcookiejar;
pub const qnetworkdatagram = @import("network/libqnetworkdatagram.zig").qnetworkdatagram;
pub const qnetworkdiskcache = @import("network/libqnetworkdiskcache.zig").qnetworkdiskcache;
pub const qnetworkinformation = @import("network/libqnetworkinformation.zig").qnetworkinformation;
pub const qnetworkinformation_enums = @import("network/libqnetworkinformation.zig").enums;
pub const qnetworkinterface = @import("network/libqnetworkinterface.zig").qnetworkinterface;
pub const qnetworkinterface_enums = @import("network/libqnetworkinterface.zig").enums;
pub const qnetworkproxy = @import("network/libqnetworkproxy.zig").qnetworkproxy;
pub const qnetworkproxy_enums = @import("network/libqnetworkproxy.zig").enums;
pub const qnetworkproxyfactory = @import("network/libqnetworkproxy.zig").qnetworkproxyfactory;
pub const qnetworkproxyquery = @import("network/libqnetworkproxy.zig").qnetworkproxyquery;
pub const qnetworkreply = @import("network/libqnetworkreply.zig").qnetworkreply;
pub const qnetworkreply_enums = @import("network/libqnetworkreply.zig").enums;
pub const qnetworkrequest = @import("network/libqnetworkrequest.zig").qnetworkrequest;
pub const qnetworkrequest_enums = @import("network/libqnetworkrequest.zig").enums;
pub const qnetworkrequestfactory = @import("network/libqnetworkrequestfactory.zig").qnetworkrequestfactory;
pub const qnodebug = @import("libqdebug.zig").qnodebug;
pub const qobject = @import("libqobject.zig").qobject;
pub const qobject_enums = @import("libqobject.zig").enums;
pub const qobjectcleanuphandler = @import("libqobjectcleanuphandler.zig").qobjectcleanuphandler;
pub const qobjectdata = @import("libqobject.zig").qobjectdata;
pub const qobjectdefs_enums = @import("libqobjectdefs.zig").enums;
pub const qocspresponse = @import("network/libqocspresponse.zig").qocspresponse;
pub const qocspresponse_enums = @import("network/libqocspresponse.zig").enums;
pub const qoffscreensurface = @import("libqoffscreensurface.zig").qoffscreensurface;
pub const qopenglbuffer = @import("opengl/libqopenglbuffer.zig").qopenglbuffer;
pub const qopenglbuffer_enums = @import("opengl/libqopenglbuffer.zig").enums;
pub const qopenglcontext = @import("libqopenglcontext.zig").qopenglcontext;
pub const qopenglcontext_enums = @import("libqopenglcontext.zig").enums;
pub const qopenglcontextgroup = @import("libqopenglcontext.zig").qopenglcontextgroup;
pub const qopengldebug_enums = @import("opengl/libqopengldebug.zig").enums;
pub const qopengldebuglogger = @import("opengl/libqopengldebug.zig").qopengldebuglogger;
pub const qopengldebugmessage = @import("opengl/libqopengldebug.zig").qopengldebugmessage;
pub const qopenglextrafunctions = @import("libqopenglextrafunctions.zig").qopenglextrafunctions;
pub const qopenglframebufferobject = @import("opengl/libqopenglframebufferobject.zig").qopenglframebufferobject;
pub const qopenglframebufferobject_enums = @import("opengl/libqopenglframebufferobject.zig").enums;
pub const qopenglframebufferobjectformat = @import("opengl/libqopenglframebufferobject.zig").qopenglframebufferobjectformat;
pub const qopenglfunctions = @import("libqopenglfunctions.zig").qopenglfunctions;
pub const qopenglfunctions_1_0 = @import("opengl/libqopenglfunctions_1_0.zig").qopenglfunctions_1_0;
pub const qopenglfunctions_1_0_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_0_corebackend;
pub const qopenglfunctions_1_0_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_0_deprecatedbackend;
pub const qopenglfunctions_1_1 = @import("opengl/libqopenglfunctions_1_1.zig").qopenglfunctions_1_1;
pub const qopenglfunctions_1_1_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_1_corebackend;
pub const qopenglfunctions_1_1_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_1_deprecatedbackend;
pub const qopenglfunctions_1_2 = @import("opengl/libqopenglfunctions_1_2.zig").qopenglfunctions_1_2;
pub const qopenglfunctions_1_2_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_2_corebackend;
pub const qopenglfunctions_1_2_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_2_deprecatedbackend;
pub const qopenglfunctions_1_3 = @import("opengl/libqopenglfunctions_1_3.zig").qopenglfunctions_1_3;
pub const qopenglfunctions_1_3_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_3_corebackend;
pub const qopenglfunctions_1_3_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_3_deprecatedbackend;
pub const qopenglfunctions_1_4 = @import("opengl/libqopenglfunctions_1_4.zig").qopenglfunctions_1_4;
pub const qopenglfunctions_1_4_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_4_corebackend;
pub const qopenglfunctions_1_4_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_4_deprecatedbackend;
pub const qopenglfunctions_1_5 = @import("opengl/libqopenglfunctions_1_5.zig").qopenglfunctions_1_5;
pub const qopenglfunctions_1_5_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_1_5_corebackend;
pub const qopenglfunctions_2_0 = @import("opengl/libqopenglfunctions_2_0.zig").qopenglfunctions_2_0;
pub const qopenglfunctions_2_0_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_2_0_corebackend;
pub const qopenglfunctions_2_0_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_2_0_deprecatedbackend;
pub const qopenglfunctions_2_1 = @import("opengl/libqopenglfunctions_2_1.zig").qopenglfunctions_2_1;
pub const qopenglfunctions_2_1_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_2_1_corebackend;
pub const qopenglfunctions_3_0 = @import("opengl/libqopenglfunctions_3_0.zig").qopenglfunctions_3_0;
pub const qopenglfunctions_3_0_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_3_0_corebackend;
pub const qopenglfunctions_3_0_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_3_0_deprecatedbackend;
pub const qopenglfunctions_3_1 = @import("opengl/libqopenglfunctions_3_1.zig").qopenglfunctions_3_1;
pub const qopenglfunctions_3_1_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_3_1_corebackend;
pub const qopenglfunctions_3_2_compatibility = @import("opengl/libqopenglfunctions_3_2_compatibility.zig").qopenglfunctions_3_2_compatibility;
pub const qopenglfunctions_3_2_core = @import("opengl/libqopenglfunctions_3_2_core.zig").qopenglfunctions_3_2_core;
pub const qopenglfunctions_3_2_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_3_2_corebackend;
pub const qopenglfunctions_3_3_compatibility = @import("opengl/libqopenglfunctions_3_3_compatibility.zig").qopenglfunctions_3_3_compatibility;
pub const qopenglfunctions_3_3_core = @import("opengl/libqopenglfunctions_3_3_core.zig").qopenglfunctions_3_3_core;
pub const qopenglfunctions_3_3_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_3_3_corebackend;
pub const qopenglfunctions_3_3_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_3_3_deprecatedbackend;
pub const qopenglfunctions_4_0_compatibility = @import("opengl/libqopenglfunctions_4_0_compatibility.zig").qopenglfunctions_4_0_compatibility;
pub const qopenglfunctions_4_0_core = @import("opengl/libqopenglfunctions_4_0_core.zig").qopenglfunctions_4_0_core;
pub const qopenglfunctions_4_0_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_0_corebackend;
pub const qopenglfunctions_4_1_compatibility = @import("opengl/libqopenglfunctions_4_1_compatibility.zig").qopenglfunctions_4_1_compatibility;
pub const qopenglfunctions_4_1_core = @import("opengl/libqopenglfunctions_4_1_core.zig").qopenglfunctions_4_1_core;
pub const qopenglfunctions_4_1_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_1_corebackend;
pub const qopenglfunctions_4_2_compatibility = @import("opengl/libqopenglfunctions_4_2_compatibility.zig").qopenglfunctions_4_2_compatibility;
pub const qopenglfunctions_4_2_core = @import("opengl/libqopenglfunctions_4_2_core.zig").qopenglfunctions_4_2_core;
pub const qopenglfunctions_4_2_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_2_corebackend;
pub const qopenglfunctions_4_3_compatibility = @import("opengl/libqopenglfunctions_4_3_compatibility.zig").qopenglfunctions_4_3_compatibility;
pub const qopenglfunctions_4_3_core = @import("opengl/libqopenglfunctions_4_3_core.zig").qopenglfunctions_4_3_core;
pub const qopenglfunctions_4_3_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_3_corebackend;
pub const qopenglfunctions_4_4_compatibility = @import("opengl/libqopenglfunctions_4_4_compatibility.zig").qopenglfunctions_4_4_compatibility;
pub const qopenglfunctions_4_4_core = @import("opengl/libqopenglfunctions_4_4_core.zig").qopenglfunctions_4_4_core;
pub const qopenglfunctions_4_4_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_4_corebackend;
pub const qopenglfunctions_4_5_compatibility = @import("opengl/libqopenglfunctions_4_5_compatibility.zig").qopenglfunctions_4_5_compatibility;
pub const qopenglfunctions_4_5_core = @import("opengl/libqopenglfunctions_4_5_core.zig").qopenglfunctions_4_5_core;
pub const qopenglfunctions_4_5_corebackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_5_corebackend;
pub const qopenglfunctions_4_5_deprecatedbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglfunctions_4_5_deprecatedbackend;
pub const qopenglfunctions_enums = @import("libqopenglfunctions.zig").enums;
pub const qopenglpaintdevice = @import("opengl/libqopenglpaintdevice.zig").qopenglpaintdevice;
pub const qopenglpixeltransferoptions = @import("opengl/libqopenglpixeltransferoptions.zig").qopenglpixeltransferoptions;
pub const qopenglshader = @import("opengl/libqopenglshaderprogram.zig").qopenglshader;
pub const qopenglshaderprogram = @import("opengl/libqopenglshaderprogram.zig").qopenglshaderprogram;
pub const qopenglshaderprogram_enums = @import("opengl/libqopenglshaderprogram.zig").enums;
pub const qopengltexture = @import("opengl/libqopengltexture.zig").qopengltexture;
pub const qopengltexture_enums = @import("opengl/libqopengltexture.zig").enums;
pub const qopengltextureblitter = @import("opengl/libqopengltextureblitter.zig").qopengltextureblitter;
pub const qopengltextureblitter_enums = @import("opengl/libqopengltextureblitter.zig").enums;
pub const qopengltimemonitor = @import("opengl/libqopengltimerquery.zig").qopengltimemonitor;
pub const qopengltimerquery = @import("opengl/libqopengltimerquery.zig").qopengltimerquery;
pub const qopenglversionfunctions_enums = @import("opengl/libqopenglversionfunctions.zig").enums;
pub const qopenglversionfunctionsbackend = @import("opengl/libqopenglversionfunctions.zig").qopenglversionfunctionsbackend;
pub const qopenglversionfunctionsfactory = @import("opengl/libqopenglversionfunctionsfactory.zig").qopenglversionfunctionsfactory;
pub const qopenglversionprofile = @import("opengl/libqopenglversionprofile.zig").qopenglversionprofile;
pub const qopenglversionstatus = @import("opengl/libqopenglversionfunctions.zig").qopenglversionstatus;
pub const qopenglvertexarrayobject = @import("opengl/libqopenglvertexarrayobject.zig").qopenglvertexarrayobject;
pub const qopenglvertexarrayobject__binder = @import("opengl/libqopenglvertexarrayobject.zig").qopenglvertexarrayobject__binder;
pub const qopenglwidget = @import("opengl/libqopenglwidget.zig").qopenglwidget;
pub const qopenglwidget_enums = @import("opengl/libqopenglwidget.zig").enums;
pub const qopenglwindow = @import("opengl/libqopenglwindow.zig").qopenglwindow;
pub const qopenglwindow_enums = @import("opengl/libqopenglwindow.zig").enums;
pub const qoperatingsystemversion = @import("libqoperatingsystemversion.zig").qoperatingsystemversion;
pub const qoperatingsystemversion_enums = @import("libqoperatingsystemversion.zig").enums;
pub const qoperatingsystemversionbase = @import("libqoperatingsystemversion.zig").qoperatingsystemversionbase;
pub const qoperatingsystemversionunexported = @import("libqoperatingsystemversion.zig").qoperatingsystemversionunexported;
pub const qpagedpaintdevice = @import("libqpagedpaintdevice.zig").qpagedpaintdevice;
pub const qpagedpaintdevice_enums = @import("libqpagedpaintdevice.zig").enums;
pub const qpagelayout = @import("libqpagelayout.zig").qpagelayout;
pub const qpagelayout_enums = @import("libqpagelayout.zig").enums;
pub const qpageranges = @import("libqpageranges.zig").qpageranges;
pub const qpageranges__range = @import("libqpageranges.zig").qpageranges__range;
pub const qpagesetupdialog = @import("printsupport/libqpagesetupdialog.zig").qpagesetupdialog;
pub const qpagesize = @import("libqpagesize.zig").qpagesize;
pub const qpagesize_enums = @import("libqpagesize.zig").enums;
pub const qpaintdevice = @import("libqpaintdevice.zig").qpaintdevice;
pub const qpaintdevice_enums = @import("libqpaintdevice.zig").enums;
pub const qpaintdevicewindow = @import("libqpaintdevicewindow.zig").qpaintdevicewindow;
pub const qpaintengine = @import("libqpaintengine.zig").qpaintengine;
pub const qpaintengine_enums = @import("libqpaintengine.zig").enums;
pub const qpaintenginestate = @import("libqpaintengine.zig").qpaintenginestate;
pub const qpainter = @import("libqpainter.zig").qpainter;
pub const qpainter__pixmapfragment = @import("libqpainter.zig").qpainter__pixmapfragment;
pub const qpainter_enums = @import("libqpainter.zig").enums;
pub const qpainterpath = @import("libqpainterpath.zig").qpainterpath;
pub const qpainterpath__element = @import("libqpainterpath.zig").qpainterpath__element;
pub const qpainterpath_enums = @import("libqpainterpath.zig").enums;
pub const qpainterpathstroker = @import("libqpainterpath.zig").qpainterpathstroker;
pub const qpaintevent = @import("libqevent.zig").qpaintevent;
pub const qpalette = @import("libqpalette.zig").qpalette;
pub const qpalette_enums = @import("libqpalette.zig").enums;
pub const qpangesture = @import("libqgesture.zig").qpangesture;
pub const qparallelanimationgroup = @import("libqparallelanimationgroup.zig").qparallelanimationgroup;
pub const qpartialordering = @import("libqcompare.zig").qpartialordering;
pub const qpassworddigestor = @import("network/libqpassworddigestor.zig").qpassworddigestor;
pub const qpauseanimation = @import("libqpauseanimation.zig").qpauseanimation;
pub const qpdfbookmarkmodel = @import("pdf/libqpdfbookmarkmodel.zig").qpdfbookmarkmodel;
pub const qpdfbookmarkmodel_enums = @import("pdf/libqpdfbookmarkmodel.zig").enums;
pub const qpdfdocument = @import("pdf/libqpdfdocument.zig").qpdfdocument;
pub const qpdfdocument_enums = @import("pdf/libqpdfdocument.zig").enums;
pub const qpdfdocumentrenderoptions = @import("pdf/libqpdfdocumentrenderoptions.zig").qpdfdocumentrenderoptions;
pub const qpdfdocumentrenderoptions_enums = @import("pdf/libqpdfdocumentrenderoptions.zig").enums;
pub const qpdflink = @import("pdf/libqpdflink.zig").qpdflink;
pub const qpdflinkmodel = @import("pdf/libqpdflinkmodel.zig").qpdflinkmodel;
pub const qpdflinkmodel_enums = @import("pdf/libqpdflinkmodel.zig").enums;
pub const qpdfoutputintent = @import("libqpdfoutputintent.zig").qpdfoutputintent;
pub const qpdfpagenavigator = @import("pdf/libqpdfpagenavigator.zig").qpdfpagenavigator;
pub const qpdfpagerenderer = @import("pdf/libqpdfpagerenderer.zig").qpdfpagerenderer;
pub const qpdfpagerenderer_enums = @import("pdf/libqpdfpagerenderer.zig").enums;
pub const qpdfpageselector = @import("pdf/libqpdfpageselector.zig").qpdfpageselector;
pub const qpdfsearchmodel = @import("pdf/libqpdfsearchmodel.zig").qpdfsearchmodel;
pub const qpdfsearchmodel_enums = @import("pdf/libqpdfsearchmodel.zig").enums;
pub const qpdfselection = @import("pdf/libqpdfselection.zig").qpdfselection;
pub const qpdfview = @import("pdf/libqpdfview.zig").qpdfview;
pub const qpdfview_enums = @import("pdf/libqpdfview.zig").enums;
pub const qpdfwriter = @import("libqpdfwriter.zig").qpdfwriter;
pub const qpdfwriter_enums = @import("libqpdfwriter.zig").enums;
pub const qpen = @import("libqpen.zig").qpen;
pub const qpercentbarseries = @import("restricted-extras-charts/libqpercentbarseries.zig").qpercentbarseries;
pub const qpermission = @import("libqpermissions.zig").qpermission;
pub const qpermissions_enums = @import("libqpermissions.zig").enums;
pub const qpersistentmodelindex = @import("libqabstractitemmodel.zig").qpersistentmodelindex;
pub const qpicture = @import("libqpicture.zig").qpicture;
pub const qpielegendmarker = @import("restricted-extras-charts/libqpielegendmarker.zig").qpielegendmarker;
pub const qpiemodelmapper = @import("restricted-extras-charts/libqpiemodelmapper.zig").qpiemodelmapper;
pub const qpieseries = @import("restricted-extras-charts/libqpieseries.zig").qpieseries;
pub const qpieslice = @import("restricted-extras-charts/libqpieslice.zig").qpieslice;
pub const qpieslice_enums = @import("restricted-extras-charts/libqpieslice.zig").enums;
pub const qpinchgesture = @import("libqgesture.zig").qpinchgesture;
pub const qpixelformat = @import("libqpixelformat.zig").qpixelformat;
pub const qpixelformat_enums = @import("libqpixelformat.zig").enums;
pub const qpixmap = @import("libqpixmap.zig").qpixmap;
pub const qpixmapcache = @import("libqpixmapcache.zig").qpixmapcache;
pub const qpixmapcache__key = @import("libqpixmapcache.zig").qpixmapcache__key;
pub const qplaintextdocumentlayout = @import("libqplaintextedit.zig").qplaintextdocumentlayout;
pub const qplaintextedit = @import("libqplaintextedit.zig").qplaintextedit;
pub const qplaintextedit_enums = @import("libqplaintextedit.zig").enums;
pub const qplatformsurfaceevent = @import("libqevent.zig").qplatformsurfaceevent;
pub const qpluginloader = @import("libqpluginloader.zig").qpluginloader;
pub const qpluginmetadata = @import("libqplugin.zig").qpluginmetadata;
pub const qpluginmetadata__elfnoteheader = @import("libqplugin.zig").qpluginmetadata__elfnoteheader;
pub const qpluginmetadata__header = @import("libqplugin.zig").qpluginmetadata__header;
pub const qpluginmetadata__magicheader = @import("libqplugin.zig").qpluginmetadata__magicheader;
pub const qpoint = @import("libqpoint.zig").qpoint;
pub const qpointerevent = @import("libqevent.zig").qpointerevent;
pub const qpointf = @import("libqpoint.zig").qpointf;
pub const qpointingdevice = @import("libqpointingdevice.zig").qpointingdevice;
pub const qpointingdevice_enums = @import("libqpointingdevice.zig").enums;
pub const qpointingdeviceuniqueid = @import("libqpointingdevice.zig").qpointingdeviceuniqueid;
pub const qpolarchart = @import("restricted-extras-charts/libqpolarchart.zig").qpolarchart;
pub const qpolarchart_enums = @import("restricted-extras-charts/libqpolarchart.zig").enums;
pub const qprintdialog = @import("printsupport/libqprintdialog.zig").qprintdialog;
pub const qprintengine = @import("printsupport/libqprintengine.zig").qprintengine;
pub const qprintengine_enums = @import("printsupport/libqprintengine.zig").enums;
pub const qprinter = @import("printsupport/libqprinter.zig").qprinter;
pub const qprinter_enums = @import("printsupport/libqprinter.zig").enums;
pub const qprinterinfo = @import("printsupport/libqprinterinfo.zig").qprinterinfo;
pub const qprintpreviewdialog = @import("printsupport/libqprintpreviewdialog.zig").qprintpreviewdialog;
pub const qprintpreviewwidget = @import("printsupport/libqprintpreviewwidget.zig").qprintpreviewwidget;
pub const qprintpreviewwidget_enums = @import("printsupport/libqprintpreviewwidget.zig").enums;
pub const qprocess = @import("libqprocess.zig").qprocess;
pub const qprocess__unixprocessparameters = @import("libqprocess.zig").qprocess__unixprocessparameters;
pub const qprocess_enums = @import("libqprocess.zig").enums;
pub const qprocessenvironment = @import("libqprocess.zig").qprocessenvironment;
pub const qprogressbar = @import("libqprogressbar.zig").qprogressbar;
pub const qprogressbar_enums = @import("libqprogressbar.zig").enums;
pub const qprogressdialog = @import("libqprogressdialog.zig").qprogressdialog;
pub const qproperty_enums = @import("libqproperty.zig").enums;
pub const qpropertyanimation = @import("libqpropertyanimation.zig").qpropertyanimation;
pub const qpropertybindingerror = @import("libqproperty.zig").qpropertybindingerror;
pub const qpropertybindingsourcelocation = @import("libqproperty.zig").qpropertybindingsourcelocation;
pub const qpropertynotifier = @import("libqproperty.zig").qpropertynotifier;
pub const qpropertyobserver = @import("libqproperty.zig").qpropertyobserver;
pub const qpropertyobserverbase = @import("libqproperty.zig").qpropertyobserverbase;
pub const qpropertyproxybindingdata = @import("libqpropertyprivate.zig").qpropertyproxybindingdata;
pub const qproxystyle = @import("libqproxystyle.zig").qproxystyle;
pub const qpushbutton = @import("libqpushbutton.zig").qpushbutton;
pub const qquaternion = @import("libqquaternion.zig").qquaternion;
pub const qradialgradient = @import("libqbrush.zig").qradialgradient;
pub const qradiobutton = @import("libqradiobutton.zig").qradiobutton;
pub const qrandomgenerator = @import("libqrandom.zig").qrandomgenerator;
pub const qrandomgenerator64 = @import("libqrandom.zig").qrandomgenerator64;
pub const qrasterwindow = @import("libqrasterwindow.zig").qrasterwindow;
pub const qrawfont = @import("libqrawfont.zig").qrawfont;
pub const qrawfont_enums = @import("libqrawfont.zig").enums;
pub const qreadlocker = @import("libqreadwritelock.zig").qreadlocker;
pub const qreadwritelock = @import("libqreadwritelock.zig").qreadwritelock;
pub const qreadwritelock_enums = @import("libqreadwritelock.zig").enums;
pub const qrect = @import("libqrect.zig").qrect;
pub const qrectf = @import("libqrect.zig").qrectf;
pub const qrecursivemutex = @import("libqmutex.zig").qrecursivemutex;
pub const qregion = @import("libqregion.zig").qregion;
pub const qregion_enums = @import("libqregion.zig").enums;
pub const qregularexpression = @import("libqregularexpression.zig").qregularexpression;
pub const qregularexpression_enums = @import("libqregularexpression.zig").enums;
pub const qregularexpressionmatch = @import("libqregularexpression.zig").qregularexpressionmatch;
pub const qregularexpressionmatchiterator = @import("libqregularexpression.zig").qregularexpressionmatchiterator;
pub const qregularexpressionvalidator = @import("libqvalidator.zig").qregularexpressionvalidator;
pub const qresizeevent = @import("libqevent.zig").qresizeevent;
pub const qresource = @import("libqresource.zig").qresource;
pub const qresource_enums = @import("libqresource.zig").enums;
pub const qrestaccessmanager = @import("network/libqrestaccessmanager.zig").qrestaccessmanager;
pub const qrestreply = @import("network/libqrestreply.zig").qrestreply;
pub const qrgba64 = @import("libqrgba64.zig").qrgba64;
pub const qrubberband = @import("libqrubberband.zig").qrubberband;
pub const qrubberband_enums = @import("libqrubberband.zig").enums;
pub const qrunnable = @import("libqrunnable.zig").qrunnable;
pub const qsavefile = @import("libqsavefile.zig").qsavefile;
pub const qscatterseries = @import("restricted-extras-charts/libqscatterseries.zig").qscatterseries;
pub const qscatterseries_enums = @import("restricted-extras-charts/libqscatterseries.zig").enums;
pub const qsciabstractapis = @import("restricted-extras-qscintilla/libqsciabstractapis.zig").qsciabstractapis;
pub const qsciapis = @import("restricted-extras-qscintilla/libqsciapis.zig").qsciapis;
pub const qscicommand = @import("restricted-extras-qscintilla/libqscicommand.zig").qscicommand;
pub const qscicommand_enums = @import("restricted-extras-qscintilla/libqscicommand.zig").enums;
pub const qscicommandset = @import("restricted-extras-qscintilla/libqscicommandset.zig").qscicommandset;
pub const qscidocument = @import("restricted-extras-qscintilla/libqscidocument.zig").qscidocument;
pub const qscilexer = @import("restricted-extras-qscintilla/libqscilexer.zig").qscilexer;
pub const qscilexerasm = @import("restricted-extras-qscintilla/libqscilexerasm.zig").qscilexerasm;
pub const qscilexerasm_enums = @import("restricted-extras-qscintilla/libqscilexerasm.zig").enums;
pub const qscilexeravs = @import("restricted-extras-qscintilla/libqscilexeravs.zig").qscilexeravs;
pub const qscilexeravs_enums = @import("restricted-extras-qscintilla/libqscilexeravs.zig").enums;
pub const qscilexerbash = @import("restricted-extras-qscintilla/libqscilexerbash.zig").qscilexerbash;
pub const qscilexerbash_enums = @import("restricted-extras-qscintilla/libqscilexerbash.zig").enums;
pub const qscilexerbatch = @import("restricted-extras-qscintilla/libqscilexerbatch.zig").qscilexerbatch;
pub const qscilexerbatch_enums = @import("restricted-extras-qscintilla/libqscilexerbatch.zig").enums;
pub const qscilexercmake = @import("restricted-extras-qscintilla/libqscilexercmake.zig").qscilexercmake;
pub const qscilexercmake_enums = @import("restricted-extras-qscintilla/libqscilexercmake.zig").enums;
pub const qscilexercoffeescript = @import("restricted-extras-qscintilla/libqscilexercoffeescript.zig").qscilexercoffeescript;
pub const qscilexercoffeescript_enums = @import("restricted-extras-qscintilla/libqscilexercoffeescript.zig").enums;
pub const qscilexercpp = @import("restricted-extras-qscintilla/libqscilexercpp.zig").qscilexercpp;
pub const qscilexercpp_enums = @import("restricted-extras-qscintilla/libqscilexercpp.zig").enums;
pub const qscilexercsharp = @import("restricted-extras-qscintilla/libqscilexercsharp.zig").qscilexercsharp;
pub const qscilexercss = @import("restricted-extras-qscintilla/libqscilexercss.zig").qscilexercss;
pub const qscilexercss_enums = @import("restricted-extras-qscintilla/libqscilexercss.zig").enums;
pub const qscilexercustom = @import("restricted-extras-qscintilla/libqscilexercustom.zig").qscilexercustom;
pub const qscilexerd = @import("restricted-extras-qscintilla/libqscilexerd.zig").qscilexerd;
pub const qscilexerd_enums = @import("restricted-extras-qscintilla/libqscilexerd.zig").enums;
pub const qscilexerdiff = @import("restricted-extras-qscintilla/libqscilexerdiff.zig").qscilexerdiff;
pub const qscilexerdiff_enums = @import("restricted-extras-qscintilla/libqscilexerdiff.zig").enums;
pub const qscilexeredifact = @import("restricted-extras-qscintilla/libqscilexeredifact.zig").qscilexeredifact;
pub const qscilexeredifact_enums = @import("restricted-extras-qscintilla/libqscilexeredifact.zig").enums;
pub const qscilexerfortran = @import("restricted-extras-qscintilla/libqscilexerfortran.zig").qscilexerfortran;
pub const qscilexerfortran77 = @import("restricted-extras-qscintilla/libqscilexerfortran77.zig").qscilexerfortran77;
pub const qscilexerfortran77_enums = @import("restricted-extras-qscintilla/libqscilexerfortran77.zig").enums;
pub const qscilexerhex = @import("restricted-extras-qscintilla/libqscilexerhex.zig").qscilexerhex;
pub const qscilexerhex_enums = @import("restricted-extras-qscintilla/libqscilexerhex.zig").enums;
pub const qscilexerhtml = @import("restricted-extras-qscintilla/libqscilexerhtml.zig").qscilexerhtml;
pub const qscilexerhtml_enums = @import("restricted-extras-qscintilla/libqscilexerhtml.zig").enums;
pub const qscilexeridl = @import("restricted-extras-qscintilla/libqscilexeridl.zig").qscilexeridl;
pub const qscilexerintelhex = @import("restricted-extras-qscintilla/libqscilexerintelhex.zig").qscilexerintelhex;
pub const qscilexerjava = @import("restricted-extras-qscintilla/libqscilexerjava.zig").qscilexerjava;
pub const qscilexerjavascript = @import("restricted-extras-qscintilla/libqscilexerjavascript.zig").qscilexerjavascript;
pub const qscilexerjson = @import("restricted-extras-qscintilla/libqscilexerjson.zig").qscilexerjson;
pub const qscilexerjson_enums = @import("restricted-extras-qscintilla/libqscilexerjson.zig").enums;
pub const qscilexerlua = @import("restricted-extras-qscintilla/libqscilexerlua.zig").qscilexerlua;
pub const qscilexerlua_enums = @import("restricted-extras-qscintilla/libqscilexerlua.zig").enums;
pub const qscilexermakefile = @import("restricted-extras-qscintilla/libqscilexermakefile.zig").qscilexermakefile;
pub const qscilexermakefile_enums = @import("restricted-extras-qscintilla/libqscilexermakefile.zig").enums;
pub const qscilexermarkdown = @import("restricted-extras-qscintilla/libqscilexermarkdown.zig").qscilexermarkdown;
pub const qscilexermarkdown_enums = @import("restricted-extras-qscintilla/libqscilexermarkdown.zig").enums;
pub const qscilexermasm = @import("restricted-extras-qscintilla/libqscilexermasm.zig").qscilexermasm;
pub const qscilexermatlab = @import("restricted-extras-qscintilla/libqscilexermatlab.zig").qscilexermatlab;
pub const qscilexermatlab_enums = @import("restricted-extras-qscintilla/libqscilexermatlab.zig").enums;
pub const qscilexernasm = @import("restricted-extras-qscintilla/libqscilexernasm.zig").qscilexernasm;
pub const qscilexeroctave = @import("restricted-extras-qscintilla/libqscilexeroctave.zig").qscilexeroctave;
pub const qscilexerpascal = @import("restricted-extras-qscintilla/libqscilexerpascal.zig").qscilexerpascal;
pub const qscilexerpascal_enums = @import("restricted-extras-qscintilla/libqscilexerpascal.zig").enums;
pub const qscilexerperl = @import("restricted-extras-qscintilla/libqscilexerperl.zig").qscilexerperl;
pub const qscilexerperl_enums = @import("restricted-extras-qscintilla/libqscilexerperl.zig").enums;
pub const qscilexerpo = @import("restricted-extras-qscintilla/libqscilexerpo.zig").qscilexerpo;
pub const qscilexerpo_enums = @import("restricted-extras-qscintilla/libqscilexerpo.zig").enums;
pub const qscilexerpostscript = @import("restricted-extras-qscintilla/libqscilexerpostscript.zig").qscilexerpostscript;
pub const qscilexerpostscript_enums = @import("restricted-extras-qscintilla/libqscilexerpostscript.zig").enums;
pub const qscilexerpov = @import("restricted-extras-qscintilla/libqscilexerpov.zig").qscilexerpov;
pub const qscilexerpov_enums = @import("restricted-extras-qscintilla/libqscilexerpov.zig").enums;
pub const qscilexerproperties = @import("restricted-extras-qscintilla/libqscilexerproperties.zig").qscilexerproperties;
pub const qscilexerproperties_enums = @import("restricted-extras-qscintilla/libqscilexerproperties.zig").enums;
pub const qscilexerpython = @import("restricted-extras-qscintilla/libqscilexerpython.zig").qscilexerpython;
pub const qscilexerpython_enums = @import("restricted-extras-qscintilla/libqscilexerpython.zig").enums;
pub const qscilexerruby = @import("restricted-extras-qscintilla/libqscilexerruby.zig").qscilexerruby;
pub const qscilexerruby_enums = @import("restricted-extras-qscintilla/libqscilexerruby.zig").enums;
pub const qscilexerspice = @import("restricted-extras-qscintilla/libqscilexerspice.zig").qscilexerspice;
pub const qscilexerspice_enums = @import("restricted-extras-qscintilla/libqscilexerspice.zig").enums;
pub const qscilexersql = @import("restricted-extras-qscintilla/libqscilexersql.zig").qscilexersql;
pub const qscilexersql_enums = @import("restricted-extras-qscintilla/libqscilexersql.zig").enums;
pub const qscilexersrec = @import("restricted-extras-qscintilla/libqscilexersrec.zig").qscilexersrec;
pub const qscilexertcl = @import("restricted-extras-qscintilla/libqscilexertcl.zig").qscilexertcl;
pub const qscilexertcl_enums = @import("restricted-extras-qscintilla/libqscilexertcl.zig").enums;
pub const qscilexertekhex = @import("restricted-extras-qscintilla/libqscilexertekhex.zig").qscilexertekhex;
pub const qscilexertex = @import("restricted-extras-qscintilla/libqscilexertex.zig").qscilexertex;
pub const qscilexertex_enums = @import("restricted-extras-qscintilla/libqscilexertex.zig").enums;
pub const qscilexerverilog = @import("restricted-extras-qscintilla/libqscilexerverilog.zig").qscilexerverilog;
pub const qscilexerverilog_enums = @import("restricted-extras-qscintilla/libqscilexerverilog.zig").enums;
pub const qscilexervhdl = @import("restricted-extras-qscintilla/libqscilexervhdl.zig").qscilexervhdl;
pub const qscilexervhdl_enums = @import("restricted-extras-qscintilla/libqscilexervhdl.zig").enums;
pub const qscilexerxml = @import("restricted-extras-qscintilla/libqscilexerxml.zig").qscilexerxml;
pub const qscilexeryaml = @import("restricted-extras-qscintilla/libqscilexeryaml.zig").qscilexeryaml;
pub const qscilexeryaml_enums = @import("restricted-extras-qscintilla/libqscilexeryaml.zig").enums;
pub const qscimacro = @import("restricted-extras-qscintilla/libqscimacro.zig").qscimacro;
pub const qsciprinter = @import("restricted-extras-qscintilla/libqsciprinter.zig").qsciprinter;
pub const qsciscintilla = @import("restricted-extras-qscintilla/libqsciscintilla.zig").qsciscintilla;
pub const qsciscintilla_enums = @import("restricted-extras-qscintilla/libqsciscintilla.zig").enums;
pub const qsciscintillabase = @import("restricted-extras-qscintilla/libqsciscintillabase.zig").qsciscintillabase;
pub const qsciscintillabase_enums = @import("restricted-extras-qscintilla/libqsciscintillabase.zig").enums;
pub const qscistyle = @import("restricted-extras-qscintilla/libqscistyle.zig").qscistyle;
pub const qscistyle_enums = @import("restricted-extras-qscintilla/libqscistyle.zig").enums;
pub const qscistyledtext = @import("restricted-extras-qscintilla/libqscistyledtext.zig").qscistyledtext;
pub const qscopedpointerpoddeleter = @import("libqscopedpointer.zig").qscopedpointerpoddeleter;
pub const qscopedpropertyupdategroup = @import("libqproperty.zig").qscopedpropertyupdategroup;
pub const qscreen = @import("libqscreen.zig").qscreen;
pub const qscreencapture = @import("multimedia/libqscreencapture.zig").qscreencapture;
pub const qscreencapture_enums = @import("multimedia/libqscreencapture.zig").enums;
pub const qscreenorientationchangeevent = @import("libqevent.zig").qscreenorientationchangeevent;
pub const qscrollarea = @import("libqscrollarea.zig").qscrollarea;
pub const qscrollbar = @import("libqscrollbar.zig").qscrollbar;
pub const qscroller = @import("libqscroller.zig").qscroller;
pub const qscroller_enums = @import("libqscroller.zig").enums;
pub const qscrollerproperties = @import("libqscrollerproperties.zig").qscrollerproperties;
pub const qscrollerproperties_enums = @import("libqscrollerproperties.zig").enums;
pub const qscrollevent = @import("libqevent.zig").qscrollevent;
pub const qscrollprepareevent = @import("libqevent.zig").qscrollprepareevent;
pub const qsctpserver = @import("network/libqsctpserver.zig").qsctpserver;
pub const qsctpsocket = @import("network/libqsctpsocket.zig").qsctpsocket;
pub const qsemaphore = @import("libqsemaphore.zig").qsemaphore;
pub const qsemaphorereleaser = @import("libqsemaphore.zig").qsemaphorereleaser;
pub const qsequentialanimationgroup = @import("libqsequentialanimationgroup.zig").qsequentialanimationgroup;
pub const qsequentialiterable_enums = @import("libqsequentialiterable.zig").enums;
pub const qsessionmanager = @import("libqsessionmanager.zig").qsessionmanager;
pub const qsessionmanager_enums = @import("libqsessionmanager.zig").enums;
pub const qsettings = @import("libqsettings.zig").qsettings;
pub const qsettings_enums = @import("libqsettings.zig").enums;
pub const qshareddata = @import("libqshareddata.zig").qshareddata;
pub const qsharedmemory = @import("libqsharedmemory.zig").qsharedmemory;
pub const qsharedmemory_enums = @import("libqsharedmemory.zig").enums;
pub const qshortcut = @import("libqshortcut.zig").qshortcut;
pub const qshortcutevent = @import("libqevent.zig").qshortcutevent;
pub const qshowevent = @import("libqevent.zig").qshowevent;
pub const qsignalblocker = @import("libqobject.zig").qsignalblocker;
pub const qsignalmapper = @import("libqsignalmapper.zig").qsignalmapper;
pub const qsinglepointevent = @import("libqevent.zig").qsinglepointevent;
pub const qsize = @import("libqsize.zig").qsize;
pub const qsizef = @import("libqsize.zig").qsizef;
pub const qsizegrip = @import("libqsizegrip.zig").qsizegrip;
pub const qsizepolicy = @import("libqsizepolicy.zig").qsizepolicy;
pub const qsizepolicy_enums = @import("libqsizepolicy.zig").enums;
pub const qslider = @import("libqslider.zig").qslider;
pub const qslider_enums = @import("libqslider.zig").enums;
pub const qsocketdescriptor = @import("libqsocketnotifier.zig").qsocketdescriptor;
pub const qsocketnotifier = @import("libqsocketnotifier.zig").qsocketnotifier;
pub const qsocketnotifier_enums = @import("libqsocketnotifier.zig").enums;
pub const qsortfilterproxymodel = @import("libqsortfilterproxymodel.zig").qsortfilterproxymodel;
pub const qsoundeffect = @import("multimedia/libqsoundeffect.zig").qsoundeffect;
pub const qsoundeffect_enums = @import("multimedia/libqsoundeffect.zig").enums;
pub const qspaceritem = @import("libqlayoutitem.zig").qspaceritem;
pub const qspatialsound = @import("spatialaudio/libqspatialsound.zig").qspatialsound;
pub const qspatialsound_enums = @import("spatialaudio/libqspatialsound.zig").enums;
pub const qspinbox = @import("libqspinbox.zig").qspinbox;
pub const qsplashscreen = @import("libqsplashscreen.zig").qsplashscreen;
pub const qsplineseries = @import("restricted-extras-charts/libqsplineseries.zig").qsplineseries;
pub const qsplitter = @import("libqsplitter.zig").qsplitter;
pub const qsplitterhandle = @import("libqsplitter.zig").qsplitterhandle;
pub const qsqldatabase = @import("sql/libqsqldatabase.zig").qsqldatabase;
pub const qsqldriver = @import("sql/libqsqldriver.zig").qsqldriver;
pub const qsqldriver_enums = @import("sql/libqsqldriver.zig").enums;
pub const qsqldrivercreatorbase = @import("sql/libqsqldatabase.zig").qsqldrivercreatorbase;
pub const qsqldriverplugin = @import("sql/libqsqldriverplugin.zig").qsqldriverplugin;
pub const qsqlerror = @import("sql/libqsqlerror.zig").qsqlerror;
pub const qsqlerror_enums = @import("sql/libqsqlerror.zig").enums;
pub const qsqlfield = @import("sql/libqsqlfield.zig").qsqlfield;
pub const qsqlfield_enums = @import("sql/libqsqlfield.zig").enums;
pub const qsqlindex = @import("sql/libqsqlindex.zig").qsqlindex;
pub const qsqlquery = @import("sql/libqsqlquery.zig").qsqlquery;
pub const qsqlquery_enums = @import("sql/libqsqlquery.zig").enums;
pub const qsqlquerymodel = @import("sql/libqsqlquerymodel.zig").qsqlquerymodel;
pub const qsqlrecord = @import("sql/libqsqlrecord.zig").qsqlrecord;
pub const qsqlrelation = @import("sql/libqsqlrelationaltablemodel.zig").qsqlrelation;
pub const qsqlrelationaltablemodel = @import("sql/libqsqlrelationaltablemodel.zig").qsqlrelationaltablemodel;
pub const qsqlrelationaltablemodel_enums = @import("sql/libqsqlrelationaltablemodel.zig").enums;
pub const qsqlresult = @import("sql/libqsqlresult.zig").qsqlresult;
pub const qsqlresult_enums = @import("sql/libqsqlresult.zig").enums;
pub const qsqltablemodel = @import("sql/libqsqltablemodel.zig").qsqltablemodel;
pub const qsqltablemodel_enums = @import("sql/libqsqltablemodel.zig").enums;
pub const qssl = @import("network/libqssl.zig").qssl;
pub const qssl_enums = @import("network/libqssl.zig").enums;
pub const qsslcertificate = @import("network/libqsslcertificate.zig").qsslcertificate;
pub const qsslcertificate_enums = @import("network/libqsslcertificate.zig").enums;
pub const qsslcertificateextension = @import("network/libqsslcertificateextension.zig").qsslcertificateextension;
pub const qsslcipher = @import("network/libqsslcipher.zig").qsslcipher;
pub const qsslconfiguration = @import("network/libqsslconfiguration.zig").qsslconfiguration;
pub const qsslconfiguration_enums = @import("network/libqsslconfiguration.zig").enums;
pub const qssldiffiehellmanparameters = @import("network/libqssldiffiehellmanparameters.zig").qssldiffiehellmanparameters;
pub const qssldiffiehellmanparameters_enums = @import("network/libqssldiffiehellmanparameters.zig").enums;
pub const qsslellipticcurve = @import("network/libqsslellipticcurve.zig").qsslellipticcurve;
pub const qsslerror = @import("network/libqsslerror.zig").qsslerror;
pub const qsslerror_enums = @import("network/libqsslerror.zig").enums;
pub const qsslkey = @import("network/libqsslkey.zig").qsslkey;
pub const qsslpresharedkeyauthenticator = @import("network/libqsslpresharedkeyauthenticator.zig").qsslpresharedkeyauthenticator;
pub const qsslserver = @import("network/libqsslserver.zig").qsslserver;
pub const qsslsocket = @import("network/libqsslsocket.zig").qsslsocket;
pub const qsslsocket_enums = @import("network/libqsslsocket.zig").enums;
pub const qstackedbarseries = @import("restricted-extras-charts/libqstackedbarseries.zig").qstackedbarseries;
pub const qstackedlayout = @import("libqstackedlayout.zig").qstackedlayout;
pub const qstackedlayout_enums = @import("libqstackedlayout.zig").enums;
pub const qstackedwidget = @import("libqstackedwidget.zig").qstackedwidget;
pub const qstandarditem = @import("libqstandarditemmodel.zig").qstandarditem;
pub const qstandarditemmodel = @import("libqstandarditemmodel.zig").qstandarditemmodel;
pub const qstandarditemmodel_enums = @import("libqstandarditemmodel.zig").enums;
pub const qstandardpaths = @import("libqstandardpaths.zig").qstandardpaths;
pub const qstandardpaths_enums = @import("libqstandardpaths.zig").enums;
pub const qstaticbytearraymatcherbase = @import("libqbytearraymatcher.zig").qstaticbytearraymatcherbase;
pub const qstaticplugin = @import("libqplugin.zig").qstaticplugin;
pub const qstatictext = @import("libqstatictext.zig").qstatictext;
pub const qstatictext_enums = @import("libqstatictext.zig").enums;
pub const qstatusbar = @import("libqstatusbar.zig").qstatusbar;
pub const qstatustipevent = @import("libqevent.zig").qstatustipevent;
pub const qstorageinfo = @import("libqstorageinfo.zig").qstorageinfo;
pub const qstringconverter = @import("libqstringconverter_base.zig").qstringconverter;
pub const qstringconverter_base_enums = @import("libqstringconverter_base.zig").enums;
pub const qstringconverterbase__state = @import("libqstringconverter_base.zig").qstringconverterbase__state;
pub const qstringdecoder = @import("libqstringconverter.zig").qstringdecoder;
pub const qstringencoder = @import("libqstringconverter.zig").qstringencoder;
pub const qstringlistmodel = @import("libqstringlistmodel.zig").qstringlistmodel;
pub const qstringmatcher = @import("libqstringmatcher.zig").qstringmatcher;
pub const qstringtokenizerbasebase = @import("libqstringtokenizer.zig").qstringtokenizerbasebase;
pub const qstringview = @import("libqstringview.zig").qstringview;
pub const qstyle = @import("libqstyle.zig").qstyle;
pub const qstyle_enums = @import("libqstyle.zig").enums;
pub const qstyleditemdelegate = @import("libqstyleditemdelegate.zig").qstyleditemdelegate;
pub const qstylefactory = @import("libqstylefactory.zig").qstylefactory;
pub const qstylehintreturn = @import("libqstyleoption.zig").qstylehintreturn;
pub const qstylehintreturnmask = @import("libqstyleoption.zig").qstylehintreturnmask;
pub const qstylehintreturnvariant = @import("libqstyleoption.zig").qstylehintreturnvariant;
pub const qstylehints = @import("libqstylehints.zig").qstylehints;
pub const qstyleoption = @import("libqstyleoption.zig").qstyleoption;
pub const qstyleoption_enums = @import("libqstyleoption.zig").enums;
pub const qstyleoptionbutton = @import("libqstyleoption.zig").qstyleoptionbutton;
pub const qstyleoptioncombobox = @import("libqstyleoption.zig").qstyleoptioncombobox;
pub const qstyleoptioncomplex = @import("libqstyleoption.zig").qstyleoptioncomplex;
pub const qstyleoptiondockwidget = @import("libqstyleoption.zig").qstyleoptiondockwidget;
pub const qstyleoptionfocusrect = @import("libqstyleoption.zig").qstyleoptionfocusrect;
pub const qstyleoptionframe = @import("libqstyleoption.zig").qstyleoptionframe;
pub const qstyleoptiongraphicsitem = @import("libqstyleoption.zig").qstyleoptiongraphicsitem;
pub const qstyleoptiongroupbox = @import("libqstyleoption.zig").qstyleoptiongroupbox;
pub const qstyleoptionheader = @import("libqstyleoption.zig").qstyleoptionheader;
pub const qstyleoptionheaderv2 = @import("libqstyleoption.zig").qstyleoptionheaderv2;
pub const qstyleoptionmenuitem = @import("libqstyleoption.zig").qstyleoptionmenuitem;
pub const qstyleoptionprogressbar = @import("libqstyleoption.zig").qstyleoptionprogressbar;
pub const qstyleoptionrubberband = @import("libqstyleoption.zig").qstyleoptionrubberband;
pub const qstyleoptionsizegrip = @import("libqstyleoption.zig").qstyleoptionsizegrip;
pub const qstyleoptionslider = @import("libqstyleoption.zig").qstyleoptionslider;
pub const qstyleoptionspinbox = @import("libqstyleoption.zig").qstyleoptionspinbox;
pub const qstyleoptiontab = @import("libqstyleoption.zig").qstyleoptiontab;
pub const qstyleoptiontabbarbase = @import("libqstyleoption.zig").qstyleoptiontabbarbase;
pub const qstyleoptiontabwidgetframe = @import("libqstyleoption.zig").qstyleoptiontabwidgetframe;
pub const qstyleoptiontitlebar = @import("libqstyleoption.zig").qstyleoptiontitlebar;
pub const qstyleoptiontoolbar = @import("libqstyleoption.zig").qstyleoptiontoolbar;
pub const qstyleoptiontoolbox = @import("libqstyleoption.zig").qstyleoptiontoolbox;
pub const qstyleoptiontoolbutton = @import("libqstyleoption.zig").qstyleoptiontoolbutton;
pub const qstyleoptionviewitem = @import("libqstyleoption.zig").qstyleoptionviewitem;
pub const qstylepainter = @import("libqstylepainter.zig").qstylepainter;
pub const qstyleplugin = @import("libqstyleplugin.zig").qstyleplugin;
pub const qsurface = @import("libqsurface.zig").qsurface;
pub const qsurface_enums = @import("libqsurface.zig").enums;
pub const qsurfaceformat = @import("libqsurfaceformat.zig").qsurfaceformat;
pub const qsurfaceformat_enums = @import("libqsurfaceformat.zig").enums;
pub const qsvggenerator = @import("svg/libqsvggenerator.zig").qsvggenerator;
pub const qsvggenerator_enums = @import("svg/libqsvggenerator.zig").enums;
pub const qsvgrenderer = @import("svg/libqsvgrenderer.zig").qsvgrenderer;
pub const qsvgwidget = @import("svg/libqsvgwidget.zig").qsvgwidget;
pub const qswipegesture = @import("libqgesture.zig").qswipegesture;
pub const qsyntaxhighlighter = @import("libqsyntaxhighlighter.zig").qsyntaxhighlighter;
pub const qsysinfo = @import("libqsysinfo.zig").qsysinfo;
pub const qsysinfo_enums = @import("libqsysinfo.zig").enums;
pub const qsystemsemaphore = @import("libqsystemsemaphore.zig").qsystemsemaphore;
pub const qsystemsemaphore_enums = @import("libqsystemsemaphore.zig").enums;
pub const qsystemtrayicon = @import("libqsystemtrayicon.zig").qsystemtrayicon;
pub const qsystemtrayicon_enums = @import("libqsystemtrayicon.zig").enums;
pub const qtabbar = @import("libqtabbar.zig").qtabbar;
pub const qtabbar_enums = @import("libqtabbar.zig").enums;
pub const qtabletevent = @import("libqevent.zig").qtabletevent;
pub const qtableview = @import("libqtableview.zig").qtableview;
pub const qtablewidget = @import("libqtablewidget.zig").qtablewidget;
pub const qtablewidget_enums = @import("libqtablewidget.zig").enums;
pub const qtablewidgetitem = @import("libqtablewidget.zig").qtablewidgetitem;
pub const qtablewidgetselectionrange = @import("libqtablewidget.zig").qtablewidgetselectionrange;
pub const qtabwidget = @import("libqtabwidget.zig").qtabwidget;
pub const qtabwidget_enums = @import("libqtabwidget.zig").enums;
pub const qtapandholdgesture = @import("libqgesture.zig").qtapandholdgesture;
pub const qtapgesture = @import("libqgesture.zig").qtapgesture;
pub const qtcpserver = @import("network/libqtcpserver.zig").qtcpserver;
pub const qtcpsocket = @import("network/libqtcpsocket.zig").qtcpsocket;
pub const qtemporarydir = @import("libqtemporarydir.zig").qtemporarydir;
pub const qtemporaryfile = @import("libqtemporaryfile.zig").qtemporaryfile;
pub const qtermwidget = @import("posix-restricted-qtermwidget/libqtermwidget.zig").qtermwidget;
pub const qtermwidget_interface_enums = @import("posix-restricted-qtermwidget/libqtermwidget_interface.zig").enums;
pub const qtermwidgetinterface = @import("posix-restricted-qtermwidget/libqtermwidget_interface.zig").qtermwidgetinterface;
pub const qtest__qtoucheventsequence = @import("libqtestsupport_gui.zig").qtest__qtoucheventsequence;
pub const qtest__qtoucheventwidgetsequence = @import("libqtestsupport_widgets.zig").qtest__qtoucheventwidgetsequence;
pub const qtextblock = @import("libqtextobject.zig").qtextblock;
pub const qtextblock__iterator = @import("libqtextobject.zig").qtextblock__iterator;
pub const qtextblockformat = @import("libqtextformat.zig").qtextblockformat;
pub const qtextblockgroup = @import("libqtextobject.zig").qtextblockgroup;
pub const qtextblockuserdata = @import("libqtextobject.zig").qtextblockuserdata;
pub const qtextboundaryfinder = @import("libqtextboundaryfinder.zig").qtextboundaryfinder;
pub const qtextboundaryfinder_enums = @import("libqtextboundaryfinder.zig").enums;
pub const qtextbrowser = @import("libqtextbrowser.zig").qtextbrowser;
pub const qtextcharformat = @import("libqtextformat.zig").qtextcharformat;
pub const qtextcursor = @import("libqtextcursor.zig").qtextcursor;
pub const qtextcursor_enums = @import("libqtextcursor.zig").enums;
pub const qtextdocument = @import("libqtextdocument.zig").qtextdocument;
pub const qtextdocument_enums = @import("libqtextdocument.zig").enums;
pub const qtextdocumentfragment = @import("libqtextdocumentfragment.zig").qtextdocumentfragment;
pub const qtextdocumentwriter = @import("libqtextdocumentwriter.zig").qtextdocumentwriter;
pub const qtextedit = @import("libqtextedit.zig").qtextedit;
pub const qtextedit__extraselection = @import("libqtextedit.zig").qtextedit__extraselection;
pub const qtextedit_enums = @import("libqtextedit.zig").enums;
pub const qtextformat = @import("libqtextformat.zig").qtextformat;
pub const qtextformat_enums = @import("libqtextformat.zig").enums;
pub const qtextfragment = @import("libqtextobject.zig").qtextfragment;
pub const qtextframe = @import("libqtextobject.zig").qtextframe;
pub const qtextframe__iterator = @import("libqtextobject.zig").qtextframe__iterator;
pub const qtextframeformat = @import("libqtextformat.zig").qtextframeformat;
pub const qtextframelayoutdata = @import("libqtextobject.zig").qtextframelayoutdata;
pub const qtextimageformat = @import("libqtextformat.zig").qtextimageformat;
pub const qtextinlineobject = @import("libqtextlayout.zig").qtextinlineobject;
pub const qtextitem = @import("libqpaintengine.zig").qtextitem;
pub const qtextlayout = @import("libqtextlayout.zig").qtextlayout;
pub const qtextlayout__formatrange = @import("libqtextlayout.zig").qtextlayout__formatrange;
pub const qtextlayout_enums = @import("libqtextlayout.zig").enums;
pub const qtextlength = @import("libqtextformat.zig").qtextlength;
pub const qtextline = @import("libqtextlayout.zig").qtextline;
pub const qtextlist = @import("libqtextlist.zig").qtextlist;
pub const qtextlistformat = @import("libqtextformat.zig").qtextlistformat;
pub const qtextobject = @import("libqtextobject.zig").qtextobject;
pub const qtextobjectinterface = @import("libqabstracttextdocumentlayout.zig").qtextobjectinterface;
pub const qtextoption = @import("libqtextoption.zig").qtextoption;
pub const qtextoption__tab = @import("libqtextoption.zig").qtextoption__tab;
pub const qtextoption_enums = @import("libqtextoption.zig").enums;
pub const qtextstream = @import("libqtextstream.zig").qtextstream;
pub const qtextstream_enums = @import("libqtextstream.zig").enums;
pub const qtexttable = @import("libqtexttable.zig").qtexttable;
pub const qtexttablecell = @import("libqtexttable.zig").qtexttablecell;
pub const qtexttablecellformat = @import("libqtextformat.zig").qtexttablecellformat;
pub const qtexttableformat = @import("libqtextformat.zig").qtexttableformat;
pub const qthread = @import("libqthread.zig").qthread;
pub const qthread_enums = @import("libqthread.zig").enums;
pub const qthreadpool = @import("libqthreadpool.zig").qthreadpool;
pub const qthreadstoragedata = @import("libqthreadstorage.zig").qthreadstoragedata;
pub const qtilerules = @import("libqdrawutil.zig").qtilerules;
pub const qtime = @import("libqdatetime.zig").qtime;
pub const qtimeedit = @import("libqdatetimeedit.zig").qtimeedit;
pub const qtimeline = @import("libqtimeline.zig").qtimeline;
pub const qtimeline_enums = @import("libqtimeline.zig").enums;
pub const qtimer = @import("libqtimer.zig").qtimer;
pub const qtimerevent = @import("libqcoreevent.zig").qtimerevent;
pub const qtimezone = @import("libqtimezone.zig").qtimezone;
pub const qtimezone__offsetdata = @import("libqtimezone.zig").qtimezone__offsetdata;
pub const qtimezone_enums = @import("libqtimezone.zig").enums;
pub const qtipccommon_enums = @import("libqtipccommon.zig").enums;
pub const qtoolbar = @import("libqtoolbar.zig").qtoolbar;
pub const qtoolbarchangeevent = @import("libqevent.zig").qtoolbarchangeevent;
pub const qtoolbox = @import("libqtoolbox.zig").qtoolbox;
pub const qtoolbutton = @import("libqtoolbutton.zig").qtoolbutton;
pub const qtoolbutton_enums = @import("libqtoolbutton.zig").enums;
pub const qtooltip = @import("libqtooltip.zig").qtooltip;
pub const qtouchevent = @import("libqevent.zig").qtouchevent;
pub const qtransform = @import("libqtransform.zig").qtransform;
pub const qtransform_enums = @import("libqtransform.zig").enums;
pub const qtranslator = @import("libqtranslator.zig").qtranslator;
pub const qtransposeproxymodel = @import("libqtransposeproxymodel.zig").qtransposeproxymodel;
pub const qtreeview = @import("libqtreeview.zig").qtreeview;
pub const qtreewidget = @import("libqtreewidget.zig").qtreewidget;
pub const qtreewidget_enums = @import("libqtreewidget.zig").enums;
pub const qtreewidgetitem = @import("libqtreewidget.zig").qtreewidgetitem;
pub const qtreewidgetitemiterator = @import("libqtreewidgetitemiterator.zig").qtreewidgetitemiterator;
pub const qtreewidgetitemiterator_enums = @import("libqtreewidgetitemiterator.zig").enums;
pub const qtsqlglobal_enums = @import("sql/libqtsqlglobal.zig").enums;
pub const qtsvgglobal_enums = @import("svg/libqtsvgglobal.zig").enums;
pub const qtvideo = @import("multimedia/libqtvideo.zig").qtvideo;
pub const qtvideo_enums = @import("multimedia/libqtvideo.zig").enums;
pub const qtypeinfo_enums = @import("libqtypeinfo.zig").enums;
pub const qtyperevision = @import("libqtyperevision.zig").qtyperevision;
pub const qudpsocket = @import("network/libqudpsocket.zig").qudpsocket;
pub const question_enums = @import("extras-knewstuff/libquestion.zig").enums;
pub const qundocommand = @import("libqundostack.zig").qundocommand;
pub const qundogroup = @import("libqundogroup.zig").qundogroup;
pub const qundostack = @import("libqundostack.zig").qundostack;
pub const qundoview = @import("libqundoview.zig").qundoview;
pub const quntypedbindable = @import("libqproperty.zig").quntypedbindable;
pub const quntypedpropertybinding = @import("libqproperty.zig").quntypedpropertybinding;
pub const quntypedpropertydata = @import("libqpropertyprivate.zig").quntypedpropertydata;
pub const qurl = @import("libqurl.zig").qurl;
pub const qurl_enums = @import("libqurl.zig").enums;
pub const qurlquery = @import("libqurlquery.zig").qurlquery;
pub const quuid = @import("libquuid.zig").quuid;
pub const quuid__id128bytes = @import("libquuid.zig").quuid__id128bytes;
pub const quuid_enums = @import("libquuid.zig").enums;
pub const qvalidator = @import("libqvalidator.zig").qvalidator;
pub const qvalidator_enums = @import("libqvalidator.zig").enums;
pub const qvalueaxis = @import("restricted-extras-charts/libqvalueaxis.zig").qvalueaxis;
pub const qvalueaxis_enums = @import("restricted-extras-charts/libqvalueaxis.zig").enums;
pub const qvariant = @import("libqvariant.zig").qvariant;
pub const qvariant_enums = @import("libqvariant.zig").enums;
pub const qvariantanimation = @import("libqvariantanimation.zig").qvariantanimation;
pub const qvbarmodelmapper = @import("restricted-extras-charts/libqvbarmodelmapper.zig").qvbarmodelmapper;
pub const qvboxlayout = @import("libqboxlayout.zig").qvboxlayout;
pub const qvboxplotmodelmapper = @import("restricted-extras-charts/libqvboxplotmodelmapper.zig").qvboxplotmodelmapper;
pub const qvcandlestickmodelmapper = @import("restricted-extras-charts/libqvcandlestickmodelmapper.zig").qvcandlestickmodelmapper;
pub const qvector2d = @import("libqvectornd.zig").qvector2d;
pub const qvector3d = @import("libqvectornd.zig").qvector3d;
pub const qvector4d = @import("libqvectornd.zig").qvector4d;
pub const qversionnumber = @import("libqversionnumber.zig").qversionnumber;
pub const qvideoframe = @import("multimedia/libqvideoframe.zig").qvideoframe;
pub const qvideoframe__paintoptions = @import("multimedia/libqvideoframe.zig").qvideoframe__paintoptions;
pub const qvideoframe_enums = @import("multimedia/libqvideoframe.zig").enums;
pub const qvideoframeformat = @import("multimedia/libqvideoframeformat.zig").qvideoframeformat;
pub const qvideoframeformat_enums = @import("multimedia/libqvideoframeformat.zig").enums;
pub const qvideoframeinput = @import("multimedia/libqvideoframeinput.zig").qvideoframeinput;
pub const qvideosink = @import("multimedia/libqvideosink.zig").qvideosink;
pub const qvideowidget = @import("multimedia/libqvideowidget.zig").qvideowidget;
pub const qvlabasebase = @import("libqvarlengtharray.zig").qvlabasebase;
pub const qvpiemodelmapper = @import("restricted-extras-charts/libqvpiemodelmapper.zig").qvpiemodelmapper;
pub const qvxymodelmapper = @import("restricted-extras-charts/libqvxymodelmapper.zig").qvxymodelmapper;
pub const qwaitcondition = @import("libqwaitcondition.zig").qwaitcondition;
pub const qwavedecoder = @import("multimedia/libqwavedecoder.zig").qwavedecoder;
pub const qwebchannel = @import("webchannel/libqwebchannel.zig").qwebchannel;
pub const qwebchannelabstracttransport = @import("webchannel/libqwebchannelabstracttransport.zig").qwebchannelabstracttransport;
pub const qwebenginecertificateerror = @import("webengine/libqwebenginecertificateerror.zig").qwebenginecertificateerror;
pub const qwebenginecertificateerror_enums = @import("webengine/libqwebenginecertificateerror.zig").enums;
pub const qwebengineclientcertificateselection = @import("webengine/libqwebengineclientcertificateselection.zig").qwebengineclientcertificateselection;
pub const qwebengineclientcertificatestore = @import("webengine/libqwebengineclientcertificatestore.zig").qwebengineclientcertificatestore;
pub const qwebengineclienthints = @import("webengine/libqwebengineclienthints.zig").qwebengineclienthints;
pub const qwebengineclienthints_enums = @import("webengine/libqwebengineclienthints.zig").enums;
pub const qwebenginecontextmenurequest = @import("webengine/libqwebenginecontextmenurequest.zig").qwebenginecontextmenurequest;
pub const qwebenginecontextmenurequest_enums = @import("webengine/libqwebenginecontextmenurequest.zig").enums;
pub const qwebenginecookiestore = @import("webengine/libqwebenginecookiestore.zig").qwebenginecookiestore;
pub const qwebenginecookiestore__filterrequest = @import("webengine/libqwebenginecookiestore.zig").qwebenginecookiestore__filterrequest;
pub const qwebenginedesktopmediarequest = @import("webengine/libqwebenginedesktopmediarequest.zig").qwebenginedesktopmediarequest;
pub const qwebenginedownloadrequest = @import("webengine/libqwebenginedownloadrequest.zig").qwebenginedownloadrequest;
pub const qwebenginedownloadrequest_enums = @import("webengine/libqwebenginedownloadrequest.zig").enums;
pub const qwebenginefilesystemaccessrequest = @import("webengine/libqwebenginefilesystemaccessrequest.zig").qwebenginefilesystemaccessrequest;
pub const qwebenginefilesystemaccessrequest_enums = @import("webengine/libqwebenginefilesystemaccessrequest.zig").enums;
pub const qwebenginefindtextresult = @import("webengine/libqwebenginefindtextresult.zig").qwebenginefindtextresult;
pub const qwebengineframe = @import("webengine/libqwebengineframe.zig").qwebengineframe;
pub const qwebenginefullscreenrequest = @import("webengine/libqwebenginefullscreenrequest.zig").qwebenginefullscreenrequest;
pub const qwebengineglobalsettings = @import("webengine/libqwebengineglobalsettings.zig").qwebengineglobalsettings;
pub const qwebengineglobalsettings__dnsmode = @import("webengine/libqwebengineglobalsettings.zig").qwebengineglobalsettings__dnsmode;
pub const qwebengineglobalsettings_enums = @import("webengine/libqwebengineglobalsettings.zig").enums;
pub const qwebenginehistory = @import("webengine/libqwebenginehistory.zig").qwebenginehistory;
pub const qwebenginehistory_enums = @import("webengine/libqwebenginehistory.zig").enums;
pub const qwebenginehistoryitem = @import("webengine/libqwebenginehistory.zig").qwebenginehistoryitem;
pub const qwebenginehistorymodel = @import("webengine/libqwebenginehistory.zig").qwebenginehistorymodel;
pub const qwebenginehttprequest = @import("webengine/libqwebenginehttprequest.zig").qwebenginehttprequest;
pub const qwebenginehttprequest_enums = @import("webengine/libqwebenginehttprequest.zig").enums;
pub const qwebengineloadinginfo = @import("webengine/libqwebengineloadinginfo.zig").qwebengineloadinginfo;
pub const qwebengineloadinginfo_enums = @import("webengine/libqwebengineloadinginfo.zig").enums;
pub const qwebenginenavigationrequest = @import("webengine/libqwebenginenavigationrequest.zig").qwebenginenavigationrequest;
pub const qwebenginenavigationrequest_enums = @import("webengine/libqwebenginenavigationrequest.zig").enums;
pub const qwebenginenewwindowrequest = @import("webengine/libqwebenginenewwindowrequest.zig").qwebenginenewwindowrequest;
pub const qwebenginenewwindowrequest_enums = @import("webengine/libqwebenginenewwindowrequest.zig").enums;
pub const qwebenginenotification = @import("webengine/libqwebenginenotification.zig").qwebenginenotification;
pub const qwebenginepage = @import("webengine/libqwebenginepage.zig").qwebenginepage;
pub const qwebenginepage_enums = @import("webengine/libqwebenginepage.zig").enums;
pub const qwebenginepermission = @import("webengine/libqwebenginepermission.zig").qwebenginepermission;
pub const qwebenginepermission_enums = @import("webengine/libqwebenginepermission.zig").enums;
pub const qwebengineprofile = @import("webengine/libqwebengineprofile.zig").qwebengineprofile;
pub const qwebengineprofile_enums = @import("webengine/libqwebengineprofile.zig").enums;
pub const qwebenginequotarequest = @import("webengine/libqwebenginequotarequest.zig").qwebenginequotarequest;
pub const qwebengineregisterprotocolhandlerrequest = @import("webengine/libqwebengineregisterprotocolhandlerrequest.zig").qwebengineregisterprotocolhandlerrequest;
pub const qwebenginescript = @import("webengine/libqwebenginescript.zig").qwebenginescript;
pub const qwebenginescript_enums = @import("webengine/libqwebenginescript.zig").enums;
pub const qwebenginescriptcollection = @import("webengine/libqwebenginescriptcollection.zig").qwebenginescriptcollection;
pub const qwebenginesettings = @import("webengine/libqwebenginesettings.zig").qwebenginesettings;
pub const qwebenginesettings_enums = @import("webengine/libqwebenginesettings.zig").enums;
pub const qwebengineurlrequestinfo = @import("webengine/libqwebengineurlrequestinfo.zig").qwebengineurlrequestinfo;
pub const qwebengineurlrequestinfo_enums = @import("webengine/libqwebengineurlrequestinfo.zig").enums;
pub const qwebengineurlrequestinterceptor = @import("webengine/libqwebengineurlrequestinterceptor.zig").qwebengineurlrequestinterceptor;
pub const qwebengineurlrequestjob = @import("webengine/libqwebengineurlrequestjob.zig").qwebengineurlrequestjob;
pub const qwebengineurlrequestjob_enums = @import("webengine/libqwebengineurlrequestjob.zig").enums;
pub const qwebengineurlscheme = @import("webengine/libqwebengineurlscheme.zig").qwebengineurlscheme;
pub const qwebengineurlscheme_enums = @import("webengine/libqwebengineurlscheme.zig").enums;
pub const qwebengineurlschemehandler = @import("webengine/libqwebengineurlschemehandler.zig").qwebengineurlschemehandler;
pub const qwebengineview = @import("webengine/libqwebengineview.zig").qwebengineview;
pub const qwebenginewebauthpinrequest = @import("webengine/libqwebenginewebauthuxrequest.zig").qwebenginewebauthpinrequest;
pub const qwebenginewebauthuxrequest = @import("webengine/libqwebenginewebauthuxrequest.zig").qwebenginewebauthuxrequest;
pub const qwebenginewebauthuxrequest_enums = @import("webengine/libqwebenginewebauthuxrequest.zig").enums;
pub const qwhatsthis = @import("libqwhatsthis.zig").qwhatsthis;
pub const qwhatsthisclickedevent = @import("libqevent.zig").qwhatsthisclickedevent;
pub const qwheelevent = @import("libqevent.zig").qwheelevent;
pub const qwidget = @import("libqwidget.zig").qwidget;
pub const qwidget_enums = @import("libqwidget.zig").enums;
pub const qwidgetaction = @import("libqwidgetaction.zig").qwidgetaction;
pub const qwidgetdata = @import("libqwidget.zig").qwidgetdata;
pub const qwidgetitem = @import("libqlayoutitem.zig").qwidgetitem;
pub const qwidgetitemv2 = @import("libqlayoutitem.zig").qwidgetitemv2;
pub const qwindow = @import("libqwindow.zig").qwindow;
pub const qwindow_enums = @import("libqwindow.zig").enums;
pub const qwindowcapture = @import("multimedia/libqwindowcapture.zig").qwindowcapture;
pub const qwindowcapture_enums = @import("multimedia/libqwindowcapture.zig").enums;
pub const qwindowstatechangeevent = @import("libqevent.zig").qwindowstatechangeevent;
pub const qwizard = @import("libqwizard.zig").qwizard;
pub const qwizard_enums = @import("libqwizard.zig").enums;
pub const qwizardpage = @import("libqwizard.zig").qwizardpage;
pub const qwritelocker = @import("libqreadwritelock.zig").qwritelocker;
pub const qxmlstream_enums = @import("libqxmlstream.zig").enums;
pub const qxmlstreamattribute = @import("libqxmlstream.zig").qxmlstreamattribute;
pub const qxmlstreamattributes = @import("libqxmlstream.zig").qxmlstreamattributes;
pub const qxmlstreamentitydeclaration = @import("libqxmlstream.zig").qxmlstreamentitydeclaration;
pub const qxmlstreamentityresolver = @import("libqxmlstream.zig").qxmlstreamentityresolver;
pub const qxmlstreamnamespacedeclaration = @import("libqxmlstream.zig").qxmlstreamnamespacedeclaration;
pub const qxmlstreamnotationdeclaration = @import("libqxmlstream.zig").qxmlstreamnotationdeclaration;
pub const qxmlstreamreader = @import("libqxmlstream.zig").qxmlstreamreader;
pub const qxmlstreamwriter = @import("libqxmlstream.zig").qxmlstreamwriter;
pub const qxylegendmarker = @import("restricted-extras-charts/libqxylegendmarker.zig").qxylegendmarker;
pub const qxymodelmapper = @import("restricted-extras-charts/libqxymodelmapper.zig").qxymodelmapper;
pub const qxyseries = @import("restricted-extras-charts/libqxyseries.zig").qxyseries;
pub const qxyseries_enums = @import("restricted-extras-charts/libqxyseries.zig").enums;
pub const repository_enums = @import("extras-ksyntaxhighlighting/librepository.zig").enums;
pub const searchpreset_enums = @import("extras-knewstuff/libsearchpreset.zig").enums;
pub const searchrequest_enums = @import("extras-knewstuff/libsearchrequest.zig").enums;
pub const settings_enums = @import("extras-sonnet/libsettings.zig").enums;
pub const solid__battery = @import("extras-solid/libbattery.zig").solid__battery;
pub const solid__block = @import("extras-solid/libblock.zig").solid__block;
pub const solid__camera = @import("extras-solid/libcamera.zig").solid__camera;
pub const solid__device = @import("extras-solid/libdevice.zig").solid__device;
pub const solid__deviceinterface = @import("extras-solid/libdeviceinterface.zig").solid__deviceinterface;
pub const solid__devicenotifier = @import("extras-solid/libdevicenotifier.zig").solid__devicenotifier;
pub const solid__genericinterface = @import("extras-solid/libgenericinterface.zig").solid__genericinterface;
pub const solid__networkshare = @import("extras-solid/libnetworkshare.zig").solid__networkshare;
pub const solid__opticaldisc = @import("extras-solid/libopticaldisc.zig").solid__opticaldisc;
pub const solid__opticaldrive = @import("extras-solid/libopticaldrive.zig").solid__opticaldrive;
pub const solid__portablemediaplayer = @import("extras-solid/libportablemediaplayer.zig").solid__portablemediaplayer;
pub const solid__predicate = @import("extras-solid/libpredicate.zig").solid__predicate;
pub const solid__processor = @import("extras-solid/libprocessor.zig").solid__processor;
pub const solid__storageaccess = @import("extras-solid/libstorageaccess.zig").solid__storageaccess;
pub const solid__storagedrive = @import("extras-solid/libstoragedrive.zig").solid__storagedrive;
pub const solid__storagevolume = @import("extras-solid/libstoragevolume.zig").solid__storagevolume;
pub const solidnamespace_enums = @import("extras-solid/libsolidnamespace.zig").enums;
pub const sonnet__backgroundchecker = @import("extras-sonnet/libbackgroundchecker.zig").sonnet__backgroundchecker;
pub const sonnet__configdialog = @import("extras-sonnet/libconfigdialog.zig").sonnet__configdialog;
pub const sonnet__configview = @import("extras-sonnet/libconfigview.zig").sonnet__configview;
pub const sonnet__configwidget = @import("extras-sonnet/libconfigwidget.zig").sonnet__configwidget;
pub const sonnet__dialog = @import("extras-sonnet/libdialog_1.zig").sonnet__dialog;
pub const sonnet__dictionarycombobox = @import("extras-sonnet/libdictionarycombobox.zig").sonnet__dictionarycombobox;
pub const sonnet__guesslanguage = @import("extras-sonnet/libguesslanguage.zig").sonnet__guesslanguage;
pub const sonnet__highlighter = @import("extras-sonnet/libhighlighter.zig").sonnet__highlighter;
pub const sonnet__settings = @import("extras-sonnet/libsettings.zig").sonnet__settings;
pub const sonnet__spellcheckdecorator = @import("extras-sonnet/libspellcheckdecorator.zig").sonnet__spellcheckdecorator;
pub const sonnet__speller = @import("extras-sonnet/libspeller.zig").sonnet__speller;
pub const speller_enums = @import("extras-sonnet/libspeller.zig").enums;
pub const sslui_enums = @import("extras-kio/libsslui.zig").enums;
pub const statjob_enums = @import("extras-kio/libstatjob.zig").enums;
pub const storagedrive_enums = @import("extras-solid/libstoragedrive.zig").enums;
pub const storagevolume_enums = @import("extras-solid/libstoragevolume.zig").enums;
pub const strong_ordering = @import("libqcompare.zig").strong_ordering;
pub const svg_enums = @import("extras-ksvg/libsvg.zig").enums;
pub const terminalinterface = @import("extras-kparts/libkde_terminal_interface.zig").terminalinterface;
pub const theme_enums = @import("extras-ksyntaxhighlighting/libtheme.zig").enums;
pub const threading = @import("threading/libqt6zigthreading.zig").Threading;
pub const udsentry_enums = @import("extras-kio/libudsentry.zig").enums;
pub const view_enums = @import("extras-ktexteditor/libview.zig").enums;
pub const weak_ordering = @import("libqcompare.zig").weak_ordering;
pub const window_enums = @import("foss-extras-layershellqt/libwindow.zig").enums;
pub const workerbase_enums = @import("extras-kio/libworkerbase.zig").enums;
