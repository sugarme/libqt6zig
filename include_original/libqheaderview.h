#pragma once
#ifndef SRCC_LIBQHEADERVIEW_H
#define SRCC_LIBQHEADERVIEW_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHeaderView QHeaderView;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionHeader QStyleOptionHeader;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QHeaderView* QHeaderView_new(int orientation);
QHeaderView* QHeaderView_new2(int orientation, QWidget* parent);
QMetaObject* QHeaderView_MetaObject(const QHeaderView* self);
void* QHeaderView_Metacast(QHeaderView* self, const char* param1);
int QHeaderView_Metacall(QHeaderView* self, int param1, int param2, void** param3);
libqt_string QHeaderView_Tr(const char* s);
void QHeaderView_SetModel(QHeaderView* self, QAbstractItemModel* model);
int QHeaderView_Orientation(const QHeaderView* self);
int QHeaderView_Offset(const QHeaderView* self);
int QHeaderView_Length(const QHeaderView* self);
QSize* QHeaderView_SizeHint(const QHeaderView* self);
void QHeaderView_SetVisible(QHeaderView* self, bool v);
int QHeaderView_SectionSizeHint(const QHeaderView* self, int logicalIndex);
int QHeaderView_VisualIndexAt(const QHeaderView* self, int position);
int QHeaderView_LogicalIndexAt(const QHeaderView* self, int position);
int QHeaderView_LogicalIndexAt2(const QHeaderView* self, int x, int y);
int QHeaderView_LogicalIndexAt3(const QHeaderView* self, const QPoint* pos);
int QHeaderView_SectionSize(const QHeaderView* self, int logicalIndex);
int QHeaderView_SectionPosition(const QHeaderView* self, int logicalIndex);
int QHeaderView_SectionViewportPosition(const QHeaderView* self, int logicalIndex);
void QHeaderView_MoveSection(QHeaderView* self, int from, int to);
void QHeaderView_SwapSections(QHeaderView* self, int first, int second);
void QHeaderView_ResizeSection(QHeaderView* self, int logicalIndex, int size);
void QHeaderView_ResizeSections(QHeaderView* self, int mode);
bool QHeaderView_IsSectionHidden(const QHeaderView* self, int logicalIndex);
void QHeaderView_SetSectionHidden(QHeaderView* self, int logicalIndex, bool hide);
int QHeaderView_HiddenSectionCount(const QHeaderView* self);
void QHeaderView_HideSection(QHeaderView* self, int logicalIndex);
void QHeaderView_ShowSection(QHeaderView* self, int logicalIndex);
int QHeaderView_Count(const QHeaderView* self);
int QHeaderView_VisualIndex(const QHeaderView* self, int logicalIndex);
int QHeaderView_LogicalIndex(const QHeaderView* self, int visualIndex);
void QHeaderView_SetSectionsMovable(QHeaderView* self, bool movable);
bool QHeaderView_SectionsMovable(const QHeaderView* self);
void QHeaderView_SetFirstSectionMovable(QHeaderView* self, bool movable);
bool QHeaderView_IsFirstSectionMovable(const QHeaderView* self);
void QHeaderView_SetSectionsClickable(QHeaderView* self, bool clickable);
bool QHeaderView_SectionsClickable(const QHeaderView* self);
void QHeaderView_SetHighlightSections(QHeaderView* self, bool highlight);
bool QHeaderView_HighlightSections(const QHeaderView* self);
int QHeaderView_SectionResizeMode(const QHeaderView* self, int logicalIndex);
void QHeaderView_SetSectionResizeMode(QHeaderView* self, int mode);
void QHeaderView_SetSectionResizeMode2(QHeaderView* self, int logicalIndex, int mode);
void QHeaderView_SetResizeContentsPrecision(QHeaderView* self, int precision);
int QHeaderView_ResizeContentsPrecision(const QHeaderView* self);
int QHeaderView_StretchSectionCount(const QHeaderView* self);
void QHeaderView_SetSortIndicatorShown(QHeaderView* self, bool show);
bool QHeaderView_IsSortIndicatorShown(const QHeaderView* self);
void QHeaderView_SetSortIndicator(QHeaderView* self, int logicalIndex, int order);
int QHeaderView_SortIndicatorSection(const QHeaderView* self);
int QHeaderView_SortIndicatorOrder(const QHeaderView* self);
void QHeaderView_SetSortIndicatorClearable(QHeaderView* self, bool clearable);
bool QHeaderView_IsSortIndicatorClearable(const QHeaderView* self);
bool QHeaderView_StretchLastSection(const QHeaderView* self);
void QHeaderView_SetStretchLastSection(QHeaderView* self, bool stretch);
bool QHeaderView_CascadingSectionResizes(const QHeaderView* self);
void QHeaderView_SetCascadingSectionResizes(QHeaderView* self, bool enable);
int QHeaderView_DefaultSectionSize(const QHeaderView* self);
void QHeaderView_SetDefaultSectionSize(QHeaderView* self, int size);
void QHeaderView_ResetDefaultSectionSize(QHeaderView* self);
int QHeaderView_MinimumSectionSize(const QHeaderView* self);
void QHeaderView_SetMinimumSectionSize(QHeaderView* self, int size);
int QHeaderView_MaximumSectionSize(const QHeaderView* self);
void QHeaderView_SetMaximumSectionSize(QHeaderView* self, int size);
int QHeaderView_DefaultAlignment(const QHeaderView* self);
void QHeaderView_SetDefaultAlignment(QHeaderView* self, int alignment);
void QHeaderView_DoItemsLayout(QHeaderView* self);
bool QHeaderView_SectionsMoved(const QHeaderView* self);
bool QHeaderView_SectionsHidden(const QHeaderView* self);
libqt_string QHeaderView_SaveState(const QHeaderView* self);
bool QHeaderView_RestoreState(QHeaderView* self, const libqt_string state);
void QHeaderView_Reset(QHeaderView* self);
void QHeaderView_SetOffset(QHeaderView* self, int offset);
void QHeaderView_SetOffsetToSectionPosition(QHeaderView* self, int visualIndex);
void QHeaderView_SetOffsetToLastSection(QHeaderView* self);
void QHeaderView_HeaderDataChanged(QHeaderView* self, int orientation, int logicalFirst, int logicalLast);
void QHeaderView_SectionMoved(QHeaderView* self, int logicalIndex, int oldVisualIndex, int newVisualIndex);
void QHeaderView_Connect_SectionMoved(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionResized(QHeaderView* self, int logicalIndex, int oldSize, int newSize);
void QHeaderView_Connect_SectionResized(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionPressed(QHeaderView* self, int logicalIndex);
void QHeaderView_Connect_SectionPressed(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionClicked(QHeaderView* self, int logicalIndex);
void QHeaderView_Connect_SectionClicked(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionEntered(QHeaderView* self, int logicalIndex);
void QHeaderView_Connect_SectionEntered(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionDoubleClicked(QHeaderView* self, int logicalIndex);
void QHeaderView_Connect_SectionDoubleClicked(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionCountChanged(QHeaderView* self, int oldCount, int newCount);
void QHeaderView_Connect_SectionCountChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_SectionHandleDoubleClicked(QHeaderView* self, int logicalIndex);
void QHeaderView_Connect_SectionHandleDoubleClicked(QHeaderView* self, intptr_t slot);
void QHeaderView_GeometriesChanged(QHeaderView* self);
void QHeaderView_Connect_GeometriesChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_SortIndicatorChanged(QHeaderView* self, int logicalIndex, int order);
void QHeaderView_Connect_SortIndicatorChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_SortIndicatorClearableChanged(QHeaderView* self, bool clearable);
void QHeaderView_Connect_SortIndicatorClearableChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_CurrentChanged(QHeaderView* self, const QModelIndex* current, const QModelIndex* old);
bool QHeaderView_Event(QHeaderView* self, QEvent* e);
void QHeaderView_PaintEvent(QHeaderView* self, QPaintEvent* e);
void QHeaderView_MousePressEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_MouseMoveEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_MouseReleaseEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_MouseDoubleClickEvent(QHeaderView* self, QMouseEvent* e);
bool QHeaderView_ViewportEvent(QHeaderView* self, QEvent* e);
void QHeaderView_PaintSection(const QHeaderView* self, QPainter* painter, const QRect* rect, int logicalIndex);
QSize* QHeaderView_SectionSizeFromContents(const QHeaderView* self, int logicalIndex);
int QHeaderView_HorizontalOffset(const QHeaderView* self);
int QHeaderView_VerticalOffset(const QHeaderView* self);
void QHeaderView_UpdateGeometries(QHeaderView* self);
void QHeaderView_ScrollContentsBy(QHeaderView* self, int dx, int dy);
void QHeaderView_DataChanged(QHeaderView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QHeaderView_RowsInserted(QHeaderView* self, const QModelIndex* parent, int start, int end);
QRect* QHeaderView_VisualRect(const QHeaderView* self, const QModelIndex* index);
void QHeaderView_ScrollTo(QHeaderView* self, const QModelIndex* index, int hint);
QModelIndex* QHeaderView_IndexAt(const QHeaderView* self, const QPoint* p);
bool QHeaderView_IsIndexHidden(const QHeaderView* self, const QModelIndex* index);
QModelIndex* QHeaderView_MoveCursor(QHeaderView* self, int param1, int param2);
void QHeaderView_SetSelection(QHeaderView* self, const QRect* rect, int flags);
QRegion* QHeaderView_VisualRegionForSelection(const QHeaderView* self, const QItemSelection* selection);
void QHeaderView_InitStyleOptionForIndex(const QHeaderView* self, QStyleOptionHeader* option, int logicalIndex);
void QHeaderView_InitStyleOption(const QHeaderView* self, QStyleOptionHeader* option);
libqt_string QHeaderView_Tr2(const char* s, const char* c);
libqt_string QHeaderView_Tr3(const char* s, const char* c, int n);
void QHeaderView_OnMetacall(QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseMetacall(QHeaderView* self, int param1, int param2, void** param3);
void QHeaderView_OnSetModel(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetModel(QHeaderView* self, QAbstractItemModel* model);
void QHeaderView_OnSizeHint(const QHeaderView* self, intptr_t slot);
QSize* QHeaderView_QBaseSizeHint(const QHeaderView* self);
void QHeaderView_OnSetVisible(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetVisible(QHeaderView* self, bool v);
void QHeaderView_OnDoItemsLayout(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDoItemsLayout(QHeaderView* self);
void QHeaderView_OnReset(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseReset(QHeaderView* self);
void QHeaderView_OnCurrentChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseCurrentChanged(QHeaderView* self, const QModelIndex* current, const QModelIndex* old);
void QHeaderView_OnEvent(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseEvent(QHeaderView* self, QEvent* e);
void QHeaderView_OnPaintEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBasePaintEvent(QHeaderView* self, QPaintEvent* e);
void QHeaderView_OnMousePressEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseMousePressEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_OnMouseMoveEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseMouseMoveEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_OnMouseReleaseEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseMouseReleaseEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_OnMouseDoubleClickEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseMouseDoubleClickEvent(QHeaderView* self, QMouseEvent* e);
void QHeaderView_OnViewportEvent(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseViewportEvent(QHeaderView* self, QEvent* e);
void QHeaderView_OnPaintSection(const QHeaderView* self, intptr_t slot);
void QHeaderView_QBasePaintSection(const QHeaderView* self, QPainter* painter, const QRect* rect, int logicalIndex);
void QHeaderView_OnSectionSizeFromContents(const QHeaderView* self, intptr_t slot);
QSize* QHeaderView_QBaseSectionSizeFromContents(const QHeaderView* self, int logicalIndex);
void QHeaderView_OnHorizontalOffset(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseHorizontalOffset(const QHeaderView* self);
void QHeaderView_OnVerticalOffset(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseVerticalOffset(const QHeaderView* self);
void QHeaderView_OnUpdateGeometries(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseUpdateGeometries(QHeaderView* self);
void QHeaderView_OnScrollContentsBy(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseScrollContentsBy(QHeaderView* self, int dx, int dy);
void QHeaderView_OnDataChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDataChanged(QHeaderView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QHeaderView_OnRowsInserted(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseRowsInserted(QHeaderView* self, const QModelIndex* parent, int start, int end);
void QHeaderView_OnVisualRect(const QHeaderView* self, intptr_t slot);
QRect* QHeaderView_QBaseVisualRect(const QHeaderView* self, const QModelIndex* index);
void QHeaderView_OnScrollTo(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseScrollTo(QHeaderView* self, const QModelIndex* index, int hint);
void QHeaderView_OnIndexAt(const QHeaderView* self, intptr_t slot);
QModelIndex* QHeaderView_QBaseIndexAt(const QHeaderView* self, const QPoint* p);
void QHeaderView_OnIsIndexHidden(const QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseIsIndexHidden(const QHeaderView* self, const QModelIndex* index);
void QHeaderView_OnMoveCursor(QHeaderView* self, intptr_t slot);
QModelIndex* QHeaderView_QBaseMoveCursor(QHeaderView* self, int param1, int param2);
void QHeaderView_OnSetSelection(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetSelection(QHeaderView* self, const QRect* rect, int flags);
void QHeaderView_OnVisualRegionForSelection(const QHeaderView* self, intptr_t slot);
QRegion* QHeaderView_QBaseVisualRegionForSelection(const QHeaderView* self, const QItemSelection* selection);
void QHeaderView_OnInitStyleOptionForIndex(const QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitStyleOptionForIndex(const QHeaderView* self, QStyleOptionHeader* option, int logicalIndex);
void QHeaderView_OnInitStyleOption(const QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitStyleOption(const QHeaderView* self, QStyleOptionHeader* option);
void QHeaderView_SetSelectionModel(QHeaderView* self, QItemSelectionModel* selectionModel);
void QHeaderView_OnSetSelectionModel(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetSelectionModel(QHeaderView* self, QItemSelectionModel* selectionModel);
void QHeaderView_KeyboardSearch(QHeaderView* self, const libqt_string search);
void QHeaderView_OnKeyboardSearch(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseKeyboardSearch(QHeaderView* self, const libqt_string search);
int QHeaderView_SizeHintForRow(const QHeaderView* self, int row);
void QHeaderView_OnSizeHintForRow(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseSizeHintForRow(const QHeaderView* self, int row);
int QHeaderView_SizeHintForColumn(const QHeaderView* self, int column);
void QHeaderView_OnSizeHintForColumn(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseSizeHintForColumn(const QHeaderView* self, int column);
QAbstractItemDelegate* QHeaderView_ItemDelegateForIndex(const QHeaderView* self, const QModelIndex* index);
void QHeaderView_OnItemDelegateForIndex(const QHeaderView* self, intptr_t slot);
QAbstractItemDelegate* QHeaderView_QBaseItemDelegateForIndex(const QHeaderView* self, const QModelIndex* index);
QVariant* QHeaderView_InputMethodQuery(const QHeaderView* self, int query);
void QHeaderView_OnInputMethodQuery(const QHeaderView* self, intptr_t slot);
QVariant* QHeaderView_QBaseInputMethodQuery(const QHeaderView* self, int query);
void QHeaderView_SetRootIndex(QHeaderView* self, const QModelIndex* index);
void QHeaderView_OnSetRootIndex(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetRootIndex(QHeaderView* self, const QModelIndex* index);
void QHeaderView_SelectAll(QHeaderView* self);
void QHeaderView_OnSelectAll(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSelectAll(QHeaderView* self);
void QHeaderView_RowsAboutToBeRemoved(QHeaderView* self, const QModelIndex* parent, int start, int end);
void QHeaderView_OnRowsAboutToBeRemoved(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseRowsAboutToBeRemoved(QHeaderView* self, const QModelIndex* parent, int start, int end);
void QHeaderView_SelectionChanged(QHeaderView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QHeaderView_OnSelectionChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSelectionChanged(QHeaderView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QHeaderView_UpdateEditorData(QHeaderView* self);
void QHeaderView_OnUpdateEditorData(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseUpdateEditorData(QHeaderView* self);
void QHeaderView_UpdateEditorGeometries(QHeaderView* self);
void QHeaderView_OnUpdateEditorGeometries(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseUpdateEditorGeometries(QHeaderView* self);
void QHeaderView_VerticalScrollbarAction(QHeaderView* self, int action);
void QHeaderView_OnVerticalScrollbarAction(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseVerticalScrollbarAction(QHeaderView* self, int action);
void QHeaderView_HorizontalScrollbarAction(QHeaderView* self, int action);
void QHeaderView_OnHorizontalScrollbarAction(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseHorizontalScrollbarAction(QHeaderView* self, int action);
void QHeaderView_VerticalScrollbarValueChanged(QHeaderView* self, int value);
void QHeaderView_OnVerticalScrollbarValueChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseVerticalScrollbarValueChanged(QHeaderView* self, int value);
void QHeaderView_HorizontalScrollbarValueChanged(QHeaderView* self, int value);
void QHeaderView_OnHorizontalScrollbarValueChanged(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseHorizontalScrollbarValueChanged(QHeaderView* self, int value);
void QHeaderView_CloseEditor(QHeaderView* self, QWidget* editor, int hint);
void QHeaderView_OnCloseEditor(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseCloseEditor(QHeaderView* self, QWidget* editor, int hint);
void QHeaderView_CommitData(QHeaderView* self, QWidget* editor);
void QHeaderView_OnCommitData(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseCommitData(QHeaderView* self, QWidget* editor);
void QHeaderView_EditorDestroyed(QHeaderView* self, QObject* editor);
void QHeaderView_OnEditorDestroyed(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseEditorDestroyed(QHeaderView* self, QObject* editor);
libqt_list /* of QModelIndex* */ QHeaderView_SelectedIndexes(const QHeaderView* self);
void QHeaderView_OnSelectedIndexes(const QHeaderView* self, intptr_t slot);
libqt_list /* of QModelIndex* */ QHeaderView_QBaseSelectedIndexes(const QHeaderView* self);
bool QHeaderView_Edit2(QHeaderView* self, const QModelIndex* index, int trigger, QEvent* event);
void QHeaderView_OnEdit2(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseEdit2(QHeaderView* self, const QModelIndex* index, int trigger, QEvent* event);
int QHeaderView_SelectionCommand(const QHeaderView* self, const QModelIndex* index, const QEvent* event);
void QHeaderView_OnSelectionCommand(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseSelectionCommand(const QHeaderView* self, const QModelIndex* index, const QEvent* event);
void QHeaderView_StartDrag(QHeaderView* self, int supportedActions);
void QHeaderView_OnStartDrag(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseStartDrag(QHeaderView* self, int supportedActions);
void QHeaderView_InitViewItemOption(const QHeaderView* self, QStyleOptionViewItem* option);
void QHeaderView_OnInitViewItemOption(const QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitViewItemOption(const QHeaderView* self, QStyleOptionViewItem* option);
bool QHeaderView_FocusNextPrevChild(QHeaderView* self, bool next);
void QHeaderView_OnFocusNextPrevChild(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseFocusNextPrevChild(QHeaderView* self, bool next);
void QHeaderView_DragEnterEvent(QHeaderView* self, QDragEnterEvent* event);
void QHeaderView_OnDragEnterEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDragEnterEvent(QHeaderView* self, QDragEnterEvent* event);
void QHeaderView_DragMoveEvent(QHeaderView* self, QDragMoveEvent* event);
void QHeaderView_OnDragMoveEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDragMoveEvent(QHeaderView* self, QDragMoveEvent* event);
void QHeaderView_DragLeaveEvent(QHeaderView* self, QDragLeaveEvent* event);
void QHeaderView_OnDragLeaveEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDragLeaveEvent(QHeaderView* self, QDragLeaveEvent* event);
void QHeaderView_DropEvent(QHeaderView* self, QDropEvent* event);
void QHeaderView_OnDropEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDropEvent(QHeaderView* self, QDropEvent* event);
void QHeaderView_FocusInEvent(QHeaderView* self, QFocusEvent* event);
void QHeaderView_OnFocusInEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseFocusInEvent(QHeaderView* self, QFocusEvent* event);
void QHeaderView_FocusOutEvent(QHeaderView* self, QFocusEvent* event);
void QHeaderView_OnFocusOutEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseFocusOutEvent(QHeaderView* self, QFocusEvent* event);
void QHeaderView_KeyPressEvent(QHeaderView* self, QKeyEvent* event);
void QHeaderView_OnKeyPressEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseKeyPressEvent(QHeaderView* self, QKeyEvent* event);
void QHeaderView_ResizeEvent(QHeaderView* self, QResizeEvent* event);
void QHeaderView_OnResizeEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseResizeEvent(QHeaderView* self, QResizeEvent* event);
void QHeaderView_TimerEvent(QHeaderView* self, QTimerEvent* event);
void QHeaderView_OnTimerEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseTimerEvent(QHeaderView* self, QTimerEvent* event);
void QHeaderView_InputMethodEvent(QHeaderView* self, QInputMethodEvent* event);
void QHeaderView_OnInputMethodEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInputMethodEvent(QHeaderView* self, QInputMethodEvent* event);
bool QHeaderView_EventFilter(QHeaderView* self, QObject* object, QEvent* event);
void QHeaderView_OnEventFilter(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseEventFilter(QHeaderView* self, QObject* object, QEvent* event);
QSize* QHeaderView_ViewportSizeHint(const QHeaderView* self);
void QHeaderView_OnViewportSizeHint(const QHeaderView* self, intptr_t slot);
QSize* QHeaderView_QBaseViewportSizeHint(const QHeaderView* self);
QSize* QHeaderView_MinimumSizeHint(const QHeaderView* self);
void QHeaderView_OnMinimumSizeHint(const QHeaderView* self, intptr_t slot);
QSize* QHeaderView_QBaseMinimumSizeHint(const QHeaderView* self);
void QHeaderView_SetupViewport(QHeaderView* self, QWidget* viewport);
void QHeaderView_OnSetupViewport(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetupViewport(QHeaderView* self, QWidget* viewport);
void QHeaderView_WheelEvent(QHeaderView* self, QWheelEvent* param1);
void QHeaderView_OnWheelEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseWheelEvent(QHeaderView* self, QWheelEvent* param1);
void QHeaderView_ContextMenuEvent(QHeaderView* self, QContextMenuEvent* param1);
void QHeaderView_OnContextMenuEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseContextMenuEvent(QHeaderView* self, QContextMenuEvent* param1);
void QHeaderView_ChangeEvent(QHeaderView* self, QEvent* param1);
void QHeaderView_OnChangeEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseChangeEvent(QHeaderView* self, QEvent* param1);
int QHeaderView_DevType(const QHeaderView* self);
void QHeaderView_OnDevType(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseDevType(const QHeaderView* self);
int QHeaderView_HeightForWidth(const QHeaderView* self, int param1);
void QHeaderView_OnHeightForWidth(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseHeightForWidth(const QHeaderView* self, int param1);
bool QHeaderView_HasHeightForWidth(const QHeaderView* self);
void QHeaderView_OnHasHeightForWidth(const QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseHasHeightForWidth(const QHeaderView* self);
QPaintEngine* QHeaderView_PaintEngine(const QHeaderView* self);
void QHeaderView_OnPaintEngine(const QHeaderView* self, intptr_t slot);
QPaintEngine* QHeaderView_QBasePaintEngine(const QHeaderView* self);
void QHeaderView_KeyReleaseEvent(QHeaderView* self, QKeyEvent* event);
void QHeaderView_OnKeyReleaseEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseKeyReleaseEvent(QHeaderView* self, QKeyEvent* event);
void QHeaderView_EnterEvent(QHeaderView* self, QEnterEvent* event);
void QHeaderView_OnEnterEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseEnterEvent(QHeaderView* self, QEnterEvent* event);
void QHeaderView_LeaveEvent(QHeaderView* self, QEvent* event);
void QHeaderView_OnLeaveEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseLeaveEvent(QHeaderView* self, QEvent* event);
void QHeaderView_MoveEvent(QHeaderView* self, QMoveEvent* event);
void QHeaderView_OnMoveEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseMoveEvent(QHeaderView* self, QMoveEvent* event);
void QHeaderView_CloseEvent(QHeaderView* self, QCloseEvent* event);
void QHeaderView_OnCloseEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseCloseEvent(QHeaderView* self, QCloseEvent* event);
void QHeaderView_TabletEvent(QHeaderView* self, QTabletEvent* event);
void QHeaderView_OnTabletEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseTabletEvent(QHeaderView* self, QTabletEvent* event);
void QHeaderView_ActionEvent(QHeaderView* self, QActionEvent* event);
void QHeaderView_OnActionEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseActionEvent(QHeaderView* self, QActionEvent* event);
void QHeaderView_ShowEvent(QHeaderView* self, QShowEvent* event);
void QHeaderView_OnShowEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseShowEvent(QHeaderView* self, QShowEvent* event);
void QHeaderView_HideEvent(QHeaderView* self, QHideEvent* event);
void QHeaderView_OnHideEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseHideEvent(QHeaderView* self, QHideEvent* event);
bool QHeaderView_NativeEvent(QHeaderView* self, const libqt_string eventType, void* message, intptr_t* result);
void QHeaderView_OnNativeEvent(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseNativeEvent(QHeaderView* self, const libqt_string eventType, void* message, intptr_t* result);
int QHeaderView_Metric(const QHeaderView* self, int param1);
void QHeaderView_OnMetric(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseMetric(const QHeaderView* self, int param1);
void QHeaderView_InitPainter(const QHeaderView* self, QPainter* painter);
void QHeaderView_OnInitPainter(const QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitPainter(const QHeaderView* self, QPainter* painter);
QPaintDevice* QHeaderView_Redirected(const QHeaderView* self, QPoint* offset);
void QHeaderView_OnRedirected(const QHeaderView* self, intptr_t slot);
QPaintDevice* QHeaderView_QBaseRedirected(const QHeaderView* self, QPoint* offset);
QPainter* QHeaderView_SharedPainter(const QHeaderView* self);
void QHeaderView_OnSharedPainter(const QHeaderView* self, intptr_t slot);
QPainter* QHeaderView_QBaseSharedPainter(const QHeaderView* self);
void QHeaderView_ChildEvent(QHeaderView* self, QChildEvent* event);
void QHeaderView_OnChildEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseChildEvent(QHeaderView* self, QChildEvent* event);
void QHeaderView_CustomEvent(QHeaderView* self, QEvent* event);
void QHeaderView_OnCustomEvent(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseCustomEvent(QHeaderView* self, QEvent* event);
void QHeaderView_ConnectNotify(QHeaderView* self, const QMetaMethod* signal);
void QHeaderView_OnConnectNotify(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseConnectNotify(QHeaderView* self, const QMetaMethod* signal);
void QHeaderView_DisconnectNotify(QHeaderView* self, const QMetaMethod* signal);
void QHeaderView_OnDisconnectNotify(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDisconnectNotify(QHeaderView* self, const QMetaMethod* signal);
void QHeaderView_UpdateSection(QHeaderView* self, int logicalIndex);
void QHeaderView_OnUpdateSection(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseUpdateSection(QHeaderView* self, int logicalIndex);
void QHeaderView_ResizeSections2(QHeaderView* self);
void QHeaderView_OnResizeSections2(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseResizeSections2(QHeaderView* self);
void QHeaderView_SectionsInserted(QHeaderView* self, const QModelIndex* parent, int logicalFirst, int logicalLast);
void QHeaderView_OnSectionsInserted(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSectionsInserted(QHeaderView* self, const QModelIndex* parent, int logicalFirst, int logicalLast);
void QHeaderView_SectionsAboutToBeRemoved(QHeaderView* self, const QModelIndex* parent, int logicalFirst, int logicalLast);
void QHeaderView_OnSectionsAboutToBeRemoved(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSectionsAboutToBeRemoved(QHeaderView* self, const QModelIndex* parent, int logicalFirst, int logicalLast);
void QHeaderView_Initialize(QHeaderView* self);
void QHeaderView_OnInitialize(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitialize(QHeaderView* self);
void QHeaderView_InitializeSections(QHeaderView* self);
void QHeaderView_OnInitializeSections(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitializeSections(QHeaderView* self);
void QHeaderView_InitializeSections2(QHeaderView* self, int start, int end);
void QHeaderView_OnInitializeSections2(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseInitializeSections2(QHeaderView* self, int start, int end);
int QHeaderView_State(const QHeaderView* self);
void QHeaderView_OnState(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseState(const QHeaderView* self);
void QHeaderView_SetState(QHeaderView* self, int state);
void QHeaderView_OnSetState(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetState(QHeaderView* self, int state);
void QHeaderView_ScheduleDelayedItemsLayout(QHeaderView* self);
void QHeaderView_OnScheduleDelayedItemsLayout(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseScheduleDelayedItemsLayout(QHeaderView* self);
void QHeaderView_ExecuteDelayedItemsLayout(QHeaderView* self);
void QHeaderView_OnExecuteDelayedItemsLayout(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseExecuteDelayedItemsLayout(QHeaderView* self);
void QHeaderView_SetDirtyRegion(QHeaderView* self, const QRegion* region);
void QHeaderView_OnSetDirtyRegion(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetDirtyRegion(QHeaderView* self, const QRegion* region);
void QHeaderView_ScrollDirtyRegion(QHeaderView* self, int dx, int dy);
void QHeaderView_OnScrollDirtyRegion(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseScrollDirtyRegion(QHeaderView* self, int dx, int dy);
QPoint* QHeaderView_DirtyRegionOffset(const QHeaderView* self);
void QHeaderView_OnDirtyRegionOffset(const QHeaderView* self, intptr_t slot);
QPoint* QHeaderView_QBaseDirtyRegionOffset(const QHeaderView* self);
void QHeaderView_StartAutoScroll(QHeaderView* self);
void QHeaderView_OnStartAutoScroll(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseStartAutoScroll(QHeaderView* self);
void QHeaderView_StopAutoScroll(QHeaderView* self);
void QHeaderView_OnStopAutoScroll(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseStopAutoScroll(QHeaderView* self);
void QHeaderView_DoAutoScroll(QHeaderView* self);
void QHeaderView_OnDoAutoScroll(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDoAutoScroll(QHeaderView* self);
int QHeaderView_DropIndicatorPosition(const QHeaderView* self);
void QHeaderView_OnDropIndicatorPosition(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseDropIndicatorPosition(const QHeaderView* self);
void QHeaderView_SetViewportMargins(QHeaderView* self, int left, int top, int right, int bottom);
void QHeaderView_OnSetViewportMargins(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseSetViewportMargins(QHeaderView* self, int left, int top, int right, int bottom);
QMargins* QHeaderView_ViewportMargins(const QHeaderView* self);
void QHeaderView_OnViewportMargins(const QHeaderView* self, intptr_t slot);
QMargins* QHeaderView_QBaseViewportMargins(const QHeaderView* self);
void QHeaderView_DrawFrame(QHeaderView* self, QPainter* param1);
void QHeaderView_OnDrawFrame(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDrawFrame(QHeaderView* self, QPainter* param1);
void QHeaderView_UpdateMicroFocus(QHeaderView* self);
void QHeaderView_OnUpdateMicroFocus(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseUpdateMicroFocus(QHeaderView* self);
void QHeaderView_Create(QHeaderView* self);
void QHeaderView_OnCreate(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseCreate(QHeaderView* self);
void QHeaderView_Destroy(QHeaderView* self);
void QHeaderView_OnDestroy(QHeaderView* self, intptr_t slot);
void QHeaderView_QBaseDestroy(QHeaderView* self);
bool QHeaderView_FocusNextChild(QHeaderView* self);
void QHeaderView_OnFocusNextChild(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseFocusNextChild(QHeaderView* self);
bool QHeaderView_FocusPreviousChild(QHeaderView* self);
void QHeaderView_OnFocusPreviousChild(QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseFocusPreviousChild(QHeaderView* self);
QObject* QHeaderView_Sender(const QHeaderView* self);
void QHeaderView_OnSender(const QHeaderView* self, intptr_t slot);
QObject* QHeaderView_QBaseSender(const QHeaderView* self);
int QHeaderView_SenderSignalIndex(const QHeaderView* self);
void QHeaderView_OnSenderSignalIndex(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseSenderSignalIndex(const QHeaderView* self);
int QHeaderView_Receivers(const QHeaderView* self, const char* signal);
void QHeaderView_OnReceivers(const QHeaderView* self, intptr_t slot);
int QHeaderView_QBaseReceivers(const QHeaderView* self, const char* signal);
bool QHeaderView_IsSignalConnected(const QHeaderView* self, const QMetaMethod* signal);
void QHeaderView_OnIsSignalConnected(const QHeaderView* self, intptr_t slot);
bool QHeaderView_QBaseIsSignalConnected(const QHeaderView* self, const QMetaMethod* signal);
double QHeaderView_GetDecodedMetricF(const QHeaderView* self, int metricA, int metricB);
void QHeaderView_OnGetDecodedMetricF(const QHeaderView* self, intptr_t slot);
double QHeaderView_QBaseGetDecodedMetricF(const QHeaderView* self, int metricA, int metricB);
void QHeaderView_Delete(QHeaderView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
