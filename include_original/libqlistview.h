#pragma once
#ifndef SRCC_LIBQLISTVIEW_H
#define SRCC_LIBQLISTVIEW_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QListView QListView;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QListView* QListView_new(QWidget* parent);
QListView* QListView_new2();
QMetaObject* QListView_MetaObject(const QListView* self);
void* QListView_Metacast(QListView* self, const char* param1);
int QListView_Metacall(QListView* self, int param1, int param2, void** param3);
libqt_string QListView_Tr(const char* s);
void QListView_SetMovement(QListView* self, int movement);
int QListView_Movement(const QListView* self);
void QListView_SetFlow(QListView* self, int flow);
int QListView_Flow(const QListView* self);
void QListView_SetWrapping(QListView* self, bool enable);
bool QListView_IsWrapping(const QListView* self);
void QListView_SetResizeMode(QListView* self, int mode);
int QListView_ResizeMode(const QListView* self);
void QListView_SetLayoutMode(QListView* self, int mode);
int QListView_LayoutMode(const QListView* self);
void QListView_SetSpacing(QListView* self, int space);
int QListView_Spacing(const QListView* self);
void QListView_SetBatchSize(QListView* self, int batchSize);
int QListView_BatchSize(const QListView* self);
void QListView_SetGridSize(QListView* self, const QSize* size);
QSize* QListView_GridSize(const QListView* self);
void QListView_SetViewMode(QListView* self, int mode);
int QListView_ViewMode(const QListView* self);
void QListView_ClearPropertyFlags(QListView* self);
bool QListView_IsRowHidden(const QListView* self, int row);
void QListView_SetRowHidden(QListView* self, int row, bool hide);
void QListView_SetModelColumn(QListView* self, int column);
int QListView_ModelColumn(const QListView* self);
void QListView_SetUniformItemSizes(QListView* self, bool enable);
bool QListView_UniformItemSizes(const QListView* self);
void QListView_SetWordWrap(QListView* self, bool on);
bool QListView_WordWrap(const QListView* self);
void QListView_SetSelectionRectVisible(QListView* self, bool show);
bool QListView_IsSelectionRectVisible(const QListView* self);
void QListView_SetItemAlignment(QListView* self, int alignment);
int QListView_ItemAlignment(const QListView* self);
QRect* QListView_VisualRect(const QListView* self, const QModelIndex* index);
void QListView_ScrollTo(QListView* self, const QModelIndex* index, int hint);
QModelIndex* QListView_IndexAt(const QListView* self, const QPoint* p);
void QListView_DoItemsLayout(QListView* self);
void QListView_Reset(QListView* self);
void QListView_SetRootIndex(QListView* self, const QModelIndex* index);
void QListView_IndexesMoved(QListView* self, const libqt_list /* of QModelIndex* */ indexes);
void QListView_Connect_IndexesMoved(QListView* self, intptr_t slot);
bool QListView_Event(QListView* self, QEvent* e);
void QListView_ScrollContentsBy(QListView* self, int dx, int dy);
void QListView_DataChanged(QListView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QListView_RowsInserted(QListView* self, const QModelIndex* parent, int start, int end);
void QListView_RowsAboutToBeRemoved(QListView* self, const QModelIndex* parent, int start, int end);
void QListView_MouseMoveEvent(QListView* self, QMouseEvent* e);
void QListView_MouseReleaseEvent(QListView* self, QMouseEvent* e);
void QListView_WheelEvent(QListView* self, QWheelEvent* e);
void QListView_TimerEvent(QListView* self, QTimerEvent* e);
void QListView_ResizeEvent(QListView* self, QResizeEvent* e);
void QListView_DragMoveEvent(QListView* self, QDragMoveEvent* e);
void QListView_DragLeaveEvent(QListView* self, QDragLeaveEvent* e);
void QListView_DropEvent(QListView* self, QDropEvent* e);
void QListView_StartDrag(QListView* self, int supportedActions);
void QListView_InitViewItemOption(const QListView* self, QStyleOptionViewItem* option);
void QListView_PaintEvent(QListView* self, QPaintEvent* e);
int QListView_HorizontalOffset(const QListView* self);
int QListView_VerticalOffset(const QListView* self);
QModelIndex* QListView_MoveCursor(QListView* self, int cursorAction, int modifiers);
void QListView_SetSelection(QListView* self, const QRect* rect, int command);
QRegion* QListView_VisualRegionForSelection(const QListView* self, const QItemSelection* selection);
libqt_list /* of QModelIndex* */ QListView_SelectedIndexes(const QListView* self);
void QListView_UpdateGeometries(QListView* self);
bool QListView_IsIndexHidden(const QListView* self, const QModelIndex* index);
void QListView_SelectionChanged(QListView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QListView_CurrentChanged(QListView* self, const QModelIndex* current, const QModelIndex* previous);
QSize* QListView_ViewportSizeHint(const QListView* self);
libqt_string QListView_Tr2(const char* s, const char* c);
libqt_string QListView_Tr3(const char* s, const char* c, int n);
void QListView_OnMetacall(QListView* self, intptr_t slot);
int QListView_QBaseMetacall(QListView* self, int param1, int param2, void** param3);
void QListView_OnVisualRect(const QListView* self, intptr_t slot);
QRect* QListView_QBaseVisualRect(const QListView* self, const QModelIndex* index);
void QListView_OnScrollTo(QListView* self, intptr_t slot);
void QListView_QBaseScrollTo(QListView* self, const QModelIndex* index, int hint);
void QListView_OnIndexAt(const QListView* self, intptr_t slot);
QModelIndex* QListView_QBaseIndexAt(const QListView* self, const QPoint* p);
void QListView_OnDoItemsLayout(QListView* self, intptr_t slot);
void QListView_QBaseDoItemsLayout(QListView* self);
void QListView_OnReset(QListView* self, intptr_t slot);
void QListView_QBaseReset(QListView* self);
void QListView_OnSetRootIndex(QListView* self, intptr_t slot);
void QListView_QBaseSetRootIndex(QListView* self, const QModelIndex* index);
void QListView_OnEvent(QListView* self, intptr_t slot);
bool QListView_QBaseEvent(QListView* self, QEvent* e);
void QListView_OnScrollContentsBy(QListView* self, intptr_t slot);
void QListView_QBaseScrollContentsBy(QListView* self, int dx, int dy);
void QListView_OnDataChanged(QListView* self, intptr_t slot);
void QListView_QBaseDataChanged(QListView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QListView_OnRowsInserted(QListView* self, intptr_t slot);
void QListView_QBaseRowsInserted(QListView* self, const QModelIndex* parent, int start, int end);
void QListView_OnRowsAboutToBeRemoved(QListView* self, intptr_t slot);
void QListView_QBaseRowsAboutToBeRemoved(QListView* self, const QModelIndex* parent, int start, int end);
void QListView_OnMouseMoveEvent(QListView* self, intptr_t slot);
void QListView_QBaseMouseMoveEvent(QListView* self, QMouseEvent* e);
void QListView_OnMouseReleaseEvent(QListView* self, intptr_t slot);
void QListView_QBaseMouseReleaseEvent(QListView* self, QMouseEvent* e);
void QListView_OnWheelEvent(QListView* self, intptr_t slot);
void QListView_QBaseWheelEvent(QListView* self, QWheelEvent* e);
void QListView_OnTimerEvent(QListView* self, intptr_t slot);
void QListView_QBaseTimerEvent(QListView* self, QTimerEvent* e);
void QListView_OnResizeEvent(QListView* self, intptr_t slot);
void QListView_QBaseResizeEvent(QListView* self, QResizeEvent* e);
void QListView_OnDragMoveEvent(QListView* self, intptr_t slot);
void QListView_QBaseDragMoveEvent(QListView* self, QDragMoveEvent* e);
void QListView_OnDragLeaveEvent(QListView* self, intptr_t slot);
void QListView_QBaseDragLeaveEvent(QListView* self, QDragLeaveEvent* e);
void QListView_OnDropEvent(QListView* self, intptr_t slot);
void QListView_QBaseDropEvent(QListView* self, QDropEvent* e);
void QListView_OnStartDrag(QListView* self, intptr_t slot);
void QListView_QBaseStartDrag(QListView* self, int supportedActions);
void QListView_OnInitViewItemOption(const QListView* self, intptr_t slot);
void QListView_QBaseInitViewItemOption(const QListView* self, QStyleOptionViewItem* option);
void QListView_OnPaintEvent(QListView* self, intptr_t slot);
void QListView_QBasePaintEvent(QListView* self, QPaintEvent* e);
void QListView_OnHorizontalOffset(const QListView* self, intptr_t slot);
int QListView_QBaseHorizontalOffset(const QListView* self);
void QListView_OnVerticalOffset(const QListView* self, intptr_t slot);
int QListView_QBaseVerticalOffset(const QListView* self);
void QListView_OnMoveCursor(QListView* self, intptr_t slot);
QModelIndex* QListView_QBaseMoveCursor(QListView* self, int cursorAction, int modifiers);
void QListView_OnSetSelection(QListView* self, intptr_t slot);
void QListView_QBaseSetSelection(QListView* self, const QRect* rect, int command);
void QListView_OnVisualRegionForSelection(const QListView* self, intptr_t slot);
QRegion* QListView_QBaseVisualRegionForSelection(const QListView* self, const QItemSelection* selection);
void QListView_OnSelectedIndexes(const QListView* self, intptr_t slot);
libqt_list /* of QModelIndex* */ QListView_QBaseSelectedIndexes(const QListView* self);
void QListView_OnUpdateGeometries(QListView* self, intptr_t slot);
void QListView_QBaseUpdateGeometries(QListView* self);
void QListView_OnIsIndexHidden(const QListView* self, intptr_t slot);
bool QListView_QBaseIsIndexHidden(const QListView* self, const QModelIndex* index);
void QListView_OnSelectionChanged(QListView* self, intptr_t slot);
void QListView_QBaseSelectionChanged(QListView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QListView_OnCurrentChanged(QListView* self, intptr_t slot);
void QListView_QBaseCurrentChanged(QListView* self, const QModelIndex* current, const QModelIndex* previous);
void QListView_OnViewportSizeHint(const QListView* self, intptr_t slot);
QSize* QListView_QBaseViewportSizeHint(const QListView* self);
void QListView_SetModel(QListView* self, QAbstractItemModel* model);
void QListView_OnSetModel(QListView* self, intptr_t slot);
void QListView_QBaseSetModel(QListView* self, QAbstractItemModel* model);
void QListView_SetSelectionModel(QListView* self, QItemSelectionModel* selectionModel);
void QListView_OnSetSelectionModel(QListView* self, intptr_t slot);
void QListView_QBaseSetSelectionModel(QListView* self, QItemSelectionModel* selectionModel);
void QListView_KeyboardSearch(QListView* self, const libqt_string search);
void QListView_OnKeyboardSearch(QListView* self, intptr_t slot);
void QListView_QBaseKeyboardSearch(QListView* self, const libqt_string search);
int QListView_SizeHintForRow(const QListView* self, int row);
void QListView_OnSizeHintForRow(const QListView* self, intptr_t slot);
int QListView_QBaseSizeHintForRow(const QListView* self, int row);
int QListView_SizeHintForColumn(const QListView* self, int column);
void QListView_OnSizeHintForColumn(const QListView* self, intptr_t slot);
int QListView_QBaseSizeHintForColumn(const QListView* self, int column);
QAbstractItemDelegate* QListView_ItemDelegateForIndex(const QListView* self, const QModelIndex* index);
void QListView_OnItemDelegateForIndex(const QListView* self, intptr_t slot);
QAbstractItemDelegate* QListView_QBaseItemDelegateForIndex(const QListView* self, const QModelIndex* index);
QVariant* QListView_InputMethodQuery(const QListView* self, int query);
void QListView_OnInputMethodQuery(const QListView* self, intptr_t slot);
QVariant* QListView_QBaseInputMethodQuery(const QListView* self, int query);
void QListView_SelectAll(QListView* self);
void QListView_OnSelectAll(QListView* self, intptr_t slot);
void QListView_QBaseSelectAll(QListView* self);
void QListView_UpdateEditorData(QListView* self);
void QListView_OnUpdateEditorData(QListView* self, intptr_t slot);
void QListView_QBaseUpdateEditorData(QListView* self);
void QListView_UpdateEditorGeometries(QListView* self);
void QListView_OnUpdateEditorGeometries(QListView* self, intptr_t slot);
void QListView_QBaseUpdateEditorGeometries(QListView* self);
void QListView_VerticalScrollbarAction(QListView* self, int action);
void QListView_OnVerticalScrollbarAction(QListView* self, intptr_t slot);
void QListView_QBaseVerticalScrollbarAction(QListView* self, int action);
void QListView_HorizontalScrollbarAction(QListView* self, int action);
void QListView_OnHorizontalScrollbarAction(QListView* self, intptr_t slot);
void QListView_QBaseHorizontalScrollbarAction(QListView* self, int action);
void QListView_VerticalScrollbarValueChanged(QListView* self, int value);
void QListView_OnVerticalScrollbarValueChanged(QListView* self, intptr_t slot);
void QListView_QBaseVerticalScrollbarValueChanged(QListView* self, int value);
void QListView_HorizontalScrollbarValueChanged(QListView* self, int value);
void QListView_OnHorizontalScrollbarValueChanged(QListView* self, intptr_t slot);
void QListView_QBaseHorizontalScrollbarValueChanged(QListView* self, int value);
void QListView_CloseEditor(QListView* self, QWidget* editor, int hint);
void QListView_OnCloseEditor(QListView* self, intptr_t slot);
void QListView_QBaseCloseEditor(QListView* self, QWidget* editor, int hint);
void QListView_CommitData(QListView* self, QWidget* editor);
void QListView_OnCommitData(QListView* self, intptr_t slot);
void QListView_QBaseCommitData(QListView* self, QWidget* editor);
void QListView_EditorDestroyed(QListView* self, QObject* editor);
void QListView_OnEditorDestroyed(QListView* self, intptr_t slot);
void QListView_QBaseEditorDestroyed(QListView* self, QObject* editor);
bool QListView_Edit2(QListView* self, const QModelIndex* index, int trigger, QEvent* event);
void QListView_OnEdit2(QListView* self, intptr_t slot);
bool QListView_QBaseEdit2(QListView* self, const QModelIndex* index, int trigger, QEvent* event);
int QListView_SelectionCommand(const QListView* self, const QModelIndex* index, const QEvent* event);
void QListView_OnSelectionCommand(const QListView* self, intptr_t slot);
int QListView_QBaseSelectionCommand(const QListView* self, const QModelIndex* index, const QEvent* event);
bool QListView_FocusNextPrevChild(QListView* self, bool next);
void QListView_OnFocusNextPrevChild(QListView* self, intptr_t slot);
bool QListView_QBaseFocusNextPrevChild(QListView* self, bool next);
bool QListView_ViewportEvent(QListView* self, QEvent* event);
void QListView_OnViewportEvent(QListView* self, intptr_t slot);
bool QListView_QBaseViewportEvent(QListView* self, QEvent* event);
void QListView_MousePressEvent(QListView* self, QMouseEvent* event);
void QListView_OnMousePressEvent(QListView* self, intptr_t slot);
void QListView_QBaseMousePressEvent(QListView* self, QMouseEvent* event);
void QListView_MouseDoubleClickEvent(QListView* self, QMouseEvent* event);
void QListView_OnMouseDoubleClickEvent(QListView* self, intptr_t slot);
void QListView_QBaseMouseDoubleClickEvent(QListView* self, QMouseEvent* event);
void QListView_DragEnterEvent(QListView* self, QDragEnterEvent* event);
void QListView_OnDragEnterEvent(QListView* self, intptr_t slot);
void QListView_QBaseDragEnterEvent(QListView* self, QDragEnterEvent* event);
void QListView_FocusInEvent(QListView* self, QFocusEvent* event);
void QListView_OnFocusInEvent(QListView* self, intptr_t slot);
void QListView_QBaseFocusInEvent(QListView* self, QFocusEvent* event);
void QListView_FocusOutEvent(QListView* self, QFocusEvent* event);
void QListView_OnFocusOutEvent(QListView* self, intptr_t slot);
void QListView_QBaseFocusOutEvent(QListView* self, QFocusEvent* event);
void QListView_KeyPressEvent(QListView* self, QKeyEvent* event);
void QListView_OnKeyPressEvent(QListView* self, intptr_t slot);
void QListView_QBaseKeyPressEvent(QListView* self, QKeyEvent* event);
void QListView_InputMethodEvent(QListView* self, QInputMethodEvent* event);
void QListView_OnInputMethodEvent(QListView* self, intptr_t slot);
void QListView_QBaseInputMethodEvent(QListView* self, QInputMethodEvent* event);
bool QListView_EventFilter(QListView* self, QObject* object, QEvent* event);
void QListView_OnEventFilter(QListView* self, intptr_t slot);
bool QListView_QBaseEventFilter(QListView* self, QObject* object, QEvent* event);
QSize* QListView_MinimumSizeHint(const QListView* self);
void QListView_OnMinimumSizeHint(const QListView* self, intptr_t slot);
QSize* QListView_QBaseMinimumSizeHint(const QListView* self);
QSize* QListView_SizeHint(const QListView* self);
void QListView_OnSizeHint(const QListView* self, intptr_t slot);
QSize* QListView_QBaseSizeHint(const QListView* self);
void QListView_SetupViewport(QListView* self, QWidget* viewport);
void QListView_OnSetupViewport(QListView* self, intptr_t slot);
void QListView_QBaseSetupViewport(QListView* self, QWidget* viewport);
void QListView_ContextMenuEvent(QListView* self, QContextMenuEvent* param1);
void QListView_OnContextMenuEvent(QListView* self, intptr_t slot);
void QListView_QBaseContextMenuEvent(QListView* self, QContextMenuEvent* param1);
void QListView_ChangeEvent(QListView* self, QEvent* param1);
void QListView_OnChangeEvent(QListView* self, intptr_t slot);
void QListView_QBaseChangeEvent(QListView* self, QEvent* param1);
void QListView_InitStyleOption(const QListView* self, QStyleOptionFrame* option);
void QListView_OnInitStyleOption(const QListView* self, intptr_t slot);
void QListView_QBaseInitStyleOption(const QListView* self, QStyleOptionFrame* option);
int QListView_DevType(const QListView* self);
void QListView_OnDevType(const QListView* self, intptr_t slot);
int QListView_QBaseDevType(const QListView* self);
void QListView_SetVisible(QListView* self, bool visible);
void QListView_OnSetVisible(QListView* self, intptr_t slot);
void QListView_QBaseSetVisible(QListView* self, bool visible);
int QListView_HeightForWidth(const QListView* self, int param1);
void QListView_OnHeightForWidth(const QListView* self, intptr_t slot);
int QListView_QBaseHeightForWidth(const QListView* self, int param1);
bool QListView_HasHeightForWidth(const QListView* self);
void QListView_OnHasHeightForWidth(const QListView* self, intptr_t slot);
bool QListView_QBaseHasHeightForWidth(const QListView* self);
QPaintEngine* QListView_PaintEngine(const QListView* self);
void QListView_OnPaintEngine(const QListView* self, intptr_t slot);
QPaintEngine* QListView_QBasePaintEngine(const QListView* self);
void QListView_KeyReleaseEvent(QListView* self, QKeyEvent* event);
void QListView_OnKeyReleaseEvent(QListView* self, intptr_t slot);
void QListView_QBaseKeyReleaseEvent(QListView* self, QKeyEvent* event);
void QListView_EnterEvent(QListView* self, QEnterEvent* event);
void QListView_OnEnterEvent(QListView* self, intptr_t slot);
void QListView_QBaseEnterEvent(QListView* self, QEnterEvent* event);
void QListView_LeaveEvent(QListView* self, QEvent* event);
void QListView_OnLeaveEvent(QListView* self, intptr_t slot);
void QListView_QBaseLeaveEvent(QListView* self, QEvent* event);
void QListView_MoveEvent(QListView* self, QMoveEvent* event);
void QListView_OnMoveEvent(QListView* self, intptr_t slot);
void QListView_QBaseMoveEvent(QListView* self, QMoveEvent* event);
void QListView_CloseEvent(QListView* self, QCloseEvent* event);
void QListView_OnCloseEvent(QListView* self, intptr_t slot);
void QListView_QBaseCloseEvent(QListView* self, QCloseEvent* event);
void QListView_TabletEvent(QListView* self, QTabletEvent* event);
void QListView_OnTabletEvent(QListView* self, intptr_t slot);
void QListView_QBaseTabletEvent(QListView* self, QTabletEvent* event);
void QListView_ActionEvent(QListView* self, QActionEvent* event);
void QListView_OnActionEvent(QListView* self, intptr_t slot);
void QListView_QBaseActionEvent(QListView* self, QActionEvent* event);
void QListView_ShowEvent(QListView* self, QShowEvent* event);
void QListView_OnShowEvent(QListView* self, intptr_t slot);
void QListView_QBaseShowEvent(QListView* self, QShowEvent* event);
void QListView_HideEvent(QListView* self, QHideEvent* event);
void QListView_OnHideEvent(QListView* self, intptr_t slot);
void QListView_QBaseHideEvent(QListView* self, QHideEvent* event);
bool QListView_NativeEvent(QListView* self, const libqt_string eventType, void* message, intptr_t* result);
void QListView_OnNativeEvent(QListView* self, intptr_t slot);
bool QListView_QBaseNativeEvent(QListView* self, const libqt_string eventType, void* message, intptr_t* result);
int QListView_Metric(const QListView* self, int param1);
void QListView_OnMetric(const QListView* self, intptr_t slot);
int QListView_QBaseMetric(const QListView* self, int param1);
void QListView_InitPainter(const QListView* self, QPainter* painter);
void QListView_OnInitPainter(const QListView* self, intptr_t slot);
void QListView_QBaseInitPainter(const QListView* self, QPainter* painter);
QPaintDevice* QListView_Redirected(const QListView* self, QPoint* offset);
void QListView_OnRedirected(const QListView* self, intptr_t slot);
QPaintDevice* QListView_QBaseRedirected(const QListView* self, QPoint* offset);
QPainter* QListView_SharedPainter(const QListView* self);
void QListView_OnSharedPainter(const QListView* self, intptr_t slot);
QPainter* QListView_QBaseSharedPainter(const QListView* self);
void QListView_ChildEvent(QListView* self, QChildEvent* event);
void QListView_OnChildEvent(QListView* self, intptr_t slot);
void QListView_QBaseChildEvent(QListView* self, QChildEvent* event);
void QListView_CustomEvent(QListView* self, QEvent* event);
void QListView_OnCustomEvent(QListView* self, intptr_t slot);
void QListView_QBaseCustomEvent(QListView* self, QEvent* event);
void QListView_ConnectNotify(QListView* self, const QMetaMethod* signal);
void QListView_OnConnectNotify(QListView* self, intptr_t slot);
void QListView_QBaseConnectNotify(QListView* self, const QMetaMethod* signal);
void QListView_DisconnectNotify(QListView* self, const QMetaMethod* signal);
void QListView_OnDisconnectNotify(QListView* self, intptr_t slot);
void QListView_QBaseDisconnectNotify(QListView* self, const QMetaMethod* signal);
void QListView_ResizeContents(QListView* self, int width, int height);
void QListView_OnResizeContents(QListView* self, intptr_t slot);
void QListView_QBaseResizeContents(QListView* self, int width, int height);
QSize* QListView_ContentsSize(const QListView* self);
void QListView_OnContentsSize(const QListView* self, intptr_t slot);
QSize* QListView_QBaseContentsSize(const QListView* self);
QRect* QListView_RectForIndex(const QListView* self, const QModelIndex* index);
void QListView_OnRectForIndex(const QListView* self, intptr_t slot);
QRect* QListView_QBaseRectForIndex(const QListView* self, const QModelIndex* index);
void QListView_SetPositionForIndex(QListView* self, const QPoint* position, const QModelIndex* index);
void QListView_OnSetPositionForIndex(QListView* self, intptr_t slot);
void QListView_QBaseSetPositionForIndex(QListView* self, const QPoint* position, const QModelIndex* index);
int QListView_State(const QListView* self);
void QListView_OnState(const QListView* self, intptr_t slot);
int QListView_QBaseState(const QListView* self);
void QListView_SetState(QListView* self, int state);
void QListView_OnSetState(QListView* self, intptr_t slot);
void QListView_QBaseSetState(QListView* self, int state);
void QListView_ScheduleDelayedItemsLayout(QListView* self);
void QListView_OnScheduleDelayedItemsLayout(QListView* self, intptr_t slot);
void QListView_QBaseScheduleDelayedItemsLayout(QListView* self);
void QListView_ExecuteDelayedItemsLayout(QListView* self);
void QListView_OnExecuteDelayedItemsLayout(QListView* self, intptr_t slot);
void QListView_QBaseExecuteDelayedItemsLayout(QListView* self);
void QListView_SetDirtyRegion(QListView* self, const QRegion* region);
void QListView_OnSetDirtyRegion(QListView* self, intptr_t slot);
void QListView_QBaseSetDirtyRegion(QListView* self, const QRegion* region);
void QListView_ScrollDirtyRegion(QListView* self, int dx, int dy);
void QListView_OnScrollDirtyRegion(QListView* self, intptr_t slot);
void QListView_QBaseScrollDirtyRegion(QListView* self, int dx, int dy);
QPoint* QListView_DirtyRegionOffset(const QListView* self);
void QListView_OnDirtyRegionOffset(const QListView* self, intptr_t slot);
QPoint* QListView_QBaseDirtyRegionOffset(const QListView* self);
void QListView_StartAutoScroll(QListView* self);
void QListView_OnStartAutoScroll(QListView* self, intptr_t slot);
void QListView_QBaseStartAutoScroll(QListView* self);
void QListView_StopAutoScroll(QListView* self);
void QListView_OnStopAutoScroll(QListView* self, intptr_t slot);
void QListView_QBaseStopAutoScroll(QListView* self);
void QListView_DoAutoScroll(QListView* self);
void QListView_OnDoAutoScroll(QListView* self, intptr_t slot);
void QListView_QBaseDoAutoScroll(QListView* self);
int QListView_DropIndicatorPosition(const QListView* self);
void QListView_OnDropIndicatorPosition(const QListView* self, intptr_t slot);
int QListView_QBaseDropIndicatorPosition(const QListView* self);
void QListView_SetViewportMargins(QListView* self, int left, int top, int right, int bottom);
void QListView_OnSetViewportMargins(QListView* self, intptr_t slot);
void QListView_QBaseSetViewportMargins(QListView* self, int left, int top, int right, int bottom);
QMargins* QListView_ViewportMargins(const QListView* self);
void QListView_OnViewportMargins(const QListView* self, intptr_t slot);
QMargins* QListView_QBaseViewportMargins(const QListView* self);
void QListView_DrawFrame(QListView* self, QPainter* param1);
void QListView_OnDrawFrame(QListView* self, intptr_t slot);
void QListView_QBaseDrawFrame(QListView* self, QPainter* param1);
void QListView_UpdateMicroFocus(QListView* self);
void QListView_OnUpdateMicroFocus(QListView* self, intptr_t slot);
void QListView_QBaseUpdateMicroFocus(QListView* self);
void QListView_Create(QListView* self);
void QListView_OnCreate(QListView* self, intptr_t slot);
void QListView_QBaseCreate(QListView* self);
void QListView_Destroy(QListView* self);
void QListView_OnDestroy(QListView* self, intptr_t slot);
void QListView_QBaseDestroy(QListView* self);
bool QListView_FocusNextChild(QListView* self);
void QListView_OnFocusNextChild(QListView* self, intptr_t slot);
bool QListView_QBaseFocusNextChild(QListView* self);
bool QListView_FocusPreviousChild(QListView* self);
void QListView_OnFocusPreviousChild(QListView* self, intptr_t slot);
bool QListView_QBaseFocusPreviousChild(QListView* self);
QObject* QListView_Sender(const QListView* self);
void QListView_OnSender(const QListView* self, intptr_t slot);
QObject* QListView_QBaseSender(const QListView* self);
int QListView_SenderSignalIndex(const QListView* self);
void QListView_OnSenderSignalIndex(const QListView* self, intptr_t slot);
int QListView_QBaseSenderSignalIndex(const QListView* self);
int QListView_Receivers(const QListView* self, const char* signal);
void QListView_OnReceivers(const QListView* self, intptr_t slot);
int QListView_QBaseReceivers(const QListView* self, const char* signal);
bool QListView_IsSignalConnected(const QListView* self, const QMetaMethod* signal);
void QListView_OnIsSignalConnected(const QListView* self, intptr_t slot);
bool QListView_QBaseIsSignalConnected(const QListView* self, const QMetaMethod* signal);
double QListView_GetDecodedMetricF(const QListView* self, int metricA, int metricB);
void QListView_OnGetDecodedMetricF(const QListView* self, intptr_t slot);
double QListView_QBaseGetDecodedMetricF(const QListView* self, int metricA, int metricB);
void QListView_Delete(QListView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
