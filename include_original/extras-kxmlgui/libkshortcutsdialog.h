#pragma once
#ifndef SRC_EXTRAS_KXMLGUIC_LIBKSHORTCUTSDIALOG_H
#define SRC_EXTRAS_KXMLGUIC_LIBKSHORTCUTSDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KActionCollection KActionCollection;
typedef struct KShortcutsDialog KShortcutsDialog;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KShortcutsDialog* KShortcutsDialog_new(QWidget* parent);
KShortcutsDialog* KShortcutsDialog_new2();
KShortcutsDialog* KShortcutsDialog_new3(int actionTypes);
KShortcutsDialog* KShortcutsDialog_new4(int actionTypes, int allowLetterShortcuts);
KShortcutsDialog* KShortcutsDialog_new5(int actionTypes, int allowLetterShortcuts, QWidget* parent);
QMetaObject* KShortcutsDialog_MetaObject(const KShortcutsDialog* self);
void* KShortcutsDialog_Metacast(KShortcutsDialog* self, const char* param1);
int KShortcutsDialog_Metacall(KShortcutsDialog* self, int param1, int param2, void** param3);
libqt_string KShortcutsDialog_Tr(const char* s);
void KShortcutsDialog_AddCollection(KShortcutsDialog* self, KActionCollection* collection);
libqt_list /* of KActionCollection* */ KShortcutsDialog_ActionCollections(const KShortcutsDialog* self);
bool KShortcutsDialog_Configure(KShortcutsDialog* self);
QSize* KShortcutsDialog_SizeHint(const KShortcutsDialog* self);
void KShortcutsDialog_ShowDialog(KActionCollection* collection);
void KShortcutsDialog_ImportConfiguration(KShortcutsDialog* self, const libqt_string path);
void KShortcutsDialog_ExportConfiguration(const KShortcutsDialog* self, const libqt_string path);
void KShortcutsDialog_RefreshSchemes(KShortcutsDialog* self);
void KShortcutsDialog_AddActionToSchemesMoreButton(KShortcutsDialog* self, QAction* action);
void KShortcutsDialog_Accept(KShortcutsDialog* self);
void KShortcutsDialog_Saved(KShortcutsDialog* self);
void KShortcutsDialog_Connect_Saved(KShortcutsDialog* self, intptr_t slot);
libqt_string KShortcutsDialog_Tr2(const char* s, const char* c);
libqt_string KShortcutsDialog_Tr3(const char* s, const char* c, int n);
void KShortcutsDialog_AddCollection2(KShortcutsDialog* self, KActionCollection* collection, const libqt_string title);
bool KShortcutsDialog_Configure1(KShortcutsDialog* self, bool saveSettings);
void KShortcutsDialog_ShowDialog2(KActionCollection* collection, int allowLetterShortcuts);
void KShortcutsDialog_ShowDialog3(KActionCollection* collection, int allowLetterShortcuts, QWidget* parent);
void KShortcutsDialog_OnMetacall(KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseMetacall(KShortcutsDialog* self, int param1, int param2, void** param3);
void KShortcutsDialog_OnSizeHint(const KShortcutsDialog* self, intptr_t slot);
QSize* KShortcutsDialog_QBaseSizeHint(const KShortcutsDialog* self);
void KShortcutsDialog_OnAccept(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseAccept(KShortcutsDialog* self);
void KShortcutsDialog_SetVisible(KShortcutsDialog* self, bool visible);
void KShortcutsDialog_OnSetVisible(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseSetVisible(KShortcutsDialog* self, bool visible);
QSize* KShortcutsDialog_MinimumSizeHint(const KShortcutsDialog* self);
void KShortcutsDialog_OnMinimumSizeHint(const KShortcutsDialog* self, intptr_t slot);
QSize* KShortcutsDialog_QBaseMinimumSizeHint(const KShortcutsDialog* self);
void KShortcutsDialog_Open(KShortcutsDialog* self);
void KShortcutsDialog_OnOpen(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseOpen(KShortcutsDialog* self);
int KShortcutsDialog_Exec(KShortcutsDialog* self);
void KShortcutsDialog_OnExec(KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseExec(KShortcutsDialog* self);
void KShortcutsDialog_Done(KShortcutsDialog* self, int param1);
void KShortcutsDialog_OnDone(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDone(KShortcutsDialog* self, int param1);
void KShortcutsDialog_Reject(KShortcutsDialog* self);
void KShortcutsDialog_OnReject(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseReject(KShortcutsDialog* self);
void KShortcutsDialog_KeyPressEvent(KShortcutsDialog* self, QKeyEvent* param1);
void KShortcutsDialog_OnKeyPressEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseKeyPressEvent(KShortcutsDialog* self, QKeyEvent* param1);
void KShortcutsDialog_CloseEvent(KShortcutsDialog* self, QCloseEvent* param1);
void KShortcutsDialog_OnCloseEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseCloseEvent(KShortcutsDialog* self, QCloseEvent* param1);
void KShortcutsDialog_ShowEvent(KShortcutsDialog* self, QShowEvent* param1);
void KShortcutsDialog_OnShowEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseShowEvent(KShortcutsDialog* self, QShowEvent* param1);
void KShortcutsDialog_ResizeEvent(KShortcutsDialog* self, QResizeEvent* param1);
void KShortcutsDialog_OnResizeEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseResizeEvent(KShortcutsDialog* self, QResizeEvent* param1);
void KShortcutsDialog_ContextMenuEvent(KShortcutsDialog* self, QContextMenuEvent* param1);
void KShortcutsDialog_OnContextMenuEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseContextMenuEvent(KShortcutsDialog* self, QContextMenuEvent* param1);
bool KShortcutsDialog_EventFilter(KShortcutsDialog* self, QObject* param1, QEvent* param2);
void KShortcutsDialog_OnEventFilter(KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseEventFilter(KShortcutsDialog* self, QObject* param1, QEvent* param2);
int KShortcutsDialog_DevType(const KShortcutsDialog* self);
void KShortcutsDialog_OnDevType(const KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseDevType(const KShortcutsDialog* self);
int KShortcutsDialog_HeightForWidth(const KShortcutsDialog* self, int param1);
void KShortcutsDialog_OnHeightForWidth(const KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseHeightForWidth(const KShortcutsDialog* self, int param1);
bool KShortcutsDialog_HasHeightForWidth(const KShortcutsDialog* self);
void KShortcutsDialog_OnHasHeightForWidth(const KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseHasHeightForWidth(const KShortcutsDialog* self);
QPaintEngine* KShortcutsDialog_PaintEngine(const KShortcutsDialog* self);
void KShortcutsDialog_OnPaintEngine(const KShortcutsDialog* self, intptr_t slot);
QPaintEngine* KShortcutsDialog_QBasePaintEngine(const KShortcutsDialog* self);
bool KShortcutsDialog_Event(KShortcutsDialog* self, QEvent* event);
void KShortcutsDialog_OnEvent(KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseEvent(KShortcutsDialog* self, QEvent* event);
void KShortcutsDialog_MousePressEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_OnMousePressEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseMousePressEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_MouseReleaseEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_OnMouseReleaseEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseMouseReleaseEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_MouseDoubleClickEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_OnMouseDoubleClickEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseMouseDoubleClickEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_MouseMoveEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_OnMouseMoveEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseMouseMoveEvent(KShortcutsDialog* self, QMouseEvent* event);
void KShortcutsDialog_WheelEvent(KShortcutsDialog* self, QWheelEvent* event);
void KShortcutsDialog_OnWheelEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseWheelEvent(KShortcutsDialog* self, QWheelEvent* event);
void KShortcutsDialog_KeyReleaseEvent(KShortcutsDialog* self, QKeyEvent* event);
void KShortcutsDialog_OnKeyReleaseEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseKeyReleaseEvent(KShortcutsDialog* self, QKeyEvent* event);
void KShortcutsDialog_FocusInEvent(KShortcutsDialog* self, QFocusEvent* event);
void KShortcutsDialog_OnFocusInEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseFocusInEvent(KShortcutsDialog* self, QFocusEvent* event);
void KShortcutsDialog_FocusOutEvent(KShortcutsDialog* self, QFocusEvent* event);
void KShortcutsDialog_OnFocusOutEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseFocusOutEvent(KShortcutsDialog* self, QFocusEvent* event);
void KShortcutsDialog_EnterEvent(KShortcutsDialog* self, QEnterEvent* event);
void KShortcutsDialog_OnEnterEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseEnterEvent(KShortcutsDialog* self, QEnterEvent* event);
void KShortcutsDialog_LeaveEvent(KShortcutsDialog* self, QEvent* event);
void KShortcutsDialog_OnLeaveEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseLeaveEvent(KShortcutsDialog* self, QEvent* event);
void KShortcutsDialog_PaintEvent(KShortcutsDialog* self, QPaintEvent* event);
void KShortcutsDialog_OnPaintEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBasePaintEvent(KShortcutsDialog* self, QPaintEvent* event);
void KShortcutsDialog_MoveEvent(KShortcutsDialog* self, QMoveEvent* event);
void KShortcutsDialog_OnMoveEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseMoveEvent(KShortcutsDialog* self, QMoveEvent* event);
void KShortcutsDialog_TabletEvent(KShortcutsDialog* self, QTabletEvent* event);
void KShortcutsDialog_OnTabletEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseTabletEvent(KShortcutsDialog* self, QTabletEvent* event);
void KShortcutsDialog_ActionEvent(KShortcutsDialog* self, QActionEvent* event);
void KShortcutsDialog_OnActionEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseActionEvent(KShortcutsDialog* self, QActionEvent* event);
void KShortcutsDialog_DragEnterEvent(KShortcutsDialog* self, QDragEnterEvent* event);
void KShortcutsDialog_OnDragEnterEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDragEnterEvent(KShortcutsDialog* self, QDragEnterEvent* event);
void KShortcutsDialog_DragMoveEvent(KShortcutsDialog* self, QDragMoveEvent* event);
void KShortcutsDialog_OnDragMoveEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDragMoveEvent(KShortcutsDialog* self, QDragMoveEvent* event);
void KShortcutsDialog_DragLeaveEvent(KShortcutsDialog* self, QDragLeaveEvent* event);
void KShortcutsDialog_OnDragLeaveEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDragLeaveEvent(KShortcutsDialog* self, QDragLeaveEvent* event);
void KShortcutsDialog_DropEvent(KShortcutsDialog* self, QDropEvent* event);
void KShortcutsDialog_OnDropEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDropEvent(KShortcutsDialog* self, QDropEvent* event);
void KShortcutsDialog_HideEvent(KShortcutsDialog* self, QHideEvent* event);
void KShortcutsDialog_OnHideEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseHideEvent(KShortcutsDialog* self, QHideEvent* event);
bool KShortcutsDialog_NativeEvent(KShortcutsDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KShortcutsDialog_OnNativeEvent(KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseNativeEvent(KShortcutsDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KShortcutsDialog_ChangeEvent(KShortcutsDialog* self, QEvent* param1);
void KShortcutsDialog_OnChangeEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseChangeEvent(KShortcutsDialog* self, QEvent* param1);
int KShortcutsDialog_Metric(const KShortcutsDialog* self, int param1);
void KShortcutsDialog_OnMetric(const KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseMetric(const KShortcutsDialog* self, int param1);
void KShortcutsDialog_InitPainter(const KShortcutsDialog* self, QPainter* painter);
void KShortcutsDialog_OnInitPainter(const KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseInitPainter(const KShortcutsDialog* self, QPainter* painter);
QPaintDevice* KShortcutsDialog_Redirected(const KShortcutsDialog* self, QPoint* offset);
void KShortcutsDialog_OnRedirected(const KShortcutsDialog* self, intptr_t slot);
QPaintDevice* KShortcutsDialog_QBaseRedirected(const KShortcutsDialog* self, QPoint* offset);
QPainter* KShortcutsDialog_SharedPainter(const KShortcutsDialog* self);
void KShortcutsDialog_OnSharedPainter(const KShortcutsDialog* self, intptr_t slot);
QPainter* KShortcutsDialog_QBaseSharedPainter(const KShortcutsDialog* self);
void KShortcutsDialog_InputMethodEvent(KShortcutsDialog* self, QInputMethodEvent* param1);
void KShortcutsDialog_OnInputMethodEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseInputMethodEvent(KShortcutsDialog* self, QInputMethodEvent* param1);
QVariant* KShortcutsDialog_InputMethodQuery(const KShortcutsDialog* self, int param1);
void KShortcutsDialog_OnInputMethodQuery(const KShortcutsDialog* self, intptr_t slot);
QVariant* KShortcutsDialog_QBaseInputMethodQuery(const KShortcutsDialog* self, int param1);
bool KShortcutsDialog_FocusNextPrevChild(KShortcutsDialog* self, bool next);
void KShortcutsDialog_OnFocusNextPrevChild(KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseFocusNextPrevChild(KShortcutsDialog* self, bool next);
void KShortcutsDialog_TimerEvent(KShortcutsDialog* self, QTimerEvent* event);
void KShortcutsDialog_OnTimerEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseTimerEvent(KShortcutsDialog* self, QTimerEvent* event);
void KShortcutsDialog_ChildEvent(KShortcutsDialog* self, QChildEvent* event);
void KShortcutsDialog_OnChildEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseChildEvent(KShortcutsDialog* self, QChildEvent* event);
void KShortcutsDialog_CustomEvent(KShortcutsDialog* self, QEvent* event);
void KShortcutsDialog_OnCustomEvent(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseCustomEvent(KShortcutsDialog* self, QEvent* event);
void KShortcutsDialog_ConnectNotify(KShortcutsDialog* self, const QMetaMethod* signal);
void KShortcutsDialog_OnConnectNotify(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseConnectNotify(KShortcutsDialog* self, const QMetaMethod* signal);
void KShortcutsDialog_DisconnectNotify(KShortcutsDialog* self, const QMetaMethod* signal);
void KShortcutsDialog_OnDisconnectNotify(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDisconnectNotify(KShortcutsDialog* self, const QMetaMethod* signal);
void KShortcutsDialog_AdjustPosition(KShortcutsDialog* self, QWidget* param1);
void KShortcutsDialog_OnAdjustPosition(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseAdjustPosition(KShortcutsDialog* self, QWidget* param1);
void KShortcutsDialog_UpdateMicroFocus(KShortcutsDialog* self);
void KShortcutsDialog_OnUpdateMicroFocus(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseUpdateMicroFocus(KShortcutsDialog* self);
void KShortcutsDialog_Create(KShortcutsDialog* self);
void KShortcutsDialog_OnCreate(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseCreate(KShortcutsDialog* self);
void KShortcutsDialog_Destroy(KShortcutsDialog* self);
void KShortcutsDialog_OnDestroy(KShortcutsDialog* self, intptr_t slot);
void KShortcutsDialog_QBaseDestroy(KShortcutsDialog* self);
bool KShortcutsDialog_FocusNextChild(KShortcutsDialog* self);
void KShortcutsDialog_OnFocusNextChild(KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseFocusNextChild(KShortcutsDialog* self);
bool KShortcutsDialog_FocusPreviousChild(KShortcutsDialog* self);
void KShortcutsDialog_OnFocusPreviousChild(KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseFocusPreviousChild(KShortcutsDialog* self);
QObject* KShortcutsDialog_Sender(const KShortcutsDialog* self);
void KShortcutsDialog_OnSender(const KShortcutsDialog* self, intptr_t slot);
QObject* KShortcutsDialog_QBaseSender(const KShortcutsDialog* self);
int KShortcutsDialog_SenderSignalIndex(const KShortcutsDialog* self);
void KShortcutsDialog_OnSenderSignalIndex(const KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseSenderSignalIndex(const KShortcutsDialog* self);
int KShortcutsDialog_Receivers(const KShortcutsDialog* self, const char* signal);
void KShortcutsDialog_OnReceivers(const KShortcutsDialog* self, intptr_t slot);
int KShortcutsDialog_QBaseReceivers(const KShortcutsDialog* self, const char* signal);
bool KShortcutsDialog_IsSignalConnected(const KShortcutsDialog* self, const QMetaMethod* signal);
void KShortcutsDialog_OnIsSignalConnected(const KShortcutsDialog* self, intptr_t slot);
bool KShortcutsDialog_QBaseIsSignalConnected(const KShortcutsDialog* self, const QMetaMethod* signal);
double KShortcutsDialog_GetDecodedMetricF(const KShortcutsDialog* self, int metricA, int metricB);
void KShortcutsDialog_OnGetDecodedMetricF(const KShortcutsDialog* self, intptr_t slot);
double KShortcutsDialog_QBaseGetDecodedMetricF(const KShortcutsDialog* self, int metricA, int metricB);
void KShortcutsDialog_Delete(KShortcutsDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
