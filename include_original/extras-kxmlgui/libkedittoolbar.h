#pragma once
#ifndef SRC_EXTRAS_KXMLGUIC_LIBKEDITTOOLBAR_H
#define SRC_EXTRAS_KXMLGUIC_LIBKEDITTOOLBAR_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KActionCollection KActionCollection;
typedef struct KEditToolBar KEditToolBar;
typedef struct KXMLGUIFactory KXMLGUIFactory;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KEditToolBar* KEditToolBar_new(KActionCollection* collection);
KEditToolBar* KEditToolBar_new2(KXMLGUIFactory* factory);
KEditToolBar* KEditToolBar_new3(KActionCollection* collection, QWidget* parent);
KEditToolBar* KEditToolBar_new4(KXMLGUIFactory* factory, QWidget* parent);
QMetaObject* KEditToolBar_MetaObject(const KEditToolBar* self);
void* KEditToolBar_Metacast(KEditToolBar* self, const char* param1);
int KEditToolBar_Metacall(KEditToolBar* self, int param1, int param2, void** param3);
libqt_string KEditToolBar_Tr(const char* s);
void KEditToolBar_SetDefaultToolBar(KEditToolBar* self, const libqt_string toolBarName);
void KEditToolBar_SetResourceFile(KEditToolBar* self, const libqt_string file);
void KEditToolBar_SetGlobalDefaultToolBar(const libqt_string toolBarName);
void KEditToolBar_NewToolBarConfig(KEditToolBar* self);
void KEditToolBar_Connect_NewToolBarConfig(KEditToolBar* self, intptr_t slot);
void KEditToolBar_ShowEvent(KEditToolBar* self, QShowEvent* event);
void KEditToolBar_HideEvent(KEditToolBar* self, QHideEvent* event);
libqt_string KEditToolBar_Tr2(const char* s, const char* c);
libqt_string KEditToolBar_Tr3(const char* s, const char* c, int n);
void KEditToolBar_SetResourceFile2(KEditToolBar* self, const libqt_string file, bool global);
void KEditToolBar_OnMetacall(KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseMetacall(KEditToolBar* self, int param1, int param2, void** param3);
void KEditToolBar_OnShowEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseShowEvent(KEditToolBar* self, QShowEvent* event);
void KEditToolBar_OnHideEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseHideEvent(KEditToolBar* self, QHideEvent* event);
void KEditToolBar_SetVisible(KEditToolBar* self, bool visible);
void KEditToolBar_OnSetVisible(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseSetVisible(KEditToolBar* self, bool visible);
QSize* KEditToolBar_SizeHint(const KEditToolBar* self);
void KEditToolBar_OnSizeHint(const KEditToolBar* self, intptr_t slot);
QSize* KEditToolBar_QBaseSizeHint(const KEditToolBar* self);
QSize* KEditToolBar_MinimumSizeHint(const KEditToolBar* self);
void KEditToolBar_OnMinimumSizeHint(const KEditToolBar* self, intptr_t slot);
QSize* KEditToolBar_QBaseMinimumSizeHint(const KEditToolBar* self);
void KEditToolBar_Open(KEditToolBar* self);
void KEditToolBar_OnOpen(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseOpen(KEditToolBar* self);
int KEditToolBar_Exec(KEditToolBar* self);
void KEditToolBar_OnExec(KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseExec(KEditToolBar* self);
void KEditToolBar_Done(KEditToolBar* self, int param1);
void KEditToolBar_OnDone(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDone(KEditToolBar* self, int param1);
void KEditToolBar_Accept(KEditToolBar* self);
void KEditToolBar_OnAccept(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseAccept(KEditToolBar* self);
void KEditToolBar_Reject(KEditToolBar* self);
void KEditToolBar_OnReject(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseReject(KEditToolBar* self);
void KEditToolBar_KeyPressEvent(KEditToolBar* self, QKeyEvent* param1);
void KEditToolBar_OnKeyPressEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseKeyPressEvent(KEditToolBar* self, QKeyEvent* param1);
void KEditToolBar_CloseEvent(KEditToolBar* self, QCloseEvent* param1);
void KEditToolBar_OnCloseEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseCloseEvent(KEditToolBar* self, QCloseEvent* param1);
void KEditToolBar_ResizeEvent(KEditToolBar* self, QResizeEvent* param1);
void KEditToolBar_OnResizeEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseResizeEvent(KEditToolBar* self, QResizeEvent* param1);
void KEditToolBar_ContextMenuEvent(KEditToolBar* self, QContextMenuEvent* param1);
void KEditToolBar_OnContextMenuEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseContextMenuEvent(KEditToolBar* self, QContextMenuEvent* param1);
bool KEditToolBar_EventFilter(KEditToolBar* self, QObject* param1, QEvent* param2);
void KEditToolBar_OnEventFilter(KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseEventFilter(KEditToolBar* self, QObject* param1, QEvent* param2);
int KEditToolBar_DevType(const KEditToolBar* self);
void KEditToolBar_OnDevType(const KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseDevType(const KEditToolBar* self);
int KEditToolBar_HeightForWidth(const KEditToolBar* self, int param1);
void KEditToolBar_OnHeightForWidth(const KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseHeightForWidth(const KEditToolBar* self, int param1);
bool KEditToolBar_HasHeightForWidth(const KEditToolBar* self);
void KEditToolBar_OnHasHeightForWidth(const KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseHasHeightForWidth(const KEditToolBar* self);
QPaintEngine* KEditToolBar_PaintEngine(const KEditToolBar* self);
void KEditToolBar_OnPaintEngine(const KEditToolBar* self, intptr_t slot);
QPaintEngine* KEditToolBar_QBasePaintEngine(const KEditToolBar* self);
bool KEditToolBar_Event(KEditToolBar* self, QEvent* event);
void KEditToolBar_OnEvent(KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseEvent(KEditToolBar* self, QEvent* event);
void KEditToolBar_MousePressEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_OnMousePressEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseMousePressEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_MouseReleaseEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_OnMouseReleaseEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseMouseReleaseEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_MouseDoubleClickEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_OnMouseDoubleClickEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseMouseDoubleClickEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_MouseMoveEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_OnMouseMoveEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseMouseMoveEvent(KEditToolBar* self, QMouseEvent* event);
void KEditToolBar_WheelEvent(KEditToolBar* self, QWheelEvent* event);
void KEditToolBar_OnWheelEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseWheelEvent(KEditToolBar* self, QWheelEvent* event);
void KEditToolBar_KeyReleaseEvent(KEditToolBar* self, QKeyEvent* event);
void KEditToolBar_OnKeyReleaseEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseKeyReleaseEvent(KEditToolBar* self, QKeyEvent* event);
void KEditToolBar_FocusInEvent(KEditToolBar* self, QFocusEvent* event);
void KEditToolBar_OnFocusInEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseFocusInEvent(KEditToolBar* self, QFocusEvent* event);
void KEditToolBar_FocusOutEvent(KEditToolBar* self, QFocusEvent* event);
void KEditToolBar_OnFocusOutEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseFocusOutEvent(KEditToolBar* self, QFocusEvent* event);
void KEditToolBar_EnterEvent(KEditToolBar* self, QEnterEvent* event);
void KEditToolBar_OnEnterEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseEnterEvent(KEditToolBar* self, QEnterEvent* event);
void KEditToolBar_LeaveEvent(KEditToolBar* self, QEvent* event);
void KEditToolBar_OnLeaveEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseLeaveEvent(KEditToolBar* self, QEvent* event);
void KEditToolBar_PaintEvent(KEditToolBar* self, QPaintEvent* event);
void KEditToolBar_OnPaintEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBasePaintEvent(KEditToolBar* self, QPaintEvent* event);
void KEditToolBar_MoveEvent(KEditToolBar* self, QMoveEvent* event);
void KEditToolBar_OnMoveEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseMoveEvent(KEditToolBar* self, QMoveEvent* event);
void KEditToolBar_TabletEvent(KEditToolBar* self, QTabletEvent* event);
void KEditToolBar_OnTabletEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseTabletEvent(KEditToolBar* self, QTabletEvent* event);
void KEditToolBar_ActionEvent(KEditToolBar* self, QActionEvent* event);
void KEditToolBar_OnActionEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseActionEvent(KEditToolBar* self, QActionEvent* event);
void KEditToolBar_DragEnterEvent(KEditToolBar* self, QDragEnterEvent* event);
void KEditToolBar_OnDragEnterEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDragEnterEvent(KEditToolBar* self, QDragEnterEvent* event);
void KEditToolBar_DragMoveEvent(KEditToolBar* self, QDragMoveEvent* event);
void KEditToolBar_OnDragMoveEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDragMoveEvent(KEditToolBar* self, QDragMoveEvent* event);
void KEditToolBar_DragLeaveEvent(KEditToolBar* self, QDragLeaveEvent* event);
void KEditToolBar_OnDragLeaveEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDragLeaveEvent(KEditToolBar* self, QDragLeaveEvent* event);
void KEditToolBar_DropEvent(KEditToolBar* self, QDropEvent* event);
void KEditToolBar_OnDropEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDropEvent(KEditToolBar* self, QDropEvent* event);
bool KEditToolBar_NativeEvent(KEditToolBar* self, const libqt_string eventType, void* message, intptr_t* result);
void KEditToolBar_OnNativeEvent(KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseNativeEvent(KEditToolBar* self, const libqt_string eventType, void* message, intptr_t* result);
void KEditToolBar_ChangeEvent(KEditToolBar* self, QEvent* param1);
void KEditToolBar_OnChangeEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseChangeEvent(KEditToolBar* self, QEvent* param1);
int KEditToolBar_Metric(const KEditToolBar* self, int param1);
void KEditToolBar_OnMetric(const KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseMetric(const KEditToolBar* self, int param1);
void KEditToolBar_InitPainter(const KEditToolBar* self, QPainter* painter);
void KEditToolBar_OnInitPainter(const KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseInitPainter(const KEditToolBar* self, QPainter* painter);
QPaintDevice* KEditToolBar_Redirected(const KEditToolBar* self, QPoint* offset);
void KEditToolBar_OnRedirected(const KEditToolBar* self, intptr_t slot);
QPaintDevice* KEditToolBar_QBaseRedirected(const KEditToolBar* self, QPoint* offset);
QPainter* KEditToolBar_SharedPainter(const KEditToolBar* self);
void KEditToolBar_OnSharedPainter(const KEditToolBar* self, intptr_t slot);
QPainter* KEditToolBar_QBaseSharedPainter(const KEditToolBar* self);
void KEditToolBar_InputMethodEvent(KEditToolBar* self, QInputMethodEvent* param1);
void KEditToolBar_OnInputMethodEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseInputMethodEvent(KEditToolBar* self, QInputMethodEvent* param1);
QVariant* KEditToolBar_InputMethodQuery(const KEditToolBar* self, int param1);
void KEditToolBar_OnInputMethodQuery(const KEditToolBar* self, intptr_t slot);
QVariant* KEditToolBar_QBaseInputMethodQuery(const KEditToolBar* self, int param1);
bool KEditToolBar_FocusNextPrevChild(KEditToolBar* self, bool next);
void KEditToolBar_OnFocusNextPrevChild(KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseFocusNextPrevChild(KEditToolBar* self, bool next);
void KEditToolBar_TimerEvent(KEditToolBar* self, QTimerEvent* event);
void KEditToolBar_OnTimerEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseTimerEvent(KEditToolBar* self, QTimerEvent* event);
void KEditToolBar_ChildEvent(KEditToolBar* self, QChildEvent* event);
void KEditToolBar_OnChildEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseChildEvent(KEditToolBar* self, QChildEvent* event);
void KEditToolBar_CustomEvent(KEditToolBar* self, QEvent* event);
void KEditToolBar_OnCustomEvent(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseCustomEvent(KEditToolBar* self, QEvent* event);
void KEditToolBar_ConnectNotify(KEditToolBar* self, const QMetaMethod* signal);
void KEditToolBar_OnConnectNotify(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseConnectNotify(KEditToolBar* self, const QMetaMethod* signal);
void KEditToolBar_DisconnectNotify(KEditToolBar* self, const QMetaMethod* signal);
void KEditToolBar_OnDisconnectNotify(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDisconnectNotify(KEditToolBar* self, const QMetaMethod* signal);
void KEditToolBar_AdjustPosition(KEditToolBar* self, QWidget* param1);
void KEditToolBar_OnAdjustPosition(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseAdjustPosition(KEditToolBar* self, QWidget* param1);
void KEditToolBar_UpdateMicroFocus(KEditToolBar* self);
void KEditToolBar_OnUpdateMicroFocus(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseUpdateMicroFocus(KEditToolBar* self);
void KEditToolBar_Create(KEditToolBar* self);
void KEditToolBar_OnCreate(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseCreate(KEditToolBar* self);
void KEditToolBar_Destroy(KEditToolBar* self);
void KEditToolBar_OnDestroy(KEditToolBar* self, intptr_t slot);
void KEditToolBar_QBaseDestroy(KEditToolBar* self);
bool KEditToolBar_FocusNextChild(KEditToolBar* self);
void KEditToolBar_OnFocusNextChild(KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseFocusNextChild(KEditToolBar* self);
bool KEditToolBar_FocusPreviousChild(KEditToolBar* self);
void KEditToolBar_OnFocusPreviousChild(KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseFocusPreviousChild(KEditToolBar* self);
QObject* KEditToolBar_Sender(const KEditToolBar* self);
void KEditToolBar_OnSender(const KEditToolBar* self, intptr_t slot);
QObject* KEditToolBar_QBaseSender(const KEditToolBar* self);
int KEditToolBar_SenderSignalIndex(const KEditToolBar* self);
void KEditToolBar_OnSenderSignalIndex(const KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseSenderSignalIndex(const KEditToolBar* self);
int KEditToolBar_Receivers(const KEditToolBar* self, const char* signal);
void KEditToolBar_OnReceivers(const KEditToolBar* self, intptr_t slot);
int KEditToolBar_QBaseReceivers(const KEditToolBar* self, const char* signal);
bool KEditToolBar_IsSignalConnected(const KEditToolBar* self, const QMetaMethod* signal);
void KEditToolBar_OnIsSignalConnected(const KEditToolBar* self, intptr_t slot);
bool KEditToolBar_QBaseIsSignalConnected(const KEditToolBar* self, const QMetaMethod* signal);
double KEditToolBar_GetDecodedMetricF(const KEditToolBar* self, int metricA, int metricB);
void KEditToolBar_OnGetDecodedMetricF(const KEditToolBar* self, intptr_t slot);
double KEditToolBar_QBaseGetDecodedMetricF(const KEditToolBar* self, int metricA, int metricB);
void KEditToolBar_Delete(KEditToolBar* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
