#pragma once
#ifndef SRC_RESTRICTED_EXTRAS_QSCINTILLAC_LIBQSCISCINTILLA_H
#define SRC_RESTRICTED_EXTRAS_QSCINTILLAC_LIBQSCISCINTILLA_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QColor QColor;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QIODevice QIODevice;
typedef struct QImage QImage;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMimeData QMimeData;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QsciCommandSet QsciCommandSet;
typedef struct QsciDocument QsciDocument;
typedef struct QsciLexer QsciLexer;
typedef struct QsciScintilla QsciScintilla;
typedef struct QsciScintillaBase QsciScintillaBase;
typedef struct QsciStyle QsciStyle;
typedef struct QsciStyledText QsciStyledText;
#endif

QsciScintilla* QsciScintilla_new(QWidget* parent);
QsciScintilla* QsciScintilla_new2();
QMetaObject* QsciScintilla_MetaObject(const QsciScintilla* self);
void* QsciScintilla_Metacast(QsciScintilla* self, const char* param1);
int QsciScintilla_Metacall(QsciScintilla* self, int param1, int param2, void** param3);
libqt_string QsciScintilla_Tr(const char* s);
libqt_list /* of libqt_string */ QsciScintilla_ApiContext(QsciScintilla* self, int pos, int* context_start, int* last_word_start);
void QsciScintilla_Annotate(QsciScintilla* self, int line, const libqt_string text, int style);
void QsciScintilla_Annotate2(QsciScintilla* self, int line, const libqt_string text, const QsciStyle* style);
void QsciScintilla_Annotate3(QsciScintilla* self, int line, const QsciStyledText* text);
libqt_string QsciScintilla_Annotation(const QsciScintilla* self, int line);
int QsciScintilla_AnnotationDisplay(const QsciScintilla* self);
void QsciScintilla_ClearAnnotations(QsciScintilla* self);
bool QsciScintilla_AutoCompletionCaseSensitivity(const QsciScintilla* self);
bool QsciScintilla_AutoCompletionFillupsEnabled(const QsciScintilla* self);
bool QsciScintilla_AutoCompletionReplaceWord(const QsciScintilla* self);
bool QsciScintilla_AutoCompletionShowSingle(const QsciScintilla* self);
int QsciScintilla_AutoCompletionSource(const QsciScintilla* self);
int QsciScintilla_AutoCompletionThreshold(const QsciScintilla* self);
int QsciScintilla_AutoCompletionUseSingle(const QsciScintilla* self);
bool QsciScintilla_AutoIndent(const QsciScintilla* self);
bool QsciScintilla_BackspaceUnindents(const QsciScintilla* self);
void QsciScintilla_BeginUndoAction(QsciScintilla* self);
int QsciScintilla_BraceMatching(const QsciScintilla* self);
libqt_string QsciScintilla_Bytes(const QsciScintilla* self, int start, int end);
int QsciScintilla_CallTipsPosition(const QsciScintilla* self);
int QsciScintilla_CallTipsStyle(const QsciScintilla* self);
int QsciScintilla_CallTipsVisible(const QsciScintilla* self);
void QsciScintilla_CancelFind(QsciScintilla* self);
void QsciScintilla_CancelList(QsciScintilla* self);
bool QsciScintilla_CaseSensitive(const QsciScintilla* self);
void QsciScintilla_ClearFolds(QsciScintilla* self);
void QsciScintilla_ClearIndicatorRange(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo, int indicatorNumber);
void QsciScintilla_ClearRegisteredImages(QsciScintilla* self);
QColor* QsciScintilla_Color(const QsciScintilla* self);
libqt_list /* of int */ QsciScintilla_ContractedFolds(const QsciScintilla* self);
void QsciScintilla_ConvertEols(QsciScintilla* self, int mode);
QMenu* QsciScintilla_CreateStandardContextMenu(QsciScintilla* self);
QsciDocument* QsciScintilla_Document(const QsciScintilla* self);
void QsciScintilla_EndUndoAction(QsciScintilla* self);
QColor* QsciScintilla_EdgeColor(const QsciScintilla* self);
int QsciScintilla_EdgeColumn(const QsciScintilla* self);
int QsciScintilla_EdgeMode(const QsciScintilla* self);
void QsciScintilla_SetFont(QsciScintilla* self, const QFont* f);
int QsciScintilla_EolMode(const QsciScintilla* self);
bool QsciScintilla_EolVisibility(const QsciScintilla* self);
int QsciScintilla_ExtraAscent(const QsciScintilla* self);
int QsciScintilla_ExtraDescent(const QsciScintilla* self);
void QsciScintilla_FillIndicatorRange(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo, int indicatorNumber);
bool QsciScintilla_FindFirst(QsciScintilla* self, const libqt_string expr, bool re, bool cs, bool wo, bool wrap, bool forward, int line, int index, bool show, bool posix, bool cxx11);
bool QsciScintilla_FindFirstInSelection(QsciScintilla* self, const libqt_string expr, bool re, bool cs, bool wo, bool forward, bool show, bool posix, bool cxx11);
bool QsciScintilla_FindNext(QsciScintilla* self);
bool QsciScintilla_FindMatchingBrace(QsciScintilla* self, long* brace, long* other, int mode);
int QsciScintilla_FirstVisibleLine(const QsciScintilla* self);
int QsciScintilla_Folding(const QsciScintilla* self);
void QsciScintilla_GetCursorPosition(const QsciScintilla* self, int* line, int* index);
void QsciScintilla_GetSelection(const QsciScintilla* self, int* lineFrom, int* indexFrom, int* lineTo, int* indexTo);
bool QsciScintilla_HasSelectedText(const QsciScintilla* self);
int QsciScintilla_Indentation(const QsciScintilla* self, int line);
bool QsciScintilla_IndentationGuides(const QsciScintilla* self);
bool QsciScintilla_IndentationsUseTabs(const QsciScintilla* self);
int QsciScintilla_IndentationWidth(const QsciScintilla* self);
int QsciScintilla_IndicatorDefine(QsciScintilla* self, int style);
bool QsciScintilla_IndicatorDrawUnder(const QsciScintilla* self, int indicatorNumber);
bool QsciScintilla_IsCallTipActive(const QsciScintilla* self);
bool QsciScintilla_IsListActive(const QsciScintilla* self);
bool QsciScintilla_IsModified(const QsciScintilla* self);
bool QsciScintilla_IsReadOnly(const QsciScintilla* self);
bool QsciScintilla_IsRedoAvailable(const QsciScintilla* self);
bool QsciScintilla_IsUndoAvailable(const QsciScintilla* self);
bool QsciScintilla_IsUtf8(const QsciScintilla* self);
bool QsciScintilla_IsWordCharacter(const QsciScintilla* self, char ch);
int QsciScintilla_LineAt(const QsciScintilla* self, const QPoint* point);
void QsciScintilla_LineIndexFromPosition(const QsciScintilla* self, int position, int* line, int* index);
int QsciScintilla_LineLength(const QsciScintilla* self, int line);
int QsciScintilla_Lines(const QsciScintilla* self);
int QsciScintilla_Length(const QsciScintilla* self);
QsciLexer* QsciScintilla_Lexer(const QsciScintilla* self);
QColor* QsciScintilla_MarginBackgroundColor(const QsciScintilla* self, int margin);
bool QsciScintilla_MarginLineNumbers(const QsciScintilla* self, int margin);
int QsciScintilla_MarginMarkerMask(const QsciScintilla* self, int margin);
int QsciScintilla_MarginOptions(const QsciScintilla* self);
bool QsciScintilla_MarginSensitivity(const QsciScintilla* self, int margin);
int QsciScintilla_MarginType(const QsciScintilla* self, int margin);
int QsciScintilla_MarginWidth(const QsciScintilla* self, int margin);
int QsciScintilla_Margins(const QsciScintilla* self);
int QsciScintilla_MarkerDefine(QsciScintilla* self, int sym);
int QsciScintilla_MarkerDefine2(QsciScintilla* self, char ch);
int QsciScintilla_MarkerDefine3(QsciScintilla* self, const QPixmap* pm);
int QsciScintilla_MarkerDefine4(QsciScintilla* self, const QImage* im);
int QsciScintilla_MarkerAdd(QsciScintilla* self, int linenr, int markerNumber);
unsigned int QsciScintilla_MarkersAtLine(const QsciScintilla* self, int linenr);
void QsciScintilla_MarkerDelete(QsciScintilla* self, int linenr);
void QsciScintilla_MarkerDeleteAll(QsciScintilla* self);
void QsciScintilla_MarkerDeleteHandle(QsciScintilla* self, int mhandle);
int QsciScintilla_MarkerLine(const QsciScintilla* self, int mhandle);
int QsciScintilla_MarkerFindNext(const QsciScintilla* self, int linenr, unsigned int mask);
int QsciScintilla_MarkerFindPrevious(const QsciScintilla* self, int linenr, unsigned int mask);
bool QsciScintilla_OverwriteMode(const QsciScintilla* self);
QColor* QsciScintilla_Paper(const QsciScintilla* self);
int QsciScintilla_PositionFromLineIndex(const QsciScintilla* self, int line, int index);
bool QsciScintilla_Read(QsciScintilla* self, QIODevice* io);
void QsciScintilla_Recolor(QsciScintilla* self, int start, int end);
void QsciScintilla_RegisterImage(QsciScintilla* self, int id, const QPixmap* pm);
void QsciScintilla_RegisterImage2(QsciScintilla* self, int id, const QImage* im);
void QsciScintilla_Replace(QsciScintilla* self, const libqt_string replaceStr);
void QsciScintilla_ResetFoldMarginColors(QsciScintilla* self);
void QsciScintilla_ResetHotspotBackgroundColor(QsciScintilla* self);
void QsciScintilla_ResetHotspotForegroundColor(QsciScintilla* self);
int QsciScintilla_ScrollWidth(const QsciScintilla* self);
bool QsciScintilla_ScrollWidthTracking(const QsciScintilla* self);
void QsciScintilla_SetFoldMarginColors(QsciScintilla* self, const QColor* fore, const QColor* back);
void QsciScintilla_SetAnnotationDisplay(QsciScintilla* self, int display);
void QsciScintilla_SetAutoCompletionFillupsEnabled(QsciScintilla* self, bool enabled);
void QsciScintilla_SetAutoCompletionFillups(QsciScintilla* self, const char* fillups);
void QsciScintilla_SetAutoCompletionWordSeparators(QsciScintilla* self, const libqt_list /* of libqt_string */ separators);
void QsciScintilla_SetCallTipsBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetCallTipsForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetCallTipsHighlightColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetCallTipsPosition(QsciScintilla* self, int position);
void QsciScintilla_SetCallTipsStyle(QsciScintilla* self, int style);
void QsciScintilla_SetCallTipsVisible(QsciScintilla* self, int nr);
void QsciScintilla_SetContractedFolds(QsciScintilla* self, const libqt_list /* of int */ folds);
void QsciScintilla_SetDocument(QsciScintilla* self, const QsciDocument* document);
void QsciScintilla_AddEdgeColumn(QsciScintilla* self, int colnr, const QColor* col);
void QsciScintilla_ClearEdgeColumns(QsciScintilla* self);
void QsciScintilla_SetEdgeColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetEdgeColumn(QsciScintilla* self, int colnr);
void QsciScintilla_SetEdgeMode(QsciScintilla* self, int mode);
void QsciScintilla_SetFirstVisibleLine(QsciScintilla* self, int linenr);
void QsciScintilla_SetIndicatorDrawUnder(QsciScintilla* self, bool under);
void QsciScintilla_SetIndicatorForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetIndicatorHoverForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetIndicatorHoverStyle(QsciScintilla* self, int style);
void QsciScintilla_SetIndicatorOutlineColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMarginBackgroundColor(QsciScintilla* self, int margin, const QColor* col);
void QsciScintilla_SetMarginOptions(QsciScintilla* self, int options);
void QsciScintilla_SetMarginText(QsciScintilla* self, int line, const libqt_string text, int style);
void QsciScintilla_SetMarginText2(QsciScintilla* self, int line, const libqt_string text, const QsciStyle* style);
void QsciScintilla_SetMarginText3(QsciScintilla* self, int line, const QsciStyledText* text);
void QsciScintilla_SetMarginType(QsciScintilla* self, int margin, int typeVal);
void QsciScintilla_ClearMarginText(QsciScintilla* self);
void QsciScintilla_SetMargins(QsciScintilla* self, int margins);
void QsciScintilla_SetMarkerBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMarkerForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMatchedBraceBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMatchedBraceForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMatchedBraceIndicator(QsciScintilla* self, int indicatorNumber);
void QsciScintilla_ResetMatchedBraceIndicator(QsciScintilla* self);
void QsciScintilla_SetScrollWidth(QsciScintilla* self, int pixelWidth);
void QsciScintilla_SetScrollWidthTracking(QsciScintilla* self, bool enabled);
void QsciScintilla_SetTabDrawMode(QsciScintilla* self, int mode);
void QsciScintilla_SetUnmatchedBraceBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetUnmatchedBraceForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetUnmatchedBraceIndicator(QsciScintilla* self, int indicatorNumber);
void QsciScintilla_ResetUnmatchedBraceIndicator(QsciScintilla* self);
void QsciScintilla_SetWrapVisualFlags(QsciScintilla* self, int endFlag);
libqt_string QsciScintilla_SelectedText(const QsciScintilla* self);
bool QsciScintilla_SelectionToEol(const QsciScintilla* self);
void QsciScintilla_SetHotspotBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetHotspotForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetHotspotUnderline(QsciScintilla* self, bool enable);
void QsciScintilla_SetHotspotWrap(QsciScintilla* self, bool enable);
void QsciScintilla_SetSelectionToEol(QsciScintilla* self, bool filled);
void QsciScintilla_SetExtraAscent(QsciScintilla* self, int extra);
void QsciScintilla_SetExtraDescent(QsciScintilla* self, int extra);
void QsciScintilla_SetOverwriteMode(QsciScintilla* self, bool overwrite);
void QsciScintilla_SetWhitespaceBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetWhitespaceForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetWhitespaceSize(QsciScintilla* self, int size);
void QsciScintilla_SetWrapIndentMode(QsciScintilla* self, int mode);
void QsciScintilla_ShowUserList(QsciScintilla* self, int id, const libqt_list /* of libqt_string */ list);
QsciCommandSet* QsciScintilla_StandardCommands(const QsciScintilla* self);
int QsciScintilla_TabDrawMode(const QsciScintilla* self);
bool QsciScintilla_TabIndents(const QsciScintilla* self);
int QsciScintilla_TabWidth(const QsciScintilla* self);
libqt_string QsciScintilla_Text(const QsciScintilla* self);
libqt_string QsciScintilla_Text2(const QsciScintilla* self, int line);
libqt_string QsciScintilla_Text3(const QsciScintilla* self, int start, int end);
int QsciScintilla_TextHeight(const QsciScintilla* self, int linenr);
int QsciScintilla_WhitespaceSize(const QsciScintilla* self);
int QsciScintilla_WhitespaceVisibility(const QsciScintilla* self);
libqt_string QsciScintilla_WordAtLineIndex(const QsciScintilla* self, int line, int index);
libqt_string QsciScintilla_WordAtPoint(const QsciScintilla* self, const QPoint* point);
const char* QsciScintilla_WordCharacters(const QsciScintilla* self);
int QsciScintilla_WrapMode(const QsciScintilla* self);
int QsciScintilla_WrapIndentMode(const QsciScintilla* self);
bool QsciScintilla_Write(const QsciScintilla* self, QIODevice* io);
void QsciScintilla_Append(QsciScintilla* self, const libqt_string text);
void QsciScintilla_AutoCompleteFromAll(QsciScintilla* self);
void QsciScintilla_AutoCompleteFromAPIs(QsciScintilla* self);
void QsciScintilla_AutoCompleteFromDocument(QsciScintilla* self);
void QsciScintilla_CallTip(QsciScintilla* self);
void QsciScintilla_Clear(QsciScintilla* self);
void QsciScintilla_Copy(QsciScintilla* self);
void QsciScintilla_Cut(QsciScintilla* self);
void QsciScintilla_EnsureCursorVisible(QsciScintilla* self);
void QsciScintilla_EnsureLineVisible(QsciScintilla* self, int line);
void QsciScintilla_FoldAll(QsciScintilla* self, bool children);
void QsciScintilla_FoldLine(QsciScintilla* self, int line);
void QsciScintilla_Indent(QsciScintilla* self, int line);
void QsciScintilla_Insert(QsciScintilla* self, const libqt_string text);
void QsciScintilla_InsertAt(QsciScintilla* self, const libqt_string text, int line, int index);
void QsciScintilla_MoveToMatchingBrace(QsciScintilla* self);
void QsciScintilla_Paste(QsciScintilla* self);
void QsciScintilla_Redo(QsciScintilla* self);
void QsciScintilla_RemoveSelectedText(QsciScintilla* self);
void QsciScintilla_ReplaceSelectedText(QsciScintilla* self, const libqt_string text);
void QsciScintilla_ResetSelectionBackgroundColor(QsciScintilla* self);
void QsciScintilla_ResetSelectionForegroundColor(QsciScintilla* self);
void QsciScintilla_SelectAll(QsciScintilla* self, bool selectVal);
void QsciScintilla_SelectToMatchingBrace(QsciScintilla* self);
void QsciScintilla_SetAutoCompletionCaseSensitivity(QsciScintilla* self, bool cs);
void QsciScintilla_SetAutoCompletionReplaceWord(QsciScintilla* self, bool replace);
void QsciScintilla_SetAutoCompletionShowSingle(QsciScintilla* self, bool single);
void QsciScintilla_SetAutoCompletionSource(QsciScintilla* self, int source);
void QsciScintilla_SetAutoCompletionThreshold(QsciScintilla* self, int thresh);
void QsciScintilla_SetAutoCompletionUseSingle(QsciScintilla* self, int single);
void QsciScintilla_SetAutoIndent(QsciScintilla* self, bool autoindent);
void QsciScintilla_SetBraceMatching(QsciScintilla* self, int bm);
void QsciScintilla_SetBackspaceUnindents(QsciScintilla* self, bool unindent);
void QsciScintilla_SetCaretForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetCaretLineBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetCaretLineFrameWidth(QsciScintilla* self, int width);
void QsciScintilla_SetCaretLineVisible(QsciScintilla* self, bool enable);
void QsciScintilla_SetCaretWidth(QsciScintilla* self, int width);
void QsciScintilla_SetColor(QsciScintilla* self, const QColor* c);
void QsciScintilla_SetCursorPosition(QsciScintilla* self, int line, int index);
void QsciScintilla_SetEolMode(QsciScintilla* self, int mode);
void QsciScintilla_SetEolVisibility(QsciScintilla* self, bool visible);
void QsciScintilla_SetFolding(QsciScintilla* self, int fold, int margin);
void QsciScintilla_SetIndentation(QsciScintilla* self, int line, int indentation);
void QsciScintilla_SetIndentationGuides(QsciScintilla* self, bool enable);
void QsciScintilla_SetIndentationGuidesBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetIndentationGuidesForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetIndentationsUseTabs(QsciScintilla* self, bool tabs);
void QsciScintilla_SetIndentationWidth(QsciScintilla* self, int width);
void QsciScintilla_SetLexer(QsciScintilla* self, QsciLexer* lexer);
void QsciScintilla_SetMarginsBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMarginsFont(QsciScintilla* self, const QFont* f);
void QsciScintilla_SetMarginsForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetMarginLineNumbers(QsciScintilla* self, int margin, bool lnrs);
void QsciScintilla_SetMarginMarkerMask(QsciScintilla* self, int margin, int mask);
void QsciScintilla_SetMarginSensitivity(QsciScintilla* self, int margin, bool sens);
void QsciScintilla_SetMarginWidth(QsciScintilla* self, int margin, int width);
void QsciScintilla_SetMarginWidth2(QsciScintilla* self, int margin, const libqt_string s);
void QsciScintilla_SetModified(QsciScintilla* self, bool m);
void QsciScintilla_SetPaper(QsciScintilla* self, const QColor* c);
void QsciScintilla_SetReadOnly(QsciScintilla* self, bool ro);
void QsciScintilla_SetSelection(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo);
void QsciScintilla_SetSelectionBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetSelectionForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_SetTabIndents(QsciScintilla* self, bool indent);
void QsciScintilla_SetTabWidth(QsciScintilla* self, int width);
void QsciScintilla_SetText(QsciScintilla* self, const libqt_string text);
void QsciScintilla_SetUtf8(QsciScintilla* self, bool cp);
void QsciScintilla_SetWhitespaceVisibility(QsciScintilla* self, int mode);
void QsciScintilla_SetWrapMode(QsciScintilla* self, int mode);
void QsciScintilla_Undo(QsciScintilla* self);
void QsciScintilla_Unindent(QsciScintilla* self, int line);
void QsciScintilla_ZoomIn(QsciScintilla* self, int range);
void QsciScintilla_ZoomIn2(QsciScintilla* self);
void QsciScintilla_ZoomOut(QsciScintilla* self, int range);
void QsciScintilla_ZoomOut2(QsciScintilla* self);
void QsciScintilla_ZoomTo(QsciScintilla* self, int size);
void QsciScintilla_CursorPositionChanged(QsciScintilla* self, int line, int index);
void QsciScintilla_Connect_CursorPositionChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_CopyAvailable(QsciScintilla* self, bool yes);
void QsciScintilla_Connect_CopyAvailable(QsciScintilla* self, intptr_t slot);
void QsciScintilla_IndicatorClicked(QsciScintilla* self, int line, int index, int state);
void QsciScintilla_Connect_IndicatorClicked(QsciScintilla* self, intptr_t slot);
void QsciScintilla_IndicatorReleased(QsciScintilla* self, int line, int index, int state);
void QsciScintilla_Connect_IndicatorReleased(QsciScintilla* self, intptr_t slot);
void QsciScintilla_LinesChanged(QsciScintilla* self);
void QsciScintilla_Connect_LinesChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_MarginClicked(QsciScintilla* self, int margin, int line, int state);
void QsciScintilla_Connect_MarginClicked(QsciScintilla* self, intptr_t slot);
void QsciScintilla_MarginRightClicked(QsciScintilla* self, int margin, int line, int state);
void QsciScintilla_Connect_MarginRightClicked(QsciScintilla* self, intptr_t slot);
void QsciScintilla_ModificationAttempted(QsciScintilla* self);
void QsciScintilla_Connect_ModificationAttempted(QsciScintilla* self, intptr_t slot);
void QsciScintilla_ModificationChanged(QsciScintilla* self, bool m);
void QsciScintilla_Connect_ModificationChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_SelectionChanged(QsciScintilla* self);
void QsciScintilla_Connect_SelectionChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_TextChanged(QsciScintilla* self);
void QsciScintilla_Connect_TextChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_UserListActivated(QsciScintilla* self, int id, const libqt_string stringVal);
void QsciScintilla_Connect_UserListActivated(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_Event(QsciScintilla* self, QEvent* e);
void QsciScintilla_ChangeEvent(QsciScintilla* self, QEvent* e);
void QsciScintilla_ContextMenuEvent(QsciScintilla* self, QContextMenuEvent* e);
void QsciScintilla_WheelEvent(QsciScintilla* self, QWheelEvent* e);
libqt_string QsciScintilla_Tr2(const char* s, const char* c);
libqt_string QsciScintilla_Tr3(const char* s, const char* c, int n);
void QsciScintilla_ClearAnnotations1(QsciScintilla* self, int line);
int QsciScintilla_IndicatorDefine2(QsciScintilla* self, int style, int indicatorNumber);
int QsciScintilla_MarkerDefine22(QsciScintilla* self, int sym, int markerNumber);
int QsciScintilla_MarkerDefine23(QsciScintilla* self, char ch, int markerNumber);
int QsciScintilla_MarkerDefine24(QsciScintilla* self, const QPixmap* pm, int markerNumber);
int QsciScintilla_MarkerDefine25(QsciScintilla* self, const QImage* im, int markerNumber);
void QsciScintilla_MarkerDelete2(QsciScintilla* self, int linenr, int markerNumber);
void QsciScintilla_MarkerDeleteAll1(QsciScintilla* self, int markerNumber);
void QsciScintilla_SetIndicatorDrawUnder2(QsciScintilla* self, bool under, int indicatorNumber);
void QsciScintilla_SetIndicatorForegroundColor2(QsciScintilla* self, const QColor* col, int indicatorNumber);
void QsciScintilla_SetIndicatorHoverForegroundColor2(QsciScintilla* self, const QColor* col, int indicatorNumber);
void QsciScintilla_SetIndicatorHoverStyle2(QsciScintilla* self, int style, int indicatorNumber);
void QsciScintilla_SetIndicatorOutlineColor2(QsciScintilla* self, const QColor* col, int indicatorNumber);
void QsciScintilla_ClearMarginText1(QsciScintilla* self, int line);
void QsciScintilla_SetMarkerBackgroundColor2(QsciScintilla* self, const QColor* col, int markerNumber);
void QsciScintilla_SetMarkerForegroundColor2(QsciScintilla* self, const QColor* col, int markerNumber);
void QsciScintilla_SetWrapVisualFlags2(QsciScintilla* self, int endFlag, int startFlag);
void QsciScintilla_SetWrapVisualFlags3(QsciScintilla* self, int endFlag, int startFlag, int indent);
void QsciScintilla_OnMetacall(QsciScintilla* self, intptr_t slot);
int QsciScintilla_QBaseMetacall(QsciScintilla* self, int param1, int param2, void** param3);
void QsciScintilla_OnApiContext(QsciScintilla* self, intptr_t slot);
libqt_list /* of libqt_string */ QsciScintilla_QBaseApiContext(QsciScintilla* self, int pos, int* context_start, int* last_word_start);
void QsciScintilla_OnFindFirst(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseFindFirst(QsciScintilla* self, const libqt_string expr, bool re, bool cs, bool wo, bool wrap, bool forward, int line, int index, bool show, bool posix, bool cxx11);
void QsciScintilla_OnFindFirstInSelection(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseFindFirstInSelection(QsciScintilla* self, const libqt_string expr, bool re, bool cs, bool wo, bool forward, bool show, bool posix, bool cxx11);
void QsciScintilla_OnFindNext(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseFindNext(QsciScintilla* self);
void QsciScintilla_OnRecolor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseRecolor(QsciScintilla* self, int start, int end);
void QsciScintilla_OnReplace(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseReplace(QsciScintilla* self, const libqt_string replaceStr);
void QsciScintilla_OnAppend(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseAppend(QsciScintilla* self, const libqt_string text);
void QsciScintilla_OnAutoCompleteFromAll(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseAutoCompleteFromAll(QsciScintilla* self);
void QsciScintilla_OnAutoCompleteFromAPIs(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseAutoCompleteFromAPIs(QsciScintilla* self);
void QsciScintilla_OnAutoCompleteFromDocument(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseAutoCompleteFromDocument(QsciScintilla* self);
void QsciScintilla_OnCallTip(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseCallTip(QsciScintilla* self);
void QsciScintilla_OnClear(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseClear(QsciScintilla* self);
void QsciScintilla_OnCopy(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseCopy(QsciScintilla* self);
void QsciScintilla_OnCut(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseCut(QsciScintilla* self);
void QsciScintilla_OnEnsureCursorVisible(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseEnsureCursorVisible(QsciScintilla* self);
void QsciScintilla_OnEnsureLineVisible(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseEnsureLineVisible(QsciScintilla* self, int line);
void QsciScintilla_OnFoldAll(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseFoldAll(QsciScintilla* self, bool children);
void QsciScintilla_OnFoldLine(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseFoldLine(QsciScintilla* self, int line);
void QsciScintilla_OnIndent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseIndent(QsciScintilla* self, int line);
void QsciScintilla_OnInsert(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseInsert(QsciScintilla* self, const libqt_string text);
void QsciScintilla_OnInsertAt(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseInsertAt(QsciScintilla* self, const libqt_string text, int line, int index);
void QsciScintilla_OnMoveToMatchingBrace(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseMoveToMatchingBrace(QsciScintilla* self);
void QsciScintilla_OnPaste(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBasePaste(QsciScintilla* self);
void QsciScintilla_OnRedo(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseRedo(QsciScintilla* self);
void QsciScintilla_OnRemoveSelectedText(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseRemoveSelectedText(QsciScintilla* self);
void QsciScintilla_OnReplaceSelectedText(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseReplaceSelectedText(QsciScintilla* self, const libqt_string text);
void QsciScintilla_OnResetSelectionBackgroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseResetSelectionBackgroundColor(QsciScintilla* self);
void QsciScintilla_OnResetSelectionForegroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseResetSelectionForegroundColor(QsciScintilla* self);
void QsciScintilla_OnSelectAll(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSelectAll(QsciScintilla* self, bool selectVal);
void QsciScintilla_OnSelectToMatchingBrace(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSelectToMatchingBrace(QsciScintilla* self);
void QsciScintilla_OnSetAutoCompletionCaseSensitivity(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoCompletionCaseSensitivity(QsciScintilla* self, bool cs);
void QsciScintilla_OnSetAutoCompletionReplaceWord(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoCompletionReplaceWord(QsciScintilla* self, bool replace);
void QsciScintilla_OnSetAutoCompletionShowSingle(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoCompletionShowSingle(QsciScintilla* self, bool single);
void QsciScintilla_OnSetAutoCompletionSource(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoCompletionSource(QsciScintilla* self, int source);
void QsciScintilla_OnSetAutoCompletionThreshold(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoCompletionThreshold(QsciScintilla* self, int thresh);
void QsciScintilla_OnSetAutoCompletionUseSingle(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoCompletionUseSingle(QsciScintilla* self, int single);
void QsciScintilla_OnSetAutoIndent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetAutoIndent(QsciScintilla* self, bool autoindent);
void QsciScintilla_OnSetBraceMatching(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetBraceMatching(QsciScintilla* self, int bm);
void QsciScintilla_OnSetBackspaceUnindents(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetBackspaceUnindents(QsciScintilla* self, bool unindent);
void QsciScintilla_OnSetCaretForegroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetCaretForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetCaretLineBackgroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetCaretLineBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetCaretLineFrameWidth(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetCaretLineFrameWidth(QsciScintilla* self, int width);
void QsciScintilla_OnSetCaretLineVisible(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetCaretLineVisible(QsciScintilla* self, bool enable);
void QsciScintilla_OnSetCaretWidth(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetCaretWidth(QsciScintilla* self, int width);
void QsciScintilla_OnSetColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetColor(QsciScintilla* self, const QColor* c);
void QsciScintilla_OnSetCursorPosition(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetCursorPosition(QsciScintilla* self, int line, int index);
void QsciScintilla_OnSetEolMode(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetEolMode(QsciScintilla* self, int mode);
void QsciScintilla_OnSetEolVisibility(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetEolVisibility(QsciScintilla* self, bool visible);
void QsciScintilla_OnSetFolding(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetFolding(QsciScintilla* self, int fold, int margin);
void QsciScintilla_OnSetIndentation(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetIndentation(QsciScintilla* self, int line, int indentation);
void QsciScintilla_OnSetIndentationGuides(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetIndentationGuides(QsciScintilla* self, bool enable);
void QsciScintilla_OnSetIndentationGuidesBackgroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetIndentationGuidesBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetIndentationGuidesForegroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetIndentationGuidesForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetIndentationsUseTabs(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetIndentationsUseTabs(QsciScintilla* self, bool tabs);
void QsciScintilla_OnSetIndentationWidth(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetIndentationWidth(QsciScintilla* self, int width);
void QsciScintilla_OnSetLexer(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetLexer(QsciScintilla* self, QsciLexer* lexer);
void QsciScintilla_OnSetMarginsBackgroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginsBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetMarginsFont(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginsFont(QsciScintilla* self, const QFont* f);
void QsciScintilla_OnSetMarginsForegroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginsForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetMarginLineNumbers(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginLineNumbers(QsciScintilla* self, int margin, bool lnrs);
void QsciScintilla_OnSetMarginMarkerMask(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginMarkerMask(QsciScintilla* self, int margin, int mask);
void QsciScintilla_OnSetMarginSensitivity(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginSensitivity(QsciScintilla* self, int margin, bool sens);
void QsciScintilla_OnSetMarginWidth(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginWidth(QsciScintilla* self, int margin, int width);
void QsciScintilla_OnSetMarginWidth2(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetMarginWidth2(QsciScintilla* self, int margin, const libqt_string s);
void QsciScintilla_OnSetModified(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetModified(QsciScintilla* self, bool m);
void QsciScintilla_OnSetPaper(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetPaper(QsciScintilla* self, const QColor* c);
void QsciScintilla_OnSetReadOnly(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetReadOnly(QsciScintilla* self, bool ro);
void QsciScintilla_OnSetSelection(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetSelection(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo);
void QsciScintilla_OnSetSelectionBackgroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetSelectionBackgroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetSelectionForegroundColor(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetSelectionForegroundColor(QsciScintilla* self, const QColor* col);
void QsciScintilla_OnSetTabIndents(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetTabIndents(QsciScintilla* self, bool indent);
void QsciScintilla_OnSetTabWidth(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetTabWidth(QsciScintilla* self, int width);
void QsciScintilla_OnSetText(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetText(QsciScintilla* self, const libqt_string text);
void QsciScintilla_OnSetUtf8(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetUtf8(QsciScintilla* self, bool cp);
void QsciScintilla_OnSetWhitespaceVisibility(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetWhitespaceVisibility(QsciScintilla* self, int mode);
void QsciScintilla_OnSetWrapMode(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetWrapMode(QsciScintilla* self, int mode);
void QsciScintilla_OnUndo(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseUndo(QsciScintilla* self);
void QsciScintilla_OnUnindent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseUnindent(QsciScintilla* self, int line);
void QsciScintilla_OnZoomIn(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseZoomIn(QsciScintilla* self, int range);
void QsciScintilla_OnZoomIn2(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseZoomIn2(QsciScintilla* self);
void QsciScintilla_OnZoomOut(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseZoomOut(QsciScintilla* self, int range);
void QsciScintilla_OnZoomOut2(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseZoomOut2(QsciScintilla* self);
void QsciScintilla_OnZoomTo(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseZoomTo(QsciScintilla* self, int size);
void QsciScintilla_OnEvent(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseEvent(QsciScintilla* self, QEvent* e);
void QsciScintilla_OnChangeEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseChangeEvent(QsciScintilla* self, QEvent* e);
void QsciScintilla_OnContextMenuEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseContextMenuEvent(QsciScintilla* self, QContextMenuEvent* e);
void QsciScintilla_OnWheelEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseWheelEvent(QsciScintilla* self, QWheelEvent* e);
bool QsciScintilla_CanInsertFromMimeData(const QsciScintilla* self, const QMimeData* source);
void QsciScintilla_OnCanInsertFromMimeData(const QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseCanInsertFromMimeData(const QsciScintilla* self, const QMimeData* source);
libqt_string QsciScintilla_FromMimeData(const QsciScintilla* self, const QMimeData* source, bool* rectangular);
void QsciScintilla_OnFromMimeData(const QsciScintilla* self, intptr_t slot);
libqt_string QsciScintilla_QBaseFromMimeData(const QsciScintilla* self, const QMimeData* source, bool* rectangular);
QMimeData* QsciScintilla_ToMimeData(const QsciScintilla* self, const libqt_string text, bool rectangular);
void QsciScintilla_OnToMimeData(const QsciScintilla* self, intptr_t slot);
QMimeData* QsciScintilla_QBaseToMimeData(const QsciScintilla* self, const libqt_string text, bool rectangular);
void QsciScintilla_DragEnterEvent(QsciScintilla* self, QDragEnterEvent* e);
void QsciScintilla_OnDragEnterEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDragEnterEvent(QsciScintilla* self, QDragEnterEvent* e);
void QsciScintilla_DragLeaveEvent(QsciScintilla* self, QDragLeaveEvent* e);
void QsciScintilla_OnDragLeaveEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDragLeaveEvent(QsciScintilla* self, QDragLeaveEvent* e);
void QsciScintilla_DragMoveEvent(QsciScintilla* self, QDragMoveEvent* e);
void QsciScintilla_OnDragMoveEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDragMoveEvent(QsciScintilla* self, QDragMoveEvent* e);
void QsciScintilla_DropEvent(QsciScintilla* self, QDropEvent* e);
void QsciScintilla_OnDropEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDropEvent(QsciScintilla* self, QDropEvent* e);
void QsciScintilla_FocusInEvent(QsciScintilla* self, QFocusEvent* e);
void QsciScintilla_OnFocusInEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseFocusInEvent(QsciScintilla* self, QFocusEvent* e);
void QsciScintilla_FocusOutEvent(QsciScintilla* self, QFocusEvent* e);
void QsciScintilla_OnFocusOutEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseFocusOutEvent(QsciScintilla* self, QFocusEvent* e);
bool QsciScintilla_FocusNextPrevChild(QsciScintilla* self, bool next);
void QsciScintilla_OnFocusNextPrevChild(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseFocusNextPrevChild(QsciScintilla* self, bool next);
void QsciScintilla_KeyPressEvent(QsciScintilla* self, QKeyEvent* e);
void QsciScintilla_OnKeyPressEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseKeyPressEvent(QsciScintilla* self, QKeyEvent* e);
void QsciScintilla_InputMethodEvent(QsciScintilla* self, QInputMethodEvent* event);
void QsciScintilla_OnInputMethodEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseInputMethodEvent(QsciScintilla* self, QInputMethodEvent* event);
QVariant* QsciScintilla_InputMethodQuery(const QsciScintilla* self, int query);
void QsciScintilla_OnInputMethodQuery(const QsciScintilla* self, intptr_t slot);
QVariant* QsciScintilla_QBaseInputMethodQuery(const QsciScintilla* self, int query);
void QsciScintilla_MouseDoubleClickEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_OnMouseDoubleClickEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseMouseDoubleClickEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_MouseMoveEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_OnMouseMoveEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseMouseMoveEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_MousePressEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_OnMousePressEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseMousePressEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_MouseReleaseEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_OnMouseReleaseEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseMouseReleaseEvent(QsciScintilla* self, QMouseEvent* e);
void QsciScintilla_PaintEvent(QsciScintilla* self, QPaintEvent* e);
void QsciScintilla_OnPaintEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBasePaintEvent(QsciScintilla* self, QPaintEvent* e);
void QsciScintilla_ResizeEvent(QsciScintilla* self, QResizeEvent* e);
void QsciScintilla_OnResizeEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseResizeEvent(QsciScintilla* self, QResizeEvent* e);
void QsciScintilla_ScrollContentsBy(QsciScintilla* self, int dx, int dy);
void QsciScintilla_OnScrollContentsBy(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseScrollContentsBy(QsciScintilla* self, int dx, int dy);
QSize* QsciScintilla_MinimumSizeHint(const QsciScintilla* self);
void QsciScintilla_OnMinimumSizeHint(const QsciScintilla* self, intptr_t slot);
QSize* QsciScintilla_QBaseMinimumSizeHint(const QsciScintilla* self);
QSize* QsciScintilla_SizeHint(const QsciScintilla* self);
void QsciScintilla_OnSizeHint(const QsciScintilla* self, intptr_t slot);
QSize* QsciScintilla_QBaseSizeHint(const QsciScintilla* self);
void QsciScintilla_SetupViewport(QsciScintilla* self, QWidget* viewport);
void QsciScintilla_OnSetupViewport(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetupViewport(QsciScintilla* self, QWidget* viewport);
bool QsciScintilla_EventFilter(QsciScintilla* self, QObject* param1, QEvent* param2);
void QsciScintilla_OnEventFilter(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseEventFilter(QsciScintilla* self, QObject* param1, QEvent* param2);
bool QsciScintilla_ViewportEvent(QsciScintilla* self, QEvent* param1);
void QsciScintilla_OnViewportEvent(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseViewportEvent(QsciScintilla* self, QEvent* param1);
QSize* QsciScintilla_ViewportSizeHint(const QsciScintilla* self);
void QsciScintilla_OnViewportSizeHint(const QsciScintilla* self, intptr_t slot);
QSize* QsciScintilla_QBaseViewportSizeHint(const QsciScintilla* self);
void QsciScintilla_InitStyleOption(const QsciScintilla* self, QStyleOptionFrame* option);
void QsciScintilla_OnInitStyleOption(const QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseInitStyleOption(const QsciScintilla* self, QStyleOptionFrame* option);
int QsciScintilla_DevType(const QsciScintilla* self);
void QsciScintilla_OnDevType(const QsciScintilla* self, intptr_t slot);
int QsciScintilla_QBaseDevType(const QsciScintilla* self);
void QsciScintilla_SetVisible(QsciScintilla* self, bool visible);
void QsciScintilla_OnSetVisible(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetVisible(QsciScintilla* self, bool visible);
int QsciScintilla_HeightForWidth(const QsciScintilla* self, int param1);
void QsciScintilla_OnHeightForWidth(const QsciScintilla* self, intptr_t slot);
int QsciScintilla_QBaseHeightForWidth(const QsciScintilla* self, int param1);
bool QsciScintilla_HasHeightForWidth(const QsciScintilla* self);
void QsciScintilla_OnHasHeightForWidth(const QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseHasHeightForWidth(const QsciScintilla* self);
QPaintEngine* QsciScintilla_PaintEngine(const QsciScintilla* self);
void QsciScintilla_OnPaintEngine(const QsciScintilla* self, intptr_t slot);
QPaintEngine* QsciScintilla_QBasePaintEngine(const QsciScintilla* self);
void QsciScintilla_KeyReleaseEvent(QsciScintilla* self, QKeyEvent* event);
void QsciScintilla_OnKeyReleaseEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseKeyReleaseEvent(QsciScintilla* self, QKeyEvent* event);
void QsciScintilla_EnterEvent(QsciScintilla* self, QEnterEvent* event);
void QsciScintilla_OnEnterEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseEnterEvent(QsciScintilla* self, QEnterEvent* event);
void QsciScintilla_LeaveEvent(QsciScintilla* self, QEvent* event);
void QsciScintilla_OnLeaveEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseLeaveEvent(QsciScintilla* self, QEvent* event);
void QsciScintilla_MoveEvent(QsciScintilla* self, QMoveEvent* event);
void QsciScintilla_OnMoveEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseMoveEvent(QsciScintilla* self, QMoveEvent* event);
void QsciScintilla_CloseEvent(QsciScintilla* self, QCloseEvent* event);
void QsciScintilla_OnCloseEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseCloseEvent(QsciScintilla* self, QCloseEvent* event);
void QsciScintilla_TabletEvent(QsciScintilla* self, QTabletEvent* event);
void QsciScintilla_OnTabletEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseTabletEvent(QsciScintilla* self, QTabletEvent* event);
void QsciScintilla_ActionEvent(QsciScintilla* self, QActionEvent* event);
void QsciScintilla_OnActionEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseActionEvent(QsciScintilla* self, QActionEvent* event);
void QsciScintilla_ShowEvent(QsciScintilla* self, QShowEvent* event);
void QsciScintilla_OnShowEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseShowEvent(QsciScintilla* self, QShowEvent* event);
void QsciScintilla_HideEvent(QsciScintilla* self, QHideEvent* event);
void QsciScintilla_OnHideEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseHideEvent(QsciScintilla* self, QHideEvent* event);
bool QsciScintilla_NativeEvent(QsciScintilla* self, const libqt_string eventType, void* message, intptr_t* result);
void QsciScintilla_OnNativeEvent(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseNativeEvent(QsciScintilla* self, const libqt_string eventType, void* message, intptr_t* result);
int QsciScintilla_Metric(const QsciScintilla* self, int param1);
void QsciScintilla_OnMetric(const QsciScintilla* self, intptr_t slot);
int QsciScintilla_QBaseMetric(const QsciScintilla* self, int param1);
void QsciScintilla_InitPainter(const QsciScintilla* self, QPainter* painter);
void QsciScintilla_OnInitPainter(const QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseInitPainter(const QsciScintilla* self, QPainter* painter);
QPaintDevice* QsciScintilla_Redirected(const QsciScintilla* self, QPoint* offset);
void QsciScintilla_OnRedirected(const QsciScintilla* self, intptr_t slot);
QPaintDevice* QsciScintilla_QBaseRedirected(const QsciScintilla* self, QPoint* offset);
QPainter* QsciScintilla_SharedPainter(const QsciScintilla* self);
void QsciScintilla_OnSharedPainter(const QsciScintilla* self, intptr_t slot);
QPainter* QsciScintilla_QBaseSharedPainter(const QsciScintilla* self);
void QsciScintilla_TimerEvent(QsciScintilla* self, QTimerEvent* event);
void QsciScintilla_OnTimerEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseTimerEvent(QsciScintilla* self, QTimerEvent* event);
void QsciScintilla_ChildEvent(QsciScintilla* self, QChildEvent* event);
void QsciScintilla_OnChildEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseChildEvent(QsciScintilla* self, QChildEvent* event);
void QsciScintilla_CustomEvent(QsciScintilla* self, QEvent* event);
void QsciScintilla_OnCustomEvent(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseCustomEvent(QsciScintilla* self, QEvent* event);
void QsciScintilla_ConnectNotify(QsciScintilla* self, const QMetaMethod* signal);
void QsciScintilla_OnConnectNotify(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseConnectNotify(QsciScintilla* self, const QMetaMethod* signal);
void QsciScintilla_DisconnectNotify(QsciScintilla* self, const QMetaMethod* signal);
void QsciScintilla_OnDisconnectNotify(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDisconnectNotify(QsciScintilla* self, const QMetaMethod* signal);
void QsciScintilla_SetScrollBars(QsciScintilla* self);
void QsciScintilla_OnSetScrollBars(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetScrollBars(QsciScintilla* self);
bool QsciScintilla_ContextMenuNeeded(const QsciScintilla* self, int x, int y);
void QsciScintilla_OnContextMenuNeeded(const QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseContextMenuNeeded(const QsciScintilla* self, int x, int y);
void QsciScintilla_SetViewportMargins(QsciScintilla* self, int left, int top, int right, int bottom);
void QsciScintilla_OnSetViewportMargins(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseSetViewportMargins(QsciScintilla* self, int left, int top, int right, int bottom);
QMargins* QsciScintilla_ViewportMargins(const QsciScintilla* self);
void QsciScintilla_OnViewportMargins(const QsciScintilla* self, intptr_t slot);
QMargins* QsciScintilla_QBaseViewportMargins(const QsciScintilla* self);
void QsciScintilla_DrawFrame(QsciScintilla* self, QPainter* param1);
void QsciScintilla_OnDrawFrame(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDrawFrame(QsciScintilla* self, QPainter* param1);
void QsciScintilla_UpdateMicroFocus(QsciScintilla* self);
void QsciScintilla_OnUpdateMicroFocus(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseUpdateMicroFocus(QsciScintilla* self);
void QsciScintilla_Create(QsciScintilla* self);
void QsciScintilla_OnCreate(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseCreate(QsciScintilla* self);
void QsciScintilla_Destroy(QsciScintilla* self);
void QsciScintilla_OnDestroy(QsciScintilla* self, intptr_t slot);
void QsciScintilla_QBaseDestroy(QsciScintilla* self);
bool QsciScintilla_FocusNextChild(QsciScintilla* self);
void QsciScintilla_OnFocusNextChild(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseFocusNextChild(QsciScintilla* self);
bool QsciScintilla_FocusPreviousChild(QsciScintilla* self);
void QsciScintilla_OnFocusPreviousChild(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseFocusPreviousChild(QsciScintilla* self);
QObject* QsciScintilla_Sender(const QsciScintilla* self);
void QsciScintilla_OnSender(const QsciScintilla* self, intptr_t slot);
QObject* QsciScintilla_QBaseSender(const QsciScintilla* self);
int QsciScintilla_SenderSignalIndex(const QsciScintilla* self);
void QsciScintilla_OnSenderSignalIndex(const QsciScintilla* self, intptr_t slot);
int QsciScintilla_QBaseSenderSignalIndex(const QsciScintilla* self);
int QsciScintilla_Receivers(const QsciScintilla* self, const char* signal);
void QsciScintilla_OnReceivers(const QsciScintilla* self, intptr_t slot);
int QsciScintilla_QBaseReceivers(const QsciScintilla* self, const char* signal);
bool QsciScintilla_IsSignalConnected(const QsciScintilla* self, const QMetaMethod* signal);
void QsciScintilla_OnIsSignalConnected(const QsciScintilla* self, intptr_t slot);
bool QsciScintilla_QBaseIsSignalConnected(const QsciScintilla* self, const QMetaMethod* signal);
double QsciScintilla_GetDecodedMetricF(const QsciScintilla* self, int metricA, int metricB);
void QsciScintilla_OnGetDecodedMetricF(const QsciScintilla* self, intptr_t slot);
double QsciScintilla_QBaseGetDecodedMetricF(const QsciScintilla* self, int metricA, int metricB);
void QsciScintilla_Delete(QsciScintilla* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
