#pragma once
#ifndef SRC_EXTRAS_KCOMPLETIONC_LIBKHISTORYCOMBOBOX_H
#define SRC_EXTRAS_KCOMPLETIONC_LIBKHISTORYCOMBOBOX_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KComboBox KComboBox;
typedef struct KCompletion KCompletion;
typedef struct KCompletionBase KCompletionBase;
typedef struct KHistoryComboBox KHistoryComboBox;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QComboBox QComboBox;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QLineEdit QLineEdit;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionComboBox QStyleOptionComboBox;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KHistoryComboBox* KHistoryComboBox_new(QWidget* parent);
KHistoryComboBox* KHistoryComboBox_new2();
KHistoryComboBox* KHistoryComboBox_new3(bool useCompletion);
KHistoryComboBox* KHistoryComboBox_new4(bool useCompletion, QWidget* parent);
QMetaObject* KHistoryComboBox_MetaObject(const KHistoryComboBox* self);
void* KHistoryComboBox_Metacast(KHistoryComboBox* self, const char* param1);
int KHistoryComboBox_Metacall(KHistoryComboBox* self, int param1, int param2, void** param3);
libqt_string KHistoryComboBox_Tr(const char* s);
void KHistoryComboBox_SetHistoryItems(KHistoryComboBox* self, const libqt_list /* of libqt_string */ items);
void KHistoryComboBox_SetHistoryItems2(KHistoryComboBox* self, const libqt_list /* of libqt_string */ items, bool setCompletionList);
libqt_list /* of libqt_string */ KHistoryComboBox_HistoryItems(const KHistoryComboBox* self);
bool KHistoryComboBox_RemoveFromHistory(KHistoryComboBox* self, const libqt_string item);
void KHistoryComboBox_AddToHistory(KHistoryComboBox* self, const libqt_string item);
void KHistoryComboBox_ClearHistory(KHistoryComboBox* self);
void KHistoryComboBox_Reset(KHistoryComboBox* self);
void KHistoryComboBox_Cleared(KHistoryComboBox* self);
void KHistoryComboBox_Connect_Cleared(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_KeyPressEvent(KHistoryComboBox* self, QKeyEvent* param1);
void KHistoryComboBox_WheelEvent(KHistoryComboBox* self, QWheelEvent* ev);
libqt_string KHistoryComboBox_Tr2(const char* s, const char* c);
libqt_string KHistoryComboBox_Tr3(const char* s, const char* c, int n);
void KHistoryComboBox_OnMetacall(KHistoryComboBox* self, intptr_t slot);
int KHistoryComboBox_QBaseMetacall(KHistoryComboBox* self, int param1, int param2, void** param3);
void KHistoryComboBox_OnKeyPressEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseKeyPressEvent(KHistoryComboBox* self, QKeyEvent* param1);
void KHistoryComboBox_OnWheelEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseWheelEvent(KHistoryComboBox* self, QWheelEvent* ev);
void KHistoryComboBox_SetAutoCompletion(KHistoryComboBox* self, bool autocomplete);
void KHistoryComboBox_OnSetAutoCompletion(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetAutoCompletion(KHistoryComboBox* self, bool autocomplete);
void KHistoryComboBox_SetLineEdit(KHistoryComboBox* self, QLineEdit* lineEdit);
void KHistoryComboBox_OnSetLineEdit(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetLineEdit(KHistoryComboBox* self, QLineEdit* lineEdit);
QSize* KHistoryComboBox_MinimumSizeHint(const KHistoryComboBox* self);
void KHistoryComboBox_OnMinimumSizeHint(const KHistoryComboBox* self, intptr_t slot);
QSize* KHistoryComboBox_QBaseMinimumSizeHint(const KHistoryComboBox* self);
void KHistoryComboBox_SetCompletedText(KHistoryComboBox* self, const libqt_string completedText);
void KHistoryComboBox_OnSetCompletedText(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetCompletedText(KHistoryComboBox* self, const libqt_string completedText);
void KHistoryComboBox_SetCompletedItems(KHistoryComboBox* self, const libqt_list /* of libqt_string */ items, bool autoSuggest);
void KHistoryComboBox_OnSetCompletedItems(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetCompletedItems(KHistoryComboBox* self, const libqt_list /* of libqt_string */ items, bool autoSuggest);
void KHistoryComboBox_MakeCompletion(KHistoryComboBox* self, const libqt_string param1);
void KHistoryComboBox_OnMakeCompletion(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseMakeCompletion(KHistoryComboBox* self, const libqt_string param1);
void KHistoryComboBox_SetModel(KHistoryComboBox* self, QAbstractItemModel* model);
void KHistoryComboBox_OnSetModel(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetModel(KHistoryComboBox* self, QAbstractItemModel* model);
QSize* KHistoryComboBox_SizeHint(const KHistoryComboBox* self);
void KHistoryComboBox_OnSizeHint(const KHistoryComboBox* self, intptr_t slot);
QSize* KHistoryComboBox_QBaseSizeHint(const KHistoryComboBox* self);
void KHistoryComboBox_ShowPopup(KHistoryComboBox* self);
void KHistoryComboBox_OnShowPopup(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseShowPopup(KHistoryComboBox* self);
void KHistoryComboBox_HidePopup(KHistoryComboBox* self);
void KHistoryComboBox_OnHidePopup(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseHidePopup(KHistoryComboBox* self);
bool KHistoryComboBox_Event(KHistoryComboBox* self, QEvent* event);
void KHistoryComboBox_OnEvent(KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseEvent(KHistoryComboBox* self, QEvent* event);
QVariant* KHistoryComboBox_InputMethodQuery(const KHistoryComboBox* self, int param1);
void KHistoryComboBox_OnInputMethodQuery(const KHistoryComboBox* self, intptr_t slot);
QVariant* KHistoryComboBox_QBaseInputMethodQuery(const KHistoryComboBox* self, int param1);
void KHistoryComboBox_FocusInEvent(KHistoryComboBox* self, QFocusEvent* e);
void KHistoryComboBox_OnFocusInEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseFocusInEvent(KHistoryComboBox* self, QFocusEvent* e);
void KHistoryComboBox_FocusOutEvent(KHistoryComboBox* self, QFocusEvent* e);
void KHistoryComboBox_OnFocusOutEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseFocusOutEvent(KHistoryComboBox* self, QFocusEvent* e);
void KHistoryComboBox_ChangeEvent(KHistoryComboBox* self, QEvent* e);
void KHistoryComboBox_OnChangeEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseChangeEvent(KHistoryComboBox* self, QEvent* e);
void KHistoryComboBox_ResizeEvent(KHistoryComboBox* self, QResizeEvent* e);
void KHistoryComboBox_OnResizeEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseResizeEvent(KHistoryComboBox* self, QResizeEvent* e);
void KHistoryComboBox_PaintEvent(KHistoryComboBox* self, QPaintEvent* e);
void KHistoryComboBox_OnPaintEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBasePaintEvent(KHistoryComboBox* self, QPaintEvent* e);
void KHistoryComboBox_ShowEvent(KHistoryComboBox* self, QShowEvent* e);
void KHistoryComboBox_OnShowEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseShowEvent(KHistoryComboBox* self, QShowEvent* e);
void KHistoryComboBox_HideEvent(KHistoryComboBox* self, QHideEvent* e);
void KHistoryComboBox_OnHideEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseHideEvent(KHistoryComboBox* self, QHideEvent* e);
void KHistoryComboBox_MousePressEvent(KHistoryComboBox* self, QMouseEvent* e);
void KHistoryComboBox_OnMousePressEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseMousePressEvent(KHistoryComboBox* self, QMouseEvent* e);
void KHistoryComboBox_MouseReleaseEvent(KHistoryComboBox* self, QMouseEvent* e);
void KHistoryComboBox_OnMouseReleaseEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseMouseReleaseEvent(KHistoryComboBox* self, QMouseEvent* e);
void KHistoryComboBox_KeyReleaseEvent(KHistoryComboBox* self, QKeyEvent* e);
void KHistoryComboBox_OnKeyReleaseEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseKeyReleaseEvent(KHistoryComboBox* self, QKeyEvent* e);
void KHistoryComboBox_ContextMenuEvent(KHistoryComboBox* self, QContextMenuEvent* e);
void KHistoryComboBox_OnContextMenuEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseContextMenuEvent(KHistoryComboBox* self, QContextMenuEvent* e);
void KHistoryComboBox_InputMethodEvent(KHistoryComboBox* self, QInputMethodEvent* param1);
void KHistoryComboBox_OnInputMethodEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseInputMethodEvent(KHistoryComboBox* self, QInputMethodEvent* param1);
void KHistoryComboBox_InitStyleOption(const KHistoryComboBox* self, QStyleOptionComboBox* option);
void KHistoryComboBox_OnInitStyleOption(const KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseInitStyleOption(const KHistoryComboBox* self, QStyleOptionComboBox* option);
int KHistoryComboBox_DevType(const KHistoryComboBox* self);
void KHistoryComboBox_OnDevType(const KHistoryComboBox* self, intptr_t slot);
int KHistoryComboBox_QBaseDevType(const KHistoryComboBox* self);
void KHistoryComboBox_SetVisible(KHistoryComboBox* self, bool visible);
void KHistoryComboBox_OnSetVisible(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetVisible(KHistoryComboBox* self, bool visible);
int KHistoryComboBox_HeightForWidth(const KHistoryComboBox* self, int param1);
void KHistoryComboBox_OnHeightForWidth(const KHistoryComboBox* self, intptr_t slot);
int KHistoryComboBox_QBaseHeightForWidth(const KHistoryComboBox* self, int param1);
bool KHistoryComboBox_HasHeightForWidth(const KHistoryComboBox* self);
void KHistoryComboBox_OnHasHeightForWidth(const KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseHasHeightForWidth(const KHistoryComboBox* self);
QPaintEngine* KHistoryComboBox_PaintEngine(const KHistoryComboBox* self);
void KHistoryComboBox_OnPaintEngine(const KHistoryComboBox* self, intptr_t slot);
QPaintEngine* KHistoryComboBox_QBasePaintEngine(const KHistoryComboBox* self);
void KHistoryComboBox_MouseDoubleClickEvent(KHistoryComboBox* self, QMouseEvent* event);
void KHistoryComboBox_OnMouseDoubleClickEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseMouseDoubleClickEvent(KHistoryComboBox* self, QMouseEvent* event);
void KHistoryComboBox_MouseMoveEvent(KHistoryComboBox* self, QMouseEvent* event);
void KHistoryComboBox_OnMouseMoveEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseMouseMoveEvent(KHistoryComboBox* self, QMouseEvent* event);
void KHistoryComboBox_EnterEvent(KHistoryComboBox* self, QEnterEvent* event);
void KHistoryComboBox_OnEnterEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseEnterEvent(KHistoryComboBox* self, QEnterEvent* event);
void KHistoryComboBox_LeaveEvent(KHistoryComboBox* self, QEvent* event);
void KHistoryComboBox_OnLeaveEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseLeaveEvent(KHistoryComboBox* self, QEvent* event);
void KHistoryComboBox_MoveEvent(KHistoryComboBox* self, QMoveEvent* event);
void KHistoryComboBox_OnMoveEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseMoveEvent(KHistoryComboBox* self, QMoveEvent* event);
void KHistoryComboBox_CloseEvent(KHistoryComboBox* self, QCloseEvent* event);
void KHistoryComboBox_OnCloseEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseCloseEvent(KHistoryComboBox* self, QCloseEvent* event);
void KHistoryComboBox_TabletEvent(KHistoryComboBox* self, QTabletEvent* event);
void KHistoryComboBox_OnTabletEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseTabletEvent(KHistoryComboBox* self, QTabletEvent* event);
void KHistoryComboBox_ActionEvent(KHistoryComboBox* self, QActionEvent* event);
void KHistoryComboBox_OnActionEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseActionEvent(KHistoryComboBox* self, QActionEvent* event);
void KHistoryComboBox_DragEnterEvent(KHistoryComboBox* self, QDragEnterEvent* event);
void KHistoryComboBox_OnDragEnterEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseDragEnterEvent(KHistoryComboBox* self, QDragEnterEvent* event);
void KHistoryComboBox_DragMoveEvent(KHistoryComboBox* self, QDragMoveEvent* event);
void KHistoryComboBox_OnDragMoveEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseDragMoveEvent(KHistoryComboBox* self, QDragMoveEvent* event);
void KHistoryComboBox_DragLeaveEvent(KHistoryComboBox* self, QDragLeaveEvent* event);
void KHistoryComboBox_OnDragLeaveEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseDragLeaveEvent(KHistoryComboBox* self, QDragLeaveEvent* event);
void KHistoryComboBox_DropEvent(KHistoryComboBox* self, QDropEvent* event);
void KHistoryComboBox_OnDropEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseDropEvent(KHistoryComboBox* self, QDropEvent* event);
bool KHistoryComboBox_NativeEvent(KHistoryComboBox* self, const libqt_string eventType, void* message, intptr_t* result);
void KHistoryComboBox_OnNativeEvent(KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseNativeEvent(KHistoryComboBox* self, const libqt_string eventType, void* message, intptr_t* result);
int KHistoryComboBox_Metric(const KHistoryComboBox* self, int param1);
void KHistoryComboBox_OnMetric(const KHistoryComboBox* self, intptr_t slot);
int KHistoryComboBox_QBaseMetric(const KHistoryComboBox* self, int param1);
void KHistoryComboBox_InitPainter(const KHistoryComboBox* self, QPainter* painter);
void KHistoryComboBox_OnInitPainter(const KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseInitPainter(const KHistoryComboBox* self, QPainter* painter);
QPaintDevice* KHistoryComboBox_Redirected(const KHistoryComboBox* self, QPoint* offset);
void KHistoryComboBox_OnRedirected(const KHistoryComboBox* self, intptr_t slot);
QPaintDevice* KHistoryComboBox_QBaseRedirected(const KHistoryComboBox* self, QPoint* offset);
QPainter* KHistoryComboBox_SharedPainter(const KHistoryComboBox* self);
void KHistoryComboBox_OnSharedPainter(const KHistoryComboBox* self, intptr_t slot);
QPainter* KHistoryComboBox_QBaseSharedPainter(const KHistoryComboBox* self);
bool KHistoryComboBox_FocusNextPrevChild(KHistoryComboBox* self, bool next);
void KHistoryComboBox_OnFocusNextPrevChild(KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseFocusNextPrevChild(KHistoryComboBox* self, bool next);
bool KHistoryComboBox_EventFilter(KHistoryComboBox* self, QObject* watched, QEvent* event);
void KHistoryComboBox_OnEventFilter(KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseEventFilter(KHistoryComboBox* self, QObject* watched, QEvent* event);
void KHistoryComboBox_TimerEvent(KHistoryComboBox* self, QTimerEvent* event);
void KHistoryComboBox_OnTimerEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseTimerEvent(KHistoryComboBox* self, QTimerEvent* event);
void KHistoryComboBox_ChildEvent(KHistoryComboBox* self, QChildEvent* event);
void KHistoryComboBox_OnChildEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseChildEvent(KHistoryComboBox* self, QChildEvent* event);
void KHistoryComboBox_CustomEvent(KHistoryComboBox* self, QEvent* event);
void KHistoryComboBox_OnCustomEvent(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseCustomEvent(KHistoryComboBox* self, QEvent* event);
void KHistoryComboBox_ConnectNotify(KHistoryComboBox* self, const QMetaMethod* signal);
void KHistoryComboBox_OnConnectNotify(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseConnectNotify(KHistoryComboBox* self, const QMetaMethod* signal);
void KHistoryComboBox_DisconnectNotify(KHistoryComboBox* self, const QMetaMethod* signal);
void KHistoryComboBox_OnDisconnectNotify(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseDisconnectNotify(KHistoryComboBox* self, const QMetaMethod* signal);
void KHistoryComboBox_SetCompletionObject(KHistoryComboBox* self, KCompletion* completionObject, bool handleSignals);
void KHistoryComboBox_OnSetCompletionObject(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetCompletionObject(KHistoryComboBox* self, KCompletion* completionObject, bool handleSignals);
void KHistoryComboBox_SetHandleSignals(KHistoryComboBox* self, bool handle);
void KHistoryComboBox_OnSetHandleSignals(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetHandleSignals(KHistoryComboBox* self, bool handle);
void KHistoryComboBox_SetCompletionMode(KHistoryComboBox* self, int mode);
void KHistoryComboBox_OnSetCompletionMode(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetCompletionMode(KHistoryComboBox* self, int mode);
void KHistoryComboBox_VirtualHook(KHistoryComboBox* self, int id, void* data);
void KHistoryComboBox_OnVirtualHook(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseVirtualHook(KHistoryComboBox* self, int id, void* data);
void KHistoryComboBox_InsertItems(KHistoryComboBox* self, const libqt_list /* of libqt_string */ items);
void KHistoryComboBox_OnInsertItems(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseInsertItems(KHistoryComboBox* self, const libqt_list /* of libqt_string */ items);
bool KHistoryComboBox_UseCompletion(const KHistoryComboBox* self);
void KHistoryComboBox_OnUseCompletion(const KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseUseCompletion(const KHistoryComboBox* self);
void KHistoryComboBox_UpdateMicroFocus(KHistoryComboBox* self);
void KHistoryComboBox_OnUpdateMicroFocus(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseUpdateMicroFocus(KHistoryComboBox* self);
void KHistoryComboBox_Create(KHistoryComboBox* self);
void KHistoryComboBox_OnCreate(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseCreate(KHistoryComboBox* self);
void KHistoryComboBox_Destroy(KHistoryComboBox* self);
void KHistoryComboBox_OnDestroy(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseDestroy(KHistoryComboBox* self);
bool KHistoryComboBox_FocusNextChild(KHistoryComboBox* self);
void KHistoryComboBox_OnFocusNextChild(KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseFocusNextChild(KHistoryComboBox* self);
bool KHistoryComboBox_FocusPreviousChild(KHistoryComboBox* self);
void KHistoryComboBox_OnFocusPreviousChild(KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseFocusPreviousChild(KHistoryComboBox* self);
QObject* KHistoryComboBox_Sender(const KHistoryComboBox* self);
void KHistoryComboBox_OnSender(const KHistoryComboBox* self, intptr_t slot);
QObject* KHistoryComboBox_QBaseSender(const KHistoryComboBox* self);
int KHistoryComboBox_SenderSignalIndex(const KHistoryComboBox* self);
void KHistoryComboBox_OnSenderSignalIndex(const KHistoryComboBox* self, intptr_t slot);
int KHistoryComboBox_QBaseSenderSignalIndex(const KHistoryComboBox* self);
int KHistoryComboBox_Receivers(const KHistoryComboBox* self, const char* signal);
void KHistoryComboBox_OnReceivers(const KHistoryComboBox* self, intptr_t slot);
int KHistoryComboBox_QBaseReceivers(const KHistoryComboBox* self, const char* signal);
bool KHistoryComboBox_IsSignalConnected(const KHistoryComboBox* self, const QMetaMethod* signal);
void KHistoryComboBox_OnIsSignalConnected(const KHistoryComboBox* self, intptr_t slot);
bool KHistoryComboBox_QBaseIsSignalConnected(const KHistoryComboBox* self, const QMetaMethod* signal);
double KHistoryComboBox_GetDecodedMetricF(const KHistoryComboBox* self, int metricA, int metricB);
void KHistoryComboBox_OnGetDecodedMetricF(const KHistoryComboBox* self, intptr_t slot);
double KHistoryComboBox_QBaseGetDecodedMetricF(const KHistoryComboBox* self, int metricA, int metricB);
libqt_map /* of int to libqt_list  of QKeySequence*  */ KHistoryComboBox_KeyBindingMap(const KHistoryComboBox* self);
void KHistoryComboBox_OnKeyBindingMap(const KHistoryComboBox* self, intptr_t slot);
libqt_map /* of int to libqt_list  of QKeySequence*  */ KHistoryComboBox_QBaseKeyBindingMap(const KHistoryComboBox* self);
void KHistoryComboBox_SetKeyBindingMap(KHistoryComboBox* self, libqt_map /* of int to libqt_list  of QKeySequence*  */ keyBindingMap);
void KHistoryComboBox_OnSetKeyBindingMap(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetKeyBindingMap(KHistoryComboBox* self, libqt_map /* of int to libqt_list  of QKeySequence*  */ keyBindingMap);
void KHistoryComboBox_SetDelegate(KHistoryComboBox* self, KCompletionBase* delegate);
void KHistoryComboBox_OnSetDelegate(KHistoryComboBox* self, intptr_t slot);
void KHistoryComboBox_QBaseSetDelegate(KHistoryComboBox* self, KCompletionBase* delegate);
KCompletionBase* KHistoryComboBox_Delegate(const KHistoryComboBox* self);
void KHistoryComboBox_OnDelegate(const KHistoryComboBox* self, intptr_t slot);
KCompletionBase* KHistoryComboBox_QBaseDelegate(const KHistoryComboBox* self);
void KHistoryComboBox_Delete(KHistoryComboBox* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
