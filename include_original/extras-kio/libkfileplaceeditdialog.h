#pragma once
#ifndef SRC_EXTRAS_KIOC_LIBKFILEPLACEEDITDIALOG_H
#define SRC_EXTRAS_KIOC_LIBKFILEPLACEEDITDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KFilePlaceEditDialog KFilePlaceEditDialog;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KFilePlaceEditDialog* KFilePlaceEditDialog_new(bool allowGlobal, const QUrl* url, const libqt_string label, const libqt_string icon, bool isAddingNewPlace);
KFilePlaceEditDialog* KFilePlaceEditDialog_new2(bool allowGlobal, const QUrl* url, const libqt_string label, const libqt_string icon, bool isAddingNewPlace, bool appLocal);
KFilePlaceEditDialog* KFilePlaceEditDialog_new3(bool allowGlobal, const QUrl* url, const libqt_string label, const libqt_string icon, bool isAddingNewPlace, bool appLocal, int iconSize);
KFilePlaceEditDialog* KFilePlaceEditDialog_new4(bool allowGlobal, const QUrl* url, const libqt_string label, const libqt_string icon, bool isAddingNewPlace, bool appLocal, int iconSize, QWidget* parent);
QMetaObject* KFilePlaceEditDialog_MetaObject(const KFilePlaceEditDialog* self);
void* KFilePlaceEditDialog_Metacast(KFilePlaceEditDialog* self, const char* param1);
int KFilePlaceEditDialog_Metacall(KFilePlaceEditDialog* self, int param1, int param2, void** param3);
libqt_string KFilePlaceEditDialog_Tr(const char* s);
bool KFilePlaceEditDialog_GetInformation(bool allowGlobal, QUrl* url, libqt_string label, libqt_string icon, bool isAddingNewPlace, bool* appLocal, int iconSize);
QUrl* KFilePlaceEditDialog_Url(const KFilePlaceEditDialog* self);
libqt_string KFilePlaceEditDialog_Label(const KFilePlaceEditDialog* self);
libqt_string KFilePlaceEditDialog_Icon(const KFilePlaceEditDialog* self);
bool KFilePlaceEditDialog_ApplicationLocal(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_UrlChanged(KFilePlaceEditDialog* self, const libqt_string param1);
libqt_string KFilePlaceEditDialog_Tr2(const char* s, const char* c);
libqt_string KFilePlaceEditDialog_Tr3(const char* s, const char* c, int n);
bool KFilePlaceEditDialog_GetInformation8(bool allowGlobal, QUrl* url, libqt_string label, libqt_string icon, bool isAddingNewPlace, bool* appLocal, int iconSize, QWidget* parent);
void KFilePlaceEditDialog_OnMetacall(KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseMetacall(KFilePlaceEditDialog* self, int param1, int param2, void** param3);
void KFilePlaceEditDialog_SetVisible(KFilePlaceEditDialog* self, bool visible);
void KFilePlaceEditDialog_OnSetVisible(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseSetVisible(KFilePlaceEditDialog* self, bool visible);
QSize* KFilePlaceEditDialog_SizeHint(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnSizeHint(const KFilePlaceEditDialog* self, intptr_t slot);
QSize* KFilePlaceEditDialog_QBaseSizeHint(const KFilePlaceEditDialog* self);
QSize* KFilePlaceEditDialog_MinimumSizeHint(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnMinimumSizeHint(const KFilePlaceEditDialog* self, intptr_t slot);
QSize* KFilePlaceEditDialog_QBaseMinimumSizeHint(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_Open(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnOpen(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseOpen(KFilePlaceEditDialog* self);
int KFilePlaceEditDialog_Exec(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnExec(KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseExec(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_Done(KFilePlaceEditDialog* self, int param1);
void KFilePlaceEditDialog_OnDone(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDone(KFilePlaceEditDialog* self, int param1);
void KFilePlaceEditDialog_Accept(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnAccept(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseAccept(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_Reject(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnReject(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseReject(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_KeyPressEvent(KFilePlaceEditDialog* self, QKeyEvent* param1);
void KFilePlaceEditDialog_OnKeyPressEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseKeyPressEvent(KFilePlaceEditDialog* self, QKeyEvent* param1);
void KFilePlaceEditDialog_CloseEvent(KFilePlaceEditDialog* self, QCloseEvent* param1);
void KFilePlaceEditDialog_OnCloseEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseCloseEvent(KFilePlaceEditDialog* self, QCloseEvent* param1);
void KFilePlaceEditDialog_ShowEvent(KFilePlaceEditDialog* self, QShowEvent* param1);
void KFilePlaceEditDialog_OnShowEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseShowEvent(KFilePlaceEditDialog* self, QShowEvent* param1);
void KFilePlaceEditDialog_ResizeEvent(KFilePlaceEditDialog* self, QResizeEvent* param1);
void KFilePlaceEditDialog_OnResizeEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseResizeEvent(KFilePlaceEditDialog* self, QResizeEvent* param1);
void KFilePlaceEditDialog_ContextMenuEvent(KFilePlaceEditDialog* self, QContextMenuEvent* param1);
void KFilePlaceEditDialog_OnContextMenuEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseContextMenuEvent(KFilePlaceEditDialog* self, QContextMenuEvent* param1);
bool KFilePlaceEditDialog_EventFilter(KFilePlaceEditDialog* self, QObject* param1, QEvent* param2);
void KFilePlaceEditDialog_OnEventFilter(KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseEventFilter(KFilePlaceEditDialog* self, QObject* param1, QEvent* param2);
int KFilePlaceEditDialog_DevType(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnDevType(const KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseDevType(const KFilePlaceEditDialog* self);
int KFilePlaceEditDialog_HeightForWidth(const KFilePlaceEditDialog* self, int param1);
void KFilePlaceEditDialog_OnHeightForWidth(const KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseHeightForWidth(const KFilePlaceEditDialog* self, int param1);
bool KFilePlaceEditDialog_HasHeightForWidth(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnHasHeightForWidth(const KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseHasHeightForWidth(const KFilePlaceEditDialog* self);
QPaintEngine* KFilePlaceEditDialog_PaintEngine(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnPaintEngine(const KFilePlaceEditDialog* self, intptr_t slot);
QPaintEngine* KFilePlaceEditDialog_QBasePaintEngine(const KFilePlaceEditDialog* self);
bool KFilePlaceEditDialog_Event(KFilePlaceEditDialog* self, QEvent* event);
void KFilePlaceEditDialog_OnEvent(KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseEvent(KFilePlaceEditDialog* self, QEvent* event);
void KFilePlaceEditDialog_MousePressEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_OnMousePressEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseMousePressEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_MouseReleaseEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_OnMouseReleaseEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseMouseReleaseEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_MouseDoubleClickEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_OnMouseDoubleClickEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseMouseDoubleClickEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_MouseMoveEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_OnMouseMoveEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseMouseMoveEvent(KFilePlaceEditDialog* self, QMouseEvent* event);
void KFilePlaceEditDialog_WheelEvent(KFilePlaceEditDialog* self, QWheelEvent* event);
void KFilePlaceEditDialog_OnWheelEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseWheelEvent(KFilePlaceEditDialog* self, QWheelEvent* event);
void KFilePlaceEditDialog_KeyReleaseEvent(KFilePlaceEditDialog* self, QKeyEvent* event);
void KFilePlaceEditDialog_OnKeyReleaseEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseKeyReleaseEvent(KFilePlaceEditDialog* self, QKeyEvent* event);
void KFilePlaceEditDialog_FocusInEvent(KFilePlaceEditDialog* self, QFocusEvent* event);
void KFilePlaceEditDialog_OnFocusInEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseFocusInEvent(KFilePlaceEditDialog* self, QFocusEvent* event);
void KFilePlaceEditDialog_FocusOutEvent(KFilePlaceEditDialog* self, QFocusEvent* event);
void KFilePlaceEditDialog_OnFocusOutEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseFocusOutEvent(KFilePlaceEditDialog* self, QFocusEvent* event);
void KFilePlaceEditDialog_EnterEvent(KFilePlaceEditDialog* self, QEnterEvent* event);
void KFilePlaceEditDialog_OnEnterEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseEnterEvent(KFilePlaceEditDialog* self, QEnterEvent* event);
void KFilePlaceEditDialog_LeaveEvent(KFilePlaceEditDialog* self, QEvent* event);
void KFilePlaceEditDialog_OnLeaveEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseLeaveEvent(KFilePlaceEditDialog* self, QEvent* event);
void KFilePlaceEditDialog_PaintEvent(KFilePlaceEditDialog* self, QPaintEvent* event);
void KFilePlaceEditDialog_OnPaintEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBasePaintEvent(KFilePlaceEditDialog* self, QPaintEvent* event);
void KFilePlaceEditDialog_MoveEvent(KFilePlaceEditDialog* self, QMoveEvent* event);
void KFilePlaceEditDialog_OnMoveEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseMoveEvent(KFilePlaceEditDialog* self, QMoveEvent* event);
void KFilePlaceEditDialog_TabletEvent(KFilePlaceEditDialog* self, QTabletEvent* event);
void KFilePlaceEditDialog_OnTabletEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseTabletEvent(KFilePlaceEditDialog* self, QTabletEvent* event);
void KFilePlaceEditDialog_ActionEvent(KFilePlaceEditDialog* self, QActionEvent* event);
void KFilePlaceEditDialog_OnActionEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseActionEvent(KFilePlaceEditDialog* self, QActionEvent* event);
void KFilePlaceEditDialog_DragEnterEvent(KFilePlaceEditDialog* self, QDragEnterEvent* event);
void KFilePlaceEditDialog_OnDragEnterEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDragEnterEvent(KFilePlaceEditDialog* self, QDragEnterEvent* event);
void KFilePlaceEditDialog_DragMoveEvent(KFilePlaceEditDialog* self, QDragMoveEvent* event);
void KFilePlaceEditDialog_OnDragMoveEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDragMoveEvent(KFilePlaceEditDialog* self, QDragMoveEvent* event);
void KFilePlaceEditDialog_DragLeaveEvent(KFilePlaceEditDialog* self, QDragLeaveEvent* event);
void KFilePlaceEditDialog_OnDragLeaveEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDragLeaveEvent(KFilePlaceEditDialog* self, QDragLeaveEvent* event);
void KFilePlaceEditDialog_DropEvent(KFilePlaceEditDialog* self, QDropEvent* event);
void KFilePlaceEditDialog_OnDropEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDropEvent(KFilePlaceEditDialog* self, QDropEvent* event);
void KFilePlaceEditDialog_HideEvent(KFilePlaceEditDialog* self, QHideEvent* event);
void KFilePlaceEditDialog_OnHideEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseHideEvent(KFilePlaceEditDialog* self, QHideEvent* event);
bool KFilePlaceEditDialog_NativeEvent(KFilePlaceEditDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KFilePlaceEditDialog_OnNativeEvent(KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseNativeEvent(KFilePlaceEditDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KFilePlaceEditDialog_ChangeEvent(KFilePlaceEditDialog* self, QEvent* param1);
void KFilePlaceEditDialog_OnChangeEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseChangeEvent(KFilePlaceEditDialog* self, QEvent* param1);
int KFilePlaceEditDialog_Metric(const KFilePlaceEditDialog* self, int param1);
void KFilePlaceEditDialog_OnMetric(const KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseMetric(const KFilePlaceEditDialog* self, int param1);
void KFilePlaceEditDialog_InitPainter(const KFilePlaceEditDialog* self, QPainter* painter);
void KFilePlaceEditDialog_OnInitPainter(const KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseInitPainter(const KFilePlaceEditDialog* self, QPainter* painter);
QPaintDevice* KFilePlaceEditDialog_Redirected(const KFilePlaceEditDialog* self, QPoint* offset);
void KFilePlaceEditDialog_OnRedirected(const KFilePlaceEditDialog* self, intptr_t slot);
QPaintDevice* KFilePlaceEditDialog_QBaseRedirected(const KFilePlaceEditDialog* self, QPoint* offset);
QPainter* KFilePlaceEditDialog_SharedPainter(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnSharedPainter(const KFilePlaceEditDialog* self, intptr_t slot);
QPainter* KFilePlaceEditDialog_QBaseSharedPainter(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_InputMethodEvent(KFilePlaceEditDialog* self, QInputMethodEvent* param1);
void KFilePlaceEditDialog_OnInputMethodEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseInputMethodEvent(KFilePlaceEditDialog* self, QInputMethodEvent* param1);
QVariant* KFilePlaceEditDialog_InputMethodQuery(const KFilePlaceEditDialog* self, int param1);
void KFilePlaceEditDialog_OnInputMethodQuery(const KFilePlaceEditDialog* self, intptr_t slot);
QVariant* KFilePlaceEditDialog_QBaseInputMethodQuery(const KFilePlaceEditDialog* self, int param1);
bool KFilePlaceEditDialog_FocusNextPrevChild(KFilePlaceEditDialog* self, bool next);
void KFilePlaceEditDialog_OnFocusNextPrevChild(KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseFocusNextPrevChild(KFilePlaceEditDialog* self, bool next);
void KFilePlaceEditDialog_TimerEvent(KFilePlaceEditDialog* self, QTimerEvent* event);
void KFilePlaceEditDialog_OnTimerEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseTimerEvent(KFilePlaceEditDialog* self, QTimerEvent* event);
void KFilePlaceEditDialog_ChildEvent(KFilePlaceEditDialog* self, QChildEvent* event);
void KFilePlaceEditDialog_OnChildEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseChildEvent(KFilePlaceEditDialog* self, QChildEvent* event);
void KFilePlaceEditDialog_CustomEvent(KFilePlaceEditDialog* self, QEvent* event);
void KFilePlaceEditDialog_OnCustomEvent(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseCustomEvent(KFilePlaceEditDialog* self, QEvent* event);
void KFilePlaceEditDialog_ConnectNotify(KFilePlaceEditDialog* self, const QMetaMethod* signal);
void KFilePlaceEditDialog_OnConnectNotify(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseConnectNotify(KFilePlaceEditDialog* self, const QMetaMethod* signal);
void KFilePlaceEditDialog_DisconnectNotify(KFilePlaceEditDialog* self, const QMetaMethod* signal);
void KFilePlaceEditDialog_OnDisconnectNotify(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDisconnectNotify(KFilePlaceEditDialog* self, const QMetaMethod* signal);
void KFilePlaceEditDialog_AdjustPosition(KFilePlaceEditDialog* self, QWidget* param1);
void KFilePlaceEditDialog_OnAdjustPosition(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseAdjustPosition(KFilePlaceEditDialog* self, QWidget* param1);
void KFilePlaceEditDialog_UpdateMicroFocus(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnUpdateMicroFocus(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseUpdateMicroFocus(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_Create(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnCreate(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseCreate(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_Destroy(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnDestroy(KFilePlaceEditDialog* self, intptr_t slot);
void KFilePlaceEditDialog_QBaseDestroy(KFilePlaceEditDialog* self);
bool KFilePlaceEditDialog_FocusNextChild(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnFocusNextChild(KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseFocusNextChild(KFilePlaceEditDialog* self);
bool KFilePlaceEditDialog_FocusPreviousChild(KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnFocusPreviousChild(KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseFocusPreviousChild(KFilePlaceEditDialog* self);
QObject* KFilePlaceEditDialog_Sender(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnSender(const KFilePlaceEditDialog* self, intptr_t slot);
QObject* KFilePlaceEditDialog_QBaseSender(const KFilePlaceEditDialog* self);
int KFilePlaceEditDialog_SenderSignalIndex(const KFilePlaceEditDialog* self);
void KFilePlaceEditDialog_OnSenderSignalIndex(const KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseSenderSignalIndex(const KFilePlaceEditDialog* self);
int KFilePlaceEditDialog_Receivers(const KFilePlaceEditDialog* self, const char* signal);
void KFilePlaceEditDialog_OnReceivers(const KFilePlaceEditDialog* self, intptr_t slot);
int KFilePlaceEditDialog_QBaseReceivers(const KFilePlaceEditDialog* self, const char* signal);
bool KFilePlaceEditDialog_IsSignalConnected(const KFilePlaceEditDialog* self, const QMetaMethod* signal);
void KFilePlaceEditDialog_OnIsSignalConnected(const KFilePlaceEditDialog* self, intptr_t slot);
bool KFilePlaceEditDialog_QBaseIsSignalConnected(const KFilePlaceEditDialog* self, const QMetaMethod* signal);
double KFilePlaceEditDialog_GetDecodedMetricF(const KFilePlaceEditDialog* self, int metricA, int metricB);
void KFilePlaceEditDialog_OnGetDecodedMetricF(const KFilePlaceEditDialog* self, intptr_t slot);
double KFilePlaceEditDialog_QBaseGetDecodedMetricF(const KFilePlaceEditDialog* self, int metricA, int metricB);
void KFilePlaceEditDialog_Delete(KFilePlaceEditDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
