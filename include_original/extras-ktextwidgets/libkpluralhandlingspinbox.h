#pragma once
#ifndef SRC_EXTRAS_KTEXTWIDGETSC_LIBKPLURALHANDLINGSPINBOX_H
#define SRC_EXTRAS_KTEXTWIDGETSC_LIBKPLURALHANDLINGSPINBOX_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KLocalizedString KLocalizedString;
typedef struct KPluralHandlingSpinBox KPluralHandlingSpinBox;
typedef struct QAbstractSpinBox QAbstractSpinBox;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QLineEdit QLineEdit;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QSpinBox QSpinBox;
typedef struct QStyleOptionSpinBox QStyleOptionSpinBox;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KPluralHandlingSpinBox* KPluralHandlingSpinBox_new(QWidget* parent);
KPluralHandlingSpinBox* KPluralHandlingSpinBox_new2();
QMetaObject* KPluralHandlingSpinBox_MetaObject(const KPluralHandlingSpinBox* self);
void* KPluralHandlingSpinBox_Metacast(KPluralHandlingSpinBox* self, const char* param1);
int KPluralHandlingSpinBox_Metacall(KPluralHandlingSpinBox* self, int param1, int param2, void** param3);
libqt_string KPluralHandlingSpinBox_Tr(const char* s);
void KPluralHandlingSpinBox_SetSuffix(KPluralHandlingSpinBox* self, const KLocalizedString* suffix);
libqt_string KPluralHandlingSpinBox_Tr2(const char* s, const char* c);
libqt_string KPluralHandlingSpinBox_Tr3(const char* s, const char* c, int n);
void KPluralHandlingSpinBox_OnMetacall(KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseMetacall(KPluralHandlingSpinBox* self, int param1, int param2, void** param3);
bool KPluralHandlingSpinBox_Event(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_OnEvent(KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseEvent(KPluralHandlingSpinBox* self, QEvent* event);
int KPluralHandlingSpinBox_Validate(const KPluralHandlingSpinBox* self, libqt_string input, int* pos);
void KPluralHandlingSpinBox_OnValidate(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseValidate(const KPluralHandlingSpinBox* self, libqt_string input, int* pos);
int KPluralHandlingSpinBox_ValueFromText(const KPluralHandlingSpinBox* self, const libqt_string text);
void KPluralHandlingSpinBox_OnValueFromText(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseValueFromText(const KPluralHandlingSpinBox* self, const libqt_string text);
libqt_string KPluralHandlingSpinBox_TextFromValue(const KPluralHandlingSpinBox* self, int val);
void KPluralHandlingSpinBox_OnTextFromValue(const KPluralHandlingSpinBox* self, intptr_t slot);
libqt_string KPluralHandlingSpinBox_QBaseTextFromValue(const KPluralHandlingSpinBox* self, int val);
void KPluralHandlingSpinBox_Fixup(const KPluralHandlingSpinBox* self, libqt_string str);
void KPluralHandlingSpinBox_OnFixup(const KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseFixup(const KPluralHandlingSpinBox* self, libqt_string str);
QSize* KPluralHandlingSpinBox_SizeHint(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnSizeHint(const KPluralHandlingSpinBox* self, intptr_t slot);
QSize* KPluralHandlingSpinBox_QBaseSizeHint(const KPluralHandlingSpinBox* self);
QSize* KPluralHandlingSpinBox_MinimumSizeHint(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnMinimumSizeHint(const KPluralHandlingSpinBox* self, intptr_t slot);
QSize* KPluralHandlingSpinBox_QBaseMinimumSizeHint(const KPluralHandlingSpinBox* self);
QVariant* KPluralHandlingSpinBox_InputMethodQuery(const KPluralHandlingSpinBox* self, int param1);
void KPluralHandlingSpinBox_OnInputMethodQuery(const KPluralHandlingSpinBox* self, intptr_t slot);
QVariant* KPluralHandlingSpinBox_QBaseInputMethodQuery(const KPluralHandlingSpinBox* self, int param1);
void KPluralHandlingSpinBox_StepBy(KPluralHandlingSpinBox* self, int steps);
void KPluralHandlingSpinBox_OnStepBy(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseStepBy(KPluralHandlingSpinBox* self, int steps);
void KPluralHandlingSpinBox_Clear(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnClear(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseClear(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_ResizeEvent(KPluralHandlingSpinBox* self, QResizeEvent* event);
void KPluralHandlingSpinBox_OnResizeEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseResizeEvent(KPluralHandlingSpinBox* self, QResizeEvent* event);
void KPluralHandlingSpinBox_KeyPressEvent(KPluralHandlingSpinBox* self, QKeyEvent* event);
void KPluralHandlingSpinBox_OnKeyPressEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseKeyPressEvent(KPluralHandlingSpinBox* self, QKeyEvent* event);
void KPluralHandlingSpinBox_KeyReleaseEvent(KPluralHandlingSpinBox* self, QKeyEvent* event);
void KPluralHandlingSpinBox_OnKeyReleaseEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseKeyReleaseEvent(KPluralHandlingSpinBox* self, QKeyEvent* event);
void KPluralHandlingSpinBox_WheelEvent(KPluralHandlingSpinBox* self, QWheelEvent* event);
void KPluralHandlingSpinBox_OnWheelEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseWheelEvent(KPluralHandlingSpinBox* self, QWheelEvent* event);
void KPluralHandlingSpinBox_FocusInEvent(KPluralHandlingSpinBox* self, QFocusEvent* event);
void KPluralHandlingSpinBox_OnFocusInEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseFocusInEvent(KPluralHandlingSpinBox* self, QFocusEvent* event);
void KPluralHandlingSpinBox_FocusOutEvent(KPluralHandlingSpinBox* self, QFocusEvent* event);
void KPluralHandlingSpinBox_OnFocusOutEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseFocusOutEvent(KPluralHandlingSpinBox* self, QFocusEvent* event);
void KPluralHandlingSpinBox_ContextMenuEvent(KPluralHandlingSpinBox* self, QContextMenuEvent* event);
void KPluralHandlingSpinBox_OnContextMenuEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseContextMenuEvent(KPluralHandlingSpinBox* self, QContextMenuEvent* event);
void KPluralHandlingSpinBox_ChangeEvent(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_OnChangeEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseChangeEvent(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_CloseEvent(KPluralHandlingSpinBox* self, QCloseEvent* event);
void KPluralHandlingSpinBox_OnCloseEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseCloseEvent(KPluralHandlingSpinBox* self, QCloseEvent* event);
void KPluralHandlingSpinBox_HideEvent(KPluralHandlingSpinBox* self, QHideEvent* event);
void KPluralHandlingSpinBox_OnHideEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseHideEvent(KPluralHandlingSpinBox* self, QHideEvent* event);
void KPluralHandlingSpinBox_MousePressEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_OnMousePressEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseMousePressEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_MouseReleaseEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_OnMouseReleaseEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseMouseReleaseEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_MouseMoveEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_OnMouseMoveEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseMouseMoveEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_TimerEvent(KPluralHandlingSpinBox* self, QTimerEvent* event);
void KPluralHandlingSpinBox_OnTimerEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseTimerEvent(KPluralHandlingSpinBox* self, QTimerEvent* event);
void KPluralHandlingSpinBox_PaintEvent(KPluralHandlingSpinBox* self, QPaintEvent* event);
void KPluralHandlingSpinBox_OnPaintEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBasePaintEvent(KPluralHandlingSpinBox* self, QPaintEvent* event);
void KPluralHandlingSpinBox_ShowEvent(KPluralHandlingSpinBox* self, QShowEvent* event);
void KPluralHandlingSpinBox_OnShowEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseShowEvent(KPluralHandlingSpinBox* self, QShowEvent* event);
void KPluralHandlingSpinBox_InitStyleOption(const KPluralHandlingSpinBox* self, QStyleOptionSpinBox* option);
void KPluralHandlingSpinBox_OnInitStyleOption(const KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseInitStyleOption(const KPluralHandlingSpinBox* self, QStyleOptionSpinBox* option);
int KPluralHandlingSpinBox_StepEnabled(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnStepEnabled(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseStepEnabled(const KPluralHandlingSpinBox* self);
int KPluralHandlingSpinBox_DevType(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnDevType(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseDevType(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_SetVisible(KPluralHandlingSpinBox* self, bool visible);
void KPluralHandlingSpinBox_OnSetVisible(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseSetVisible(KPluralHandlingSpinBox* self, bool visible);
int KPluralHandlingSpinBox_HeightForWidth(const KPluralHandlingSpinBox* self, int param1);
void KPluralHandlingSpinBox_OnHeightForWidth(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseHeightForWidth(const KPluralHandlingSpinBox* self, int param1);
bool KPluralHandlingSpinBox_HasHeightForWidth(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnHasHeightForWidth(const KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseHasHeightForWidth(const KPluralHandlingSpinBox* self);
QPaintEngine* KPluralHandlingSpinBox_PaintEngine(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnPaintEngine(const KPluralHandlingSpinBox* self, intptr_t slot);
QPaintEngine* KPluralHandlingSpinBox_QBasePaintEngine(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_MouseDoubleClickEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_OnMouseDoubleClickEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseMouseDoubleClickEvent(KPluralHandlingSpinBox* self, QMouseEvent* event);
void KPluralHandlingSpinBox_EnterEvent(KPluralHandlingSpinBox* self, QEnterEvent* event);
void KPluralHandlingSpinBox_OnEnterEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseEnterEvent(KPluralHandlingSpinBox* self, QEnterEvent* event);
void KPluralHandlingSpinBox_LeaveEvent(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_OnLeaveEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseLeaveEvent(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_MoveEvent(KPluralHandlingSpinBox* self, QMoveEvent* event);
void KPluralHandlingSpinBox_OnMoveEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseMoveEvent(KPluralHandlingSpinBox* self, QMoveEvent* event);
void KPluralHandlingSpinBox_TabletEvent(KPluralHandlingSpinBox* self, QTabletEvent* event);
void KPluralHandlingSpinBox_OnTabletEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseTabletEvent(KPluralHandlingSpinBox* self, QTabletEvent* event);
void KPluralHandlingSpinBox_ActionEvent(KPluralHandlingSpinBox* self, QActionEvent* event);
void KPluralHandlingSpinBox_OnActionEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseActionEvent(KPluralHandlingSpinBox* self, QActionEvent* event);
void KPluralHandlingSpinBox_DragEnterEvent(KPluralHandlingSpinBox* self, QDragEnterEvent* event);
void KPluralHandlingSpinBox_OnDragEnterEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseDragEnterEvent(KPluralHandlingSpinBox* self, QDragEnterEvent* event);
void KPluralHandlingSpinBox_DragMoveEvent(KPluralHandlingSpinBox* self, QDragMoveEvent* event);
void KPluralHandlingSpinBox_OnDragMoveEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseDragMoveEvent(KPluralHandlingSpinBox* self, QDragMoveEvent* event);
void KPluralHandlingSpinBox_DragLeaveEvent(KPluralHandlingSpinBox* self, QDragLeaveEvent* event);
void KPluralHandlingSpinBox_OnDragLeaveEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseDragLeaveEvent(KPluralHandlingSpinBox* self, QDragLeaveEvent* event);
void KPluralHandlingSpinBox_DropEvent(KPluralHandlingSpinBox* self, QDropEvent* event);
void KPluralHandlingSpinBox_OnDropEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseDropEvent(KPluralHandlingSpinBox* self, QDropEvent* event);
bool KPluralHandlingSpinBox_NativeEvent(KPluralHandlingSpinBox* self, const libqt_string eventType, void* message, intptr_t* result);
void KPluralHandlingSpinBox_OnNativeEvent(KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseNativeEvent(KPluralHandlingSpinBox* self, const libqt_string eventType, void* message, intptr_t* result);
int KPluralHandlingSpinBox_Metric(const KPluralHandlingSpinBox* self, int param1);
void KPluralHandlingSpinBox_OnMetric(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseMetric(const KPluralHandlingSpinBox* self, int param1);
void KPluralHandlingSpinBox_InitPainter(const KPluralHandlingSpinBox* self, QPainter* painter);
void KPluralHandlingSpinBox_OnInitPainter(const KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseInitPainter(const KPluralHandlingSpinBox* self, QPainter* painter);
QPaintDevice* KPluralHandlingSpinBox_Redirected(const KPluralHandlingSpinBox* self, QPoint* offset);
void KPluralHandlingSpinBox_OnRedirected(const KPluralHandlingSpinBox* self, intptr_t slot);
QPaintDevice* KPluralHandlingSpinBox_QBaseRedirected(const KPluralHandlingSpinBox* self, QPoint* offset);
QPainter* KPluralHandlingSpinBox_SharedPainter(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnSharedPainter(const KPluralHandlingSpinBox* self, intptr_t slot);
QPainter* KPluralHandlingSpinBox_QBaseSharedPainter(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_InputMethodEvent(KPluralHandlingSpinBox* self, QInputMethodEvent* param1);
void KPluralHandlingSpinBox_OnInputMethodEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseInputMethodEvent(KPluralHandlingSpinBox* self, QInputMethodEvent* param1);
bool KPluralHandlingSpinBox_FocusNextPrevChild(KPluralHandlingSpinBox* self, bool next);
void KPluralHandlingSpinBox_OnFocusNextPrevChild(KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseFocusNextPrevChild(KPluralHandlingSpinBox* self, bool next);
bool KPluralHandlingSpinBox_EventFilter(KPluralHandlingSpinBox* self, QObject* watched, QEvent* event);
void KPluralHandlingSpinBox_OnEventFilter(KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseEventFilter(KPluralHandlingSpinBox* self, QObject* watched, QEvent* event);
void KPluralHandlingSpinBox_ChildEvent(KPluralHandlingSpinBox* self, QChildEvent* event);
void KPluralHandlingSpinBox_OnChildEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseChildEvent(KPluralHandlingSpinBox* self, QChildEvent* event);
void KPluralHandlingSpinBox_CustomEvent(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_OnCustomEvent(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseCustomEvent(KPluralHandlingSpinBox* self, QEvent* event);
void KPluralHandlingSpinBox_ConnectNotify(KPluralHandlingSpinBox* self, const QMetaMethod* signal);
void KPluralHandlingSpinBox_OnConnectNotify(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseConnectNotify(KPluralHandlingSpinBox* self, const QMetaMethod* signal);
void KPluralHandlingSpinBox_DisconnectNotify(KPluralHandlingSpinBox* self, const QMetaMethod* signal);
void KPluralHandlingSpinBox_OnDisconnectNotify(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseDisconnectNotify(KPluralHandlingSpinBox* self, const QMetaMethod* signal);
QLineEdit* KPluralHandlingSpinBox_LineEdit(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnLineEdit(const KPluralHandlingSpinBox* self, intptr_t slot);
QLineEdit* KPluralHandlingSpinBox_QBaseLineEdit(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_SetLineEdit(KPluralHandlingSpinBox* self, QLineEdit* edit);
void KPluralHandlingSpinBox_OnSetLineEdit(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseSetLineEdit(KPluralHandlingSpinBox* self, QLineEdit* edit);
void KPluralHandlingSpinBox_UpdateMicroFocus(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnUpdateMicroFocus(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseUpdateMicroFocus(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_Create(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnCreate(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseCreate(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_Destroy(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnDestroy(KPluralHandlingSpinBox* self, intptr_t slot);
void KPluralHandlingSpinBox_QBaseDestroy(KPluralHandlingSpinBox* self);
bool KPluralHandlingSpinBox_FocusNextChild(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnFocusNextChild(KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseFocusNextChild(KPluralHandlingSpinBox* self);
bool KPluralHandlingSpinBox_FocusPreviousChild(KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnFocusPreviousChild(KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseFocusPreviousChild(KPluralHandlingSpinBox* self);
QObject* KPluralHandlingSpinBox_Sender(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnSender(const KPluralHandlingSpinBox* self, intptr_t slot);
QObject* KPluralHandlingSpinBox_QBaseSender(const KPluralHandlingSpinBox* self);
int KPluralHandlingSpinBox_SenderSignalIndex(const KPluralHandlingSpinBox* self);
void KPluralHandlingSpinBox_OnSenderSignalIndex(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseSenderSignalIndex(const KPluralHandlingSpinBox* self);
int KPluralHandlingSpinBox_Receivers(const KPluralHandlingSpinBox* self, const char* signal);
void KPluralHandlingSpinBox_OnReceivers(const KPluralHandlingSpinBox* self, intptr_t slot);
int KPluralHandlingSpinBox_QBaseReceivers(const KPluralHandlingSpinBox* self, const char* signal);
bool KPluralHandlingSpinBox_IsSignalConnected(const KPluralHandlingSpinBox* self, const QMetaMethod* signal);
void KPluralHandlingSpinBox_OnIsSignalConnected(const KPluralHandlingSpinBox* self, intptr_t slot);
bool KPluralHandlingSpinBox_QBaseIsSignalConnected(const KPluralHandlingSpinBox* self, const QMetaMethod* signal);
double KPluralHandlingSpinBox_GetDecodedMetricF(const KPluralHandlingSpinBox* self, int metricA, int metricB);
void KPluralHandlingSpinBox_OnGetDecodedMetricF(const KPluralHandlingSpinBox* self, intptr_t slot);
double KPluralHandlingSpinBox_QBaseGetDecodedMetricF(const KPluralHandlingSpinBox* self, int metricA, int metricB);
void KPluralHandlingSpinBox_Delete(KPluralHandlingSpinBox* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
