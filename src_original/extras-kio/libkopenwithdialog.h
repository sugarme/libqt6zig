#pragma once
#ifndef SRC_EXTRAS_KIOC_LIBKOPENWITHDIALOG_H
#define SRC_EXTRAS_KIOC_LIBKOPENWITHDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KOpenWithDialog KOpenWithDialog;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KOpenWithDialog* KOpenWithDialog_new(QWidget* parent);
KOpenWithDialog* KOpenWithDialog_new2(const libqt_list /* of QUrl* */ urls);
KOpenWithDialog* KOpenWithDialog_new3(const libqt_list /* of QUrl* */ urls, const libqt_string text, const libqt_string value);
KOpenWithDialog* KOpenWithDialog_new4(const libqt_string mimeType, const libqt_string value);
KOpenWithDialog* KOpenWithDialog_new5(const libqt_list /* of QUrl* */ urls, const libqt_string mimeType, const libqt_string text, const libqt_string value);
KOpenWithDialog* KOpenWithDialog_new6();
KOpenWithDialog* KOpenWithDialog_new7(const libqt_list /* of QUrl* */ urls, QWidget* parent);
KOpenWithDialog* KOpenWithDialog_new8(const libqt_list /* of QUrl* */ urls, const libqt_string text, const libqt_string value, QWidget* parent);
KOpenWithDialog* KOpenWithDialog_new9(const libqt_string mimeType, const libqt_string value, QWidget* parent);
KOpenWithDialog* KOpenWithDialog_new10(const libqt_list /* of QUrl* */ urls, const libqt_string mimeType, const libqt_string text, const libqt_string value, QWidget* parent);
QMetaObject* KOpenWithDialog_MetaObject(const KOpenWithDialog* self);
void* KOpenWithDialog_Metacast(KOpenWithDialog* self, const char* param1);
int KOpenWithDialog_Metacall(KOpenWithDialog* self, int param1, int param2, void** param3);
libqt_string KOpenWithDialog_Tr(const char* s);
libqt_string KOpenWithDialog_Text(const KOpenWithDialog* self);
void KOpenWithDialog_HideNoCloseOnExit(KOpenWithDialog* self);
void KOpenWithDialog_HideRunInTerminal(KOpenWithDialog* self);
void KOpenWithDialog_SetSaveNewApplications(KOpenWithDialog* self, bool b);
void KOpenWithDialog_SlotSelected(KOpenWithDialog* self, const libqt_string _name, const libqt_string _exec);
void KOpenWithDialog_SlotHighlighted(KOpenWithDialog* self, const libqt_string _name, const libqt_string _exec);
void KOpenWithDialog_SlotTextChanged(KOpenWithDialog* self);
void KOpenWithDialog_SlotTerminalToggled(KOpenWithDialog* self, bool param1);
void KOpenWithDialog_Accept(KOpenWithDialog* self);
libqt_string KOpenWithDialog_Tr2(const char* s, const char* c);
libqt_string KOpenWithDialog_Tr3(const char* s, const char* c, int n);
void KOpenWithDialog_OnMetacall(KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseMetacall(KOpenWithDialog* self, int param1, int param2, void** param3);
void KOpenWithDialog_OnAccept(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseAccept(KOpenWithDialog* self);
void KOpenWithDialog_SetVisible(KOpenWithDialog* self, bool visible);
void KOpenWithDialog_OnSetVisible(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseSetVisible(KOpenWithDialog* self, bool visible);
QSize* KOpenWithDialog_SizeHint(const KOpenWithDialog* self);
void KOpenWithDialog_OnSizeHint(const KOpenWithDialog* self, intptr_t slot);
QSize* KOpenWithDialog_QBaseSizeHint(const KOpenWithDialog* self);
QSize* KOpenWithDialog_MinimumSizeHint(const KOpenWithDialog* self);
void KOpenWithDialog_OnMinimumSizeHint(const KOpenWithDialog* self, intptr_t slot);
QSize* KOpenWithDialog_QBaseMinimumSizeHint(const KOpenWithDialog* self);
void KOpenWithDialog_Open(KOpenWithDialog* self);
void KOpenWithDialog_OnOpen(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseOpen(KOpenWithDialog* self);
int KOpenWithDialog_Exec(KOpenWithDialog* self);
void KOpenWithDialog_OnExec(KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseExec(KOpenWithDialog* self);
void KOpenWithDialog_Done(KOpenWithDialog* self, int param1);
void KOpenWithDialog_OnDone(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDone(KOpenWithDialog* self, int param1);
void KOpenWithDialog_Reject(KOpenWithDialog* self);
void KOpenWithDialog_OnReject(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseReject(KOpenWithDialog* self);
void KOpenWithDialog_KeyPressEvent(KOpenWithDialog* self, QKeyEvent* param1);
void KOpenWithDialog_OnKeyPressEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseKeyPressEvent(KOpenWithDialog* self, QKeyEvent* param1);
void KOpenWithDialog_CloseEvent(KOpenWithDialog* self, QCloseEvent* param1);
void KOpenWithDialog_OnCloseEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseCloseEvent(KOpenWithDialog* self, QCloseEvent* param1);
void KOpenWithDialog_ShowEvent(KOpenWithDialog* self, QShowEvent* param1);
void KOpenWithDialog_OnShowEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseShowEvent(KOpenWithDialog* self, QShowEvent* param1);
void KOpenWithDialog_ResizeEvent(KOpenWithDialog* self, QResizeEvent* param1);
void KOpenWithDialog_OnResizeEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseResizeEvent(KOpenWithDialog* self, QResizeEvent* param1);
void KOpenWithDialog_ContextMenuEvent(KOpenWithDialog* self, QContextMenuEvent* param1);
void KOpenWithDialog_OnContextMenuEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseContextMenuEvent(KOpenWithDialog* self, QContextMenuEvent* param1);
int KOpenWithDialog_DevType(const KOpenWithDialog* self);
void KOpenWithDialog_OnDevType(const KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseDevType(const KOpenWithDialog* self);
int KOpenWithDialog_HeightForWidth(const KOpenWithDialog* self, int param1);
void KOpenWithDialog_OnHeightForWidth(const KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseHeightForWidth(const KOpenWithDialog* self, int param1);
bool KOpenWithDialog_HasHeightForWidth(const KOpenWithDialog* self);
void KOpenWithDialog_OnHasHeightForWidth(const KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseHasHeightForWidth(const KOpenWithDialog* self);
QPaintEngine* KOpenWithDialog_PaintEngine(const KOpenWithDialog* self);
void KOpenWithDialog_OnPaintEngine(const KOpenWithDialog* self, intptr_t slot);
QPaintEngine* KOpenWithDialog_QBasePaintEngine(const KOpenWithDialog* self);
bool KOpenWithDialog_Event(KOpenWithDialog* self, QEvent* event);
void KOpenWithDialog_OnEvent(KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseEvent(KOpenWithDialog* self, QEvent* event);
void KOpenWithDialog_MousePressEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_OnMousePressEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseMousePressEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_MouseReleaseEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_OnMouseReleaseEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseMouseReleaseEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_MouseDoubleClickEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_OnMouseDoubleClickEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseMouseDoubleClickEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_MouseMoveEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_OnMouseMoveEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseMouseMoveEvent(KOpenWithDialog* self, QMouseEvent* event);
void KOpenWithDialog_WheelEvent(KOpenWithDialog* self, QWheelEvent* event);
void KOpenWithDialog_OnWheelEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseWheelEvent(KOpenWithDialog* self, QWheelEvent* event);
void KOpenWithDialog_KeyReleaseEvent(KOpenWithDialog* self, QKeyEvent* event);
void KOpenWithDialog_OnKeyReleaseEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseKeyReleaseEvent(KOpenWithDialog* self, QKeyEvent* event);
void KOpenWithDialog_FocusInEvent(KOpenWithDialog* self, QFocusEvent* event);
void KOpenWithDialog_OnFocusInEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseFocusInEvent(KOpenWithDialog* self, QFocusEvent* event);
void KOpenWithDialog_FocusOutEvent(KOpenWithDialog* self, QFocusEvent* event);
void KOpenWithDialog_OnFocusOutEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseFocusOutEvent(KOpenWithDialog* self, QFocusEvent* event);
void KOpenWithDialog_EnterEvent(KOpenWithDialog* self, QEnterEvent* event);
void KOpenWithDialog_OnEnterEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseEnterEvent(KOpenWithDialog* self, QEnterEvent* event);
void KOpenWithDialog_LeaveEvent(KOpenWithDialog* self, QEvent* event);
void KOpenWithDialog_OnLeaveEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseLeaveEvent(KOpenWithDialog* self, QEvent* event);
void KOpenWithDialog_PaintEvent(KOpenWithDialog* self, QPaintEvent* event);
void KOpenWithDialog_OnPaintEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBasePaintEvent(KOpenWithDialog* self, QPaintEvent* event);
void KOpenWithDialog_MoveEvent(KOpenWithDialog* self, QMoveEvent* event);
void KOpenWithDialog_OnMoveEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseMoveEvent(KOpenWithDialog* self, QMoveEvent* event);
void KOpenWithDialog_TabletEvent(KOpenWithDialog* self, QTabletEvent* event);
void KOpenWithDialog_OnTabletEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseTabletEvent(KOpenWithDialog* self, QTabletEvent* event);
void KOpenWithDialog_ActionEvent(KOpenWithDialog* self, QActionEvent* event);
void KOpenWithDialog_OnActionEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseActionEvent(KOpenWithDialog* self, QActionEvent* event);
void KOpenWithDialog_DragEnterEvent(KOpenWithDialog* self, QDragEnterEvent* event);
void KOpenWithDialog_OnDragEnterEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDragEnterEvent(KOpenWithDialog* self, QDragEnterEvent* event);
void KOpenWithDialog_DragMoveEvent(KOpenWithDialog* self, QDragMoveEvent* event);
void KOpenWithDialog_OnDragMoveEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDragMoveEvent(KOpenWithDialog* self, QDragMoveEvent* event);
void KOpenWithDialog_DragLeaveEvent(KOpenWithDialog* self, QDragLeaveEvent* event);
void KOpenWithDialog_OnDragLeaveEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDragLeaveEvent(KOpenWithDialog* self, QDragLeaveEvent* event);
void KOpenWithDialog_DropEvent(KOpenWithDialog* self, QDropEvent* event);
void KOpenWithDialog_OnDropEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDropEvent(KOpenWithDialog* self, QDropEvent* event);
void KOpenWithDialog_HideEvent(KOpenWithDialog* self, QHideEvent* event);
void KOpenWithDialog_OnHideEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseHideEvent(KOpenWithDialog* self, QHideEvent* event);
bool KOpenWithDialog_NativeEvent(KOpenWithDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KOpenWithDialog_OnNativeEvent(KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseNativeEvent(KOpenWithDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KOpenWithDialog_ChangeEvent(KOpenWithDialog* self, QEvent* param1);
void KOpenWithDialog_OnChangeEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseChangeEvent(KOpenWithDialog* self, QEvent* param1);
int KOpenWithDialog_Metric(const KOpenWithDialog* self, int param1);
void KOpenWithDialog_OnMetric(const KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseMetric(const KOpenWithDialog* self, int param1);
void KOpenWithDialog_InitPainter(const KOpenWithDialog* self, QPainter* painter);
void KOpenWithDialog_OnInitPainter(const KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseInitPainter(const KOpenWithDialog* self, QPainter* painter);
QPaintDevice* KOpenWithDialog_Redirected(const KOpenWithDialog* self, QPoint* offset);
void KOpenWithDialog_OnRedirected(const KOpenWithDialog* self, intptr_t slot);
QPaintDevice* KOpenWithDialog_QBaseRedirected(const KOpenWithDialog* self, QPoint* offset);
QPainter* KOpenWithDialog_SharedPainter(const KOpenWithDialog* self);
void KOpenWithDialog_OnSharedPainter(const KOpenWithDialog* self, intptr_t slot);
QPainter* KOpenWithDialog_QBaseSharedPainter(const KOpenWithDialog* self);
void KOpenWithDialog_InputMethodEvent(KOpenWithDialog* self, QInputMethodEvent* param1);
void KOpenWithDialog_OnInputMethodEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseInputMethodEvent(KOpenWithDialog* self, QInputMethodEvent* param1);
QVariant* KOpenWithDialog_InputMethodQuery(const KOpenWithDialog* self, int param1);
void KOpenWithDialog_OnInputMethodQuery(const KOpenWithDialog* self, intptr_t slot);
QVariant* KOpenWithDialog_QBaseInputMethodQuery(const KOpenWithDialog* self, int param1);
bool KOpenWithDialog_FocusNextPrevChild(KOpenWithDialog* self, bool next);
void KOpenWithDialog_OnFocusNextPrevChild(KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseFocusNextPrevChild(KOpenWithDialog* self, bool next);
void KOpenWithDialog_TimerEvent(KOpenWithDialog* self, QTimerEvent* event);
void KOpenWithDialog_OnTimerEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseTimerEvent(KOpenWithDialog* self, QTimerEvent* event);
void KOpenWithDialog_ChildEvent(KOpenWithDialog* self, QChildEvent* event);
void KOpenWithDialog_OnChildEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseChildEvent(KOpenWithDialog* self, QChildEvent* event);
void KOpenWithDialog_CustomEvent(KOpenWithDialog* self, QEvent* event);
void KOpenWithDialog_OnCustomEvent(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseCustomEvent(KOpenWithDialog* self, QEvent* event);
void KOpenWithDialog_ConnectNotify(KOpenWithDialog* self, const QMetaMethod* signal);
void KOpenWithDialog_OnConnectNotify(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseConnectNotify(KOpenWithDialog* self, const QMetaMethod* signal);
void KOpenWithDialog_DisconnectNotify(KOpenWithDialog* self, const QMetaMethod* signal);
void KOpenWithDialog_OnDisconnectNotify(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDisconnectNotify(KOpenWithDialog* self, const QMetaMethod* signal);
void KOpenWithDialog_AdjustPosition(KOpenWithDialog* self, QWidget* param1);
void KOpenWithDialog_OnAdjustPosition(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseAdjustPosition(KOpenWithDialog* self, QWidget* param1);
void KOpenWithDialog_UpdateMicroFocus(KOpenWithDialog* self);
void KOpenWithDialog_OnUpdateMicroFocus(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseUpdateMicroFocus(KOpenWithDialog* self);
void KOpenWithDialog_Create(KOpenWithDialog* self);
void KOpenWithDialog_OnCreate(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseCreate(KOpenWithDialog* self);
void KOpenWithDialog_Destroy(KOpenWithDialog* self);
void KOpenWithDialog_OnDestroy(KOpenWithDialog* self, intptr_t slot);
void KOpenWithDialog_QBaseDestroy(KOpenWithDialog* self);
bool KOpenWithDialog_FocusNextChild(KOpenWithDialog* self);
void KOpenWithDialog_OnFocusNextChild(KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseFocusNextChild(KOpenWithDialog* self);
bool KOpenWithDialog_FocusPreviousChild(KOpenWithDialog* self);
void KOpenWithDialog_OnFocusPreviousChild(KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseFocusPreviousChild(KOpenWithDialog* self);
QObject* KOpenWithDialog_Sender(const KOpenWithDialog* self);
void KOpenWithDialog_OnSender(const KOpenWithDialog* self, intptr_t slot);
QObject* KOpenWithDialog_QBaseSender(const KOpenWithDialog* self);
int KOpenWithDialog_SenderSignalIndex(const KOpenWithDialog* self);
void KOpenWithDialog_OnSenderSignalIndex(const KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseSenderSignalIndex(const KOpenWithDialog* self);
int KOpenWithDialog_Receivers(const KOpenWithDialog* self, const char* signal);
void KOpenWithDialog_OnReceivers(const KOpenWithDialog* self, intptr_t slot);
int KOpenWithDialog_QBaseReceivers(const KOpenWithDialog* self, const char* signal);
bool KOpenWithDialog_IsSignalConnected(const KOpenWithDialog* self, const QMetaMethod* signal);
void KOpenWithDialog_OnIsSignalConnected(const KOpenWithDialog* self, intptr_t slot);
bool KOpenWithDialog_QBaseIsSignalConnected(const KOpenWithDialog* self, const QMetaMethod* signal);
double KOpenWithDialog_GetDecodedMetricF(const KOpenWithDialog* self, int metricA, int metricB);
void KOpenWithDialog_OnGetDecodedMetricF(const KOpenWithDialog* self, intptr_t slot);
double KOpenWithDialog_QBaseGetDecodedMetricF(const KOpenWithDialog* self, int metricA, int metricB);
void KOpenWithDialog_Delete(KOpenWithDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
