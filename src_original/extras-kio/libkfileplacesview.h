#pragma once
#ifndef SRC_EXTRAS_KIOC_LIBKFILEPLACESVIEW_H
#define SRC_EXTRAS_KIOC_LIBKFILEPLACESVIEW_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KFilePlacesView KFilePlacesView;
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QListView QListView;
typedef struct QMargins QMargins;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KFilePlacesView* KFilePlacesView_new(QWidget* parent);
KFilePlacesView* KFilePlacesView_new2();
QMetaObject* KFilePlacesView_MetaObject(const KFilePlacesView* self);
void* KFilePlacesView_Metacast(KFilePlacesView* self, const char* param1);
int KFilePlacesView_Metacall(KFilePlacesView* self, int param1, int param2, void** param3);
libqt_string KFilePlacesView_Tr(const char* s);
bool KFilePlacesView_AllPlacesShown(const KFilePlacesView* self);
void KFilePlacesView_SetDropOnPlaceEnabled(KFilePlacesView* self, bool enabled);
bool KFilePlacesView_IsDropOnPlaceEnabled(const KFilePlacesView* self);
void KFilePlacesView_SetDragAutoActivationDelay(KFilePlacesView* self, int delay);
int KFilePlacesView_DragAutoActivationDelay(const KFilePlacesView* self);
void KFilePlacesView_SetAutoResizeItemsEnabled(KFilePlacesView* self, bool enabled);
bool KFilePlacesView_IsAutoResizeItemsEnabled(const KFilePlacesView* self);
QSize* KFilePlacesView_SizeHint(const KFilePlacesView* self);
void KFilePlacesView_SetUrl(KFilePlacesView* self, const QUrl* url);
void KFilePlacesView_SetShowAll(KFilePlacesView* self, bool showAll);
void KFilePlacesView_SetModel(KFilePlacesView* self, QAbstractItemModel* model);
void KFilePlacesView_KeyPressEvent(KFilePlacesView* self, QKeyEvent* event);
void KFilePlacesView_ContextMenuEvent(KFilePlacesView* self, QContextMenuEvent* event);
void KFilePlacesView_ResizeEvent(KFilePlacesView* self, QResizeEvent* event);
void KFilePlacesView_ShowEvent(KFilePlacesView* self, QShowEvent* event);
void KFilePlacesView_HideEvent(KFilePlacesView* self, QHideEvent* event);
void KFilePlacesView_DragEnterEvent(KFilePlacesView* self, QDragEnterEvent* event);
void KFilePlacesView_DragLeaveEvent(KFilePlacesView* self, QDragLeaveEvent* event);
void KFilePlacesView_DragMoveEvent(KFilePlacesView* self, QDragMoveEvent* event);
void KFilePlacesView_DropEvent(KFilePlacesView* self, QDropEvent* event);
void KFilePlacesView_PaintEvent(KFilePlacesView* self, QPaintEvent* event);
void KFilePlacesView_StartDrag(KFilePlacesView* self, int supportedActions);
void KFilePlacesView_MousePressEvent(KFilePlacesView* self, QMouseEvent* event);
void KFilePlacesView_RowsInserted(KFilePlacesView* self, const QModelIndex* parent, int start, int end);
void KFilePlacesView_DataChanged(KFilePlacesView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void KFilePlacesView_PlaceActivated(KFilePlacesView* self, const QUrl* url);
void KFilePlacesView_Connect_PlaceActivated(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_TabRequested(KFilePlacesView* self, const QUrl* url);
void KFilePlacesView_Connect_TabRequested(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_ActiveTabRequested(KFilePlacesView* self, const QUrl* url);
void KFilePlacesView_Connect_ActiveTabRequested(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_NewWindowRequested(KFilePlacesView* self, const QUrl* url);
void KFilePlacesView_Connect_NewWindowRequested(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_ContextMenuAboutToShow(KFilePlacesView* self, const QModelIndex* index, QMenu* menu);
void KFilePlacesView_Connect_ContextMenuAboutToShow(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_AllPlacesShownChanged(KFilePlacesView* self, bool allPlacesShown);
void KFilePlacesView_Connect_AllPlacesShownChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_UrlChanged(KFilePlacesView* self, const QUrl* url);
void KFilePlacesView_Connect_UrlChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_UrlsDropped(KFilePlacesView* self, const QUrl* dest, QDropEvent* event, QWidget* parent);
void KFilePlacesView_Connect_UrlsDropped(KFilePlacesView* self, intptr_t slot);
libqt_string KFilePlacesView_Tr2(const char* s, const char* c);
libqt_string KFilePlacesView_Tr3(const char* s, const char* c, int n);
void KFilePlacesView_OnMetacall(KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseMetacall(KFilePlacesView* self, int param1, int param2, void** param3);
void KFilePlacesView_OnSizeHint(const KFilePlacesView* self, intptr_t slot);
QSize* KFilePlacesView_QBaseSizeHint(const KFilePlacesView* self);
void KFilePlacesView_OnSetModel(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetModel(KFilePlacesView* self, QAbstractItemModel* model);
void KFilePlacesView_OnKeyPressEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseKeyPressEvent(KFilePlacesView* self, QKeyEvent* event);
void KFilePlacesView_OnContextMenuEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseContextMenuEvent(KFilePlacesView* self, QContextMenuEvent* event);
void KFilePlacesView_OnResizeEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseResizeEvent(KFilePlacesView* self, QResizeEvent* event);
void KFilePlacesView_OnShowEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseShowEvent(KFilePlacesView* self, QShowEvent* event);
void KFilePlacesView_OnHideEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseHideEvent(KFilePlacesView* self, QHideEvent* event);
void KFilePlacesView_OnDragEnterEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDragEnterEvent(KFilePlacesView* self, QDragEnterEvent* event);
void KFilePlacesView_OnDragLeaveEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDragLeaveEvent(KFilePlacesView* self, QDragLeaveEvent* event);
void KFilePlacesView_OnDragMoveEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDragMoveEvent(KFilePlacesView* self, QDragMoveEvent* event);
void KFilePlacesView_OnDropEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDropEvent(KFilePlacesView* self, QDropEvent* event);
void KFilePlacesView_OnPaintEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBasePaintEvent(KFilePlacesView* self, QPaintEvent* event);
void KFilePlacesView_OnStartDrag(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseStartDrag(KFilePlacesView* self, int supportedActions);
void KFilePlacesView_OnMousePressEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseMousePressEvent(KFilePlacesView* self, QMouseEvent* event);
void KFilePlacesView_OnRowsInserted(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseRowsInserted(KFilePlacesView* self, const QModelIndex* parent, int start, int end);
void KFilePlacesView_OnDataChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDataChanged(KFilePlacesView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
QRect* KFilePlacesView_VisualRect(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_OnVisualRect(const KFilePlacesView* self, intptr_t slot);
QRect* KFilePlacesView_QBaseVisualRect(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_ScrollTo(KFilePlacesView* self, const QModelIndex* index, int hint);
void KFilePlacesView_OnScrollTo(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseScrollTo(KFilePlacesView* self, const QModelIndex* index, int hint);
QModelIndex* KFilePlacesView_IndexAt(const KFilePlacesView* self, const QPoint* p);
void KFilePlacesView_OnIndexAt(const KFilePlacesView* self, intptr_t slot);
QModelIndex* KFilePlacesView_QBaseIndexAt(const KFilePlacesView* self, const QPoint* p);
void KFilePlacesView_DoItemsLayout(KFilePlacesView* self);
void KFilePlacesView_OnDoItemsLayout(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDoItemsLayout(KFilePlacesView* self);
void KFilePlacesView_Reset(KFilePlacesView* self);
void KFilePlacesView_OnReset(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseReset(KFilePlacesView* self);
void KFilePlacesView_SetRootIndex(KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_OnSetRootIndex(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetRootIndex(KFilePlacesView* self, const QModelIndex* index);
bool KFilePlacesView_Event(KFilePlacesView* self, QEvent* e);
void KFilePlacesView_OnEvent(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseEvent(KFilePlacesView* self, QEvent* e);
void KFilePlacesView_ScrollContentsBy(KFilePlacesView* self, int dx, int dy);
void KFilePlacesView_OnScrollContentsBy(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseScrollContentsBy(KFilePlacesView* self, int dx, int dy);
void KFilePlacesView_RowsAboutToBeRemoved(KFilePlacesView* self, const QModelIndex* parent, int start, int end);
void KFilePlacesView_OnRowsAboutToBeRemoved(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseRowsAboutToBeRemoved(KFilePlacesView* self, const QModelIndex* parent, int start, int end);
void KFilePlacesView_MouseMoveEvent(KFilePlacesView* self, QMouseEvent* e);
void KFilePlacesView_OnMouseMoveEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseMouseMoveEvent(KFilePlacesView* self, QMouseEvent* e);
void KFilePlacesView_MouseReleaseEvent(KFilePlacesView* self, QMouseEvent* e);
void KFilePlacesView_OnMouseReleaseEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseMouseReleaseEvent(KFilePlacesView* self, QMouseEvent* e);
void KFilePlacesView_WheelEvent(KFilePlacesView* self, QWheelEvent* e);
void KFilePlacesView_OnWheelEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseWheelEvent(KFilePlacesView* self, QWheelEvent* e);
void KFilePlacesView_TimerEvent(KFilePlacesView* self, QTimerEvent* e);
void KFilePlacesView_OnTimerEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseTimerEvent(KFilePlacesView* self, QTimerEvent* e);
void KFilePlacesView_InitViewItemOption(const KFilePlacesView* self, QStyleOptionViewItem* option);
void KFilePlacesView_OnInitViewItemOption(const KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseInitViewItemOption(const KFilePlacesView* self, QStyleOptionViewItem* option);
int KFilePlacesView_HorizontalOffset(const KFilePlacesView* self);
void KFilePlacesView_OnHorizontalOffset(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseHorizontalOffset(const KFilePlacesView* self);
int KFilePlacesView_VerticalOffset(const KFilePlacesView* self);
void KFilePlacesView_OnVerticalOffset(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseVerticalOffset(const KFilePlacesView* self);
QModelIndex* KFilePlacesView_MoveCursor(KFilePlacesView* self, int cursorAction, int modifiers);
void KFilePlacesView_OnMoveCursor(KFilePlacesView* self, intptr_t slot);
QModelIndex* KFilePlacesView_QBaseMoveCursor(KFilePlacesView* self, int cursorAction, int modifiers);
void KFilePlacesView_SetSelection(KFilePlacesView* self, const QRect* rect, int command);
void KFilePlacesView_OnSetSelection(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetSelection(KFilePlacesView* self, const QRect* rect, int command);
QRegion* KFilePlacesView_VisualRegionForSelection(const KFilePlacesView* self, const QItemSelection* selection);
void KFilePlacesView_OnVisualRegionForSelection(const KFilePlacesView* self, intptr_t slot);
QRegion* KFilePlacesView_QBaseVisualRegionForSelection(const KFilePlacesView* self, const QItemSelection* selection);
libqt_list /* of QModelIndex* */ KFilePlacesView_SelectedIndexes(const KFilePlacesView* self);
void KFilePlacesView_OnSelectedIndexes(const KFilePlacesView* self, intptr_t slot);
libqt_list /* of QModelIndex* */ KFilePlacesView_QBaseSelectedIndexes(const KFilePlacesView* self);
void KFilePlacesView_UpdateGeometries(KFilePlacesView* self);
void KFilePlacesView_OnUpdateGeometries(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseUpdateGeometries(KFilePlacesView* self);
bool KFilePlacesView_IsIndexHidden(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_OnIsIndexHidden(const KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseIsIndexHidden(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_SelectionChanged(KFilePlacesView* self, const QItemSelection* selected, const QItemSelection* deselected);
void KFilePlacesView_OnSelectionChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSelectionChanged(KFilePlacesView* self, const QItemSelection* selected, const QItemSelection* deselected);
void KFilePlacesView_CurrentChanged(KFilePlacesView* self, const QModelIndex* current, const QModelIndex* previous);
void KFilePlacesView_OnCurrentChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseCurrentChanged(KFilePlacesView* self, const QModelIndex* current, const QModelIndex* previous);
QSize* KFilePlacesView_ViewportSizeHint(const KFilePlacesView* self);
void KFilePlacesView_OnViewportSizeHint(const KFilePlacesView* self, intptr_t slot);
QSize* KFilePlacesView_QBaseViewportSizeHint(const KFilePlacesView* self);
void KFilePlacesView_SetSelectionModel(KFilePlacesView* self, QItemSelectionModel* selectionModel);
void KFilePlacesView_OnSetSelectionModel(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetSelectionModel(KFilePlacesView* self, QItemSelectionModel* selectionModel);
void KFilePlacesView_KeyboardSearch(KFilePlacesView* self, const libqt_string search);
void KFilePlacesView_OnKeyboardSearch(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseKeyboardSearch(KFilePlacesView* self, const libqt_string search);
int KFilePlacesView_SizeHintForRow(const KFilePlacesView* self, int row);
void KFilePlacesView_OnSizeHintForRow(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseSizeHintForRow(const KFilePlacesView* self, int row);
int KFilePlacesView_SizeHintForColumn(const KFilePlacesView* self, int column);
void KFilePlacesView_OnSizeHintForColumn(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseSizeHintForColumn(const KFilePlacesView* self, int column);
QAbstractItemDelegate* KFilePlacesView_ItemDelegateForIndex(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_OnItemDelegateForIndex(const KFilePlacesView* self, intptr_t slot);
QAbstractItemDelegate* KFilePlacesView_QBaseItemDelegateForIndex(const KFilePlacesView* self, const QModelIndex* index);
QVariant* KFilePlacesView_InputMethodQuery(const KFilePlacesView* self, int query);
void KFilePlacesView_OnInputMethodQuery(const KFilePlacesView* self, intptr_t slot);
QVariant* KFilePlacesView_QBaseInputMethodQuery(const KFilePlacesView* self, int query);
void KFilePlacesView_SelectAll(KFilePlacesView* self);
void KFilePlacesView_OnSelectAll(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSelectAll(KFilePlacesView* self);
void KFilePlacesView_UpdateEditorData(KFilePlacesView* self);
void KFilePlacesView_OnUpdateEditorData(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseUpdateEditorData(KFilePlacesView* self);
void KFilePlacesView_UpdateEditorGeometries(KFilePlacesView* self);
void KFilePlacesView_OnUpdateEditorGeometries(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseUpdateEditorGeometries(KFilePlacesView* self);
void KFilePlacesView_VerticalScrollbarAction(KFilePlacesView* self, int action);
void KFilePlacesView_OnVerticalScrollbarAction(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseVerticalScrollbarAction(KFilePlacesView* self, int action);
void KFilePlacesView_HorizontalScrollbarAction(KFilePlacesView* self, int action);
void KFilePlacesView_OnHorizontalScrollbarAction(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseHorizontalScrollbarAction(KFilePlacesView* self, int action);
void KFilePlacesView_VerticalScrollbarValueChanged(KFilePlacesView* self, int value);
void KFilePlacesView_OnVerticalScrollbarValueChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseVerticalScrollbarValueChanged(KFilePlacesView* self, int value);
void KFilePlacesView_HorizontalScrollbarValueChanged(KFilePlacesView* self, int value);
void KFilePlacesView_OnHorizontalScrollbarValueChanged(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseHorizontalScrollbarValueChanged(KFilePlacesView* self, int value);
void KFilePlacesView_CloseEditor(KFilePlacesView* self, QWidget* editor, int hint);
void KFilePlacesView_OnCloseEditor(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseCloseEditor(KFilePlacesView* self, QWidget* editor, int hint);
void KFilePlacesView_CommitData(KFilePlacesView* self, QWidget* editor);
void KFilePlacesView_OnCommitData(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseCommitData(KFilePlacesView* self, QWidget* editor);
void KFilePlacesView_EditorDestroyed(KFilePlacesView* self, QObject* editor);
void KFilePlacesView_OnEditorDestroyed(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseEditorDestroyed(KFilePlacesView* self, QObject* editor);
bool KFilePlacesView_Edit2(KFilePlacesView* self, const QModelIndex* index, int trigger, QEvent* event);
void KFilePlacesView_OnEdit2(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseEdit2(KFilePlacesView* self, const QModelIndex* index, int trigger, QEvent* event);
int KFilePlacesView_SelectionCommand(const KFilePlacesView* self, const QModelIndex* index, const QEvent* event);
void KFilePlacesView_OnSelectionCommand(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseSelectionCommand(const KFilePlacesView* self, const QModelIndex* index, const QEvent* event);
bool KFilePlacesView_FocusNextPrevChild(KFilePlacesView* self, bool next);
void KFilePlacesView_OnFocusNextPrevChild(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseFocusNextPrevChild(KFilePlacesView* self, bool next);
bool KFilePlacesView_ViewportEvent(KFilePlacesView* self, QEvent* event);
void KFilePlacesView_OnViewportEvent(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseViewportEvent(KFilePlacesView* self, QEvent* event);
void KFilePlacesView_MouseDoubleClickEvent(KFilePlacesView* self, QMouseEvent* event);
void KFilePlacesView_OnMouseDoubleClickEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseMouseDoubleClickEvent(KFilePlacesView* self, QMouseEvent* event);
void KFilePlacesView_FocusInEvent(KFilePlacesView* self, QFocusEvent* event);
void KFilePlacesView_OnFocusInEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseFocusInEvent(KFilePlacesView* self, QFocusEvent* event);
void KFilePlacesView_FocusOutEvent(KFilePlacesView* self, QFocusEvent* event);
void KFilePlacesView_OnFocusOutEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseFocusOutEvent(KFilePlacesView* self, QFocusEvent* event);
void KFilePlacesView_InputMethodEvent(KFilePlacesView* self, QInputMethodEvent* event);
void KFilePlacesView_OnInputMethodEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseInputMethodEvent(KFilePlacesView* self, QInputMethodEvent* event);
bool KFilePlacesView_EventFilter(KFilePlacesView* self, QObject* object, QEvent* event);
void KFilePlacesView_OnEventFilter(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseEventFilter(KFilePlacesView* self, QObject* object, QEvent* event);
QSize* KFilePlacesView_MinimumSizeHint(const KFilePlacesView* self);
void KFilePlacesView_OnMinimumSizeHint(const KFilePlacesView* self, intptr_t slot);
QSize* KFilePlacesView_QBaseMinimumSizeHint(const KFilePlacesView* self);
void KFilePlacesView_SetupViewport(KFilePlacesView* self, QWidget* viewport);
void KFilePlacesView_OnSetupViewport(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetupViewport(KFilePlacesView* self, QWidget* viewport);
void KFilePlacesView_ChangeEvent(KFilePlacesView* self, QEvent* param1);
void KFilePlacesView_OnChangeEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseChangeEvent(KFilePlacesView* self, QEvent* param1);
void KFilePlacesView_InitStyleOption(const KFilePlacesView* self, QStyleOptionFrame* option);
void KFilePlacesView_OnInitStyleOption(const KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseInitStyleOption(const KFilePlacesView* self, QStyleOptionFrame* option);
int KFilePlacesView_DevType(const KFilePlacesView* self);
void KFilePlacesView_OnDevType(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseDevType(const KFilePlacesView* self);
void KFilePlacesView_SetVisible(KFilePlacesView* self, bool visible);
void KFilePlacesView_OnSetVisible(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetVisible(KFilePlacesView* self, bool visible);
int KFilePlacesView_HeightForWidth(const KFilePlacesView* self, int param1);
void KFilePlacesView_OnHeightForWidth(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseHeightForWidth(const KFilePlacesView* self, int param1);
bool KFilePlacesView_HasHeightForWidth(const KFilePlacesView* self);
void KFilePlacesView_OnHasHeightForWidth(const KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseHasHeightForWidth(const KFilePlacesView* self);
QPaintEngine* KFilePlacesView_PaintEngine(const KFilePlacesView* self);
void KFilePlacesView_OnPaintEngine(const KFilePlacesView* self, intptr_t slot);
QPaintEngine* KFilePlacesView_QBasePaintEngine(const KFilePlacesView* self);
void KFilePlacesView_KeyReleaseEvent(KFilePlacesView* self, QKeyEvent* event);
void KFilePlacesView_OnKeyReleaseEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseKeyReleaseEvent(KFilePlacesView* self, QKeyEvent* event);
void KFilePlacesView_EnterEvent(KFilePlacesView* self, QEnterEvent* event);
void KFilePlacesView_OnEnterEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseEnterEvent(KFilePlacesView* self, QEnterEvent* event);
void KFilePlacesView_LeaveEvent(KFilePlacesView* self, QEvent* event);
void KFilePlacesView_OnLeaveEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseLeaveEvent(KFilePlacesView* self, QEvent* event);
void KFilePlacesView_MoveEvent(KFilePlacesView* self, QMoveEvent* event);
void KFilePlacesView_OnMoveEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseMoveEvent(KFilePlacesView* self, QMoveEvent* event);
void KFilePlacesView_CloseEvent(KFilePlacesView* self, QCloseEvent* event);
void KFilePlacesView_OnCloseEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseCloseEvent(KFilePlacesView* self, QCloseEvent* event);
void KFilePlacesView_TabletEvent(KFilePlacesView* self, QTabletEvent* event);
void KFilePlacesView_OnTabletEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseTabletEvent(KFilePlacesView* self, QTabletEvent* event);
void KFilePlacesView_ActionEvent(KFilePlacesView* self, QActionEvent* event);
void KFilePlacesView_OnActionEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseActionEvent(KFilePlacesView* self, QActionEvent* event);
bool KFilePlacesView_NativeEvent(KFilePlacesView* self, const libqt_string eventType, void* message, intptr_t* result);
void KFilePlacesView_OnNativeEvent(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseNativeEvent(KFilePlacesView* self, const libqt_string eventType, void* message, intptr_t* result);
int KFilePlacesView_Metric(const KFilePlacesView* self, int param1);
void KFilePlacesView_OnMetric(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseMetric(const KFilePlacesView* self, int param1);
void KFilePlacesView_InitPainter(const KFilePlacesView* self, QPainter* painter);
void KFilePlacesView_OnInitPainter(const KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseInitPainter(const KFilePlacesView* self, QPainter* painter);
QPaintDevice* KFilePlacesView_Redirected(const KFilePlacesView* self, QPoint* offset);
void KFilePlacesView_OnRedirected(const KFilePlacesView* self, intptr_t slot);
QPaintDevice* KFilePlacesView_QBaseRedirected(const KFilePlacesView* self, QPoint* offset);
QPainter* KFilePlacesView_SharedPainter(const KFilePlacesView* self);
void KFilePlacesView_OnSharedPainter(const KFilePlacesView* self, intptr_t slot);
QPainter* KFilePlacesView_QBaseSharedPainter(const KFilePlacesView* self);
void KFilePlacesView_ChildEvent(KFilePlacesView* self, QChildEvent* event);
void KFilePlacesView_OnChildEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseChildEvent(KFilePlacesView* self, QChildEvent* event);
void KFilePlacesView_CustomEvent(KFilePlacesView* self, QEvent* event);
void KFilePlacesView_OnCustomEvent(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseCustomEvent(KFilePlacesView* self, QEvent* event);
void KFilePlacesView_ConnectNotify(KFilePlacesView* self, const QMetaMethod* signal);
void KFilePlacesView_OnConnectNotify(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseConnectNotify(KFilePlacesView* self, const QMetaMethod* signal);
void KFilePlacesView_DisconnectNotify(KFilePlacesView* self, const QMetaMethod* signal);
void KFilePlacesView_OnDisconnectNotify(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDisconnectNotify(KFilePlacesView* self, const QMetaMethod* signal);
void KFilePlacesView_ResizeContents(KFilePlacesView* self, int width, int height);
void KFilePlacesView_OnResizeContents(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseResizeContents(KFilePlacesView* self, int width, int height);
QSize* KFilePlacesView_ContentsSize(const KFilePlacesView* self);
void KFilePlacesView_OnContentsSize(const KFilePlacesView* self, intptr_t slot);
QSize* KFilePlacesView_QBaseContentsSize(const KFilePlacesView* self);
QRect* KFilePlacesView_RectForIndex(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_OnRectForIndex(const KFilePlacesView* self, intptr_t slot);
QRect* KFilePlacesView_QBaseRectForIndex(const KFilePlacesView* self, const QModelIndex* index);
void KFilePlacesView_SetPositionForIndex(KFilePlacesView* self, const QPoint* position, const QModelIndex* index);
void KFilePlacesView_OnSetPositionForIndex(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetPositionForIndex(KFilePlacesView* self, const QPoint* position, const QModelIndex* index);
int KFilePlacesView_State(const KFilePlacesView* self);
void KFilePlacesView_OnState(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseState(const KFilePlacesView* self);
void KFilePlacesView_SetState(KFilePlacesView* self, int state);
void KFilePlacesView_OnSetState(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetState(KFilePlacesView* self, int state);
void KFilePlacesView_ScheduleDelayedItemsLayout(KFilePlacesView* self);
void KFilePlacesView_OnScheduleDelayedItemsLayout(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseScheduleDelayedItemsLayout(KFilePlacesView* self);
void KFilePlacesView_ExecuteDelayedItemsLayout(KFilePlacesView* self);
void KFilePlacesView_OnExecuteDelayedItemsLayout(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseExecuteDelayedItemsLayout(KFilePlacesView* self);
void KFilePlacesView_SetDirtyRegion(KFilePlacesView* self, const QRegion* region);
void KFilePlacesView_OnSetDirtyRegion(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetDirtyRegion(KFilePlacesView* self, const QRegion* region);
void KFilePlacesView_ScrollDirtyRegion(KFilePlacesView* self, int dx, int dy);
void KFilePlacesView_OnScrollDirtyRegion(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseScrollDirtyRegion(KFilePlacesView* self, int dx, int dy);
QPoint* KFilePlacesView_DirtyRegionOffset(const KFilePlacesView* self);
void KFilePlacesView_OnDirtyRegionOffset(const KFilePlacesView* self, intptr_t slot);
QPoint* KFilePlacesView_QBaseDirtyRegionOffset(const KFilePlacesView* self);
void KFilePlacesView_StartAutoScroll(KFilePlacesView* self);
void KFilePlacesView_OnStartAutoScroll(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseStartAutoScroll(KFilePlacesView* self);
void KFilePlacesView_StopAutoScroll(KFilePlacesView* self);
void KFilePlacesView_OnStopAutoScroll(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseStopAutoScroll(KFilePlacesView* self);
void KFilePlacesView_DoAutoScroll(KFilePlacesView* self);
void KFilePlacesView_OnDoAutoScroll(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDoAutoScroll(KFilePlacesView* self);
int KFilePlacesView_DropIndicatorPosition(const KFilePlacesView* self);
void KFilePlacesView_OnDropIndicatorPosition(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseDropIndicatorPosition(const KFilePlacesView* self);
void KFilePlacesView_SetViewportMargins(KFilePlacesView* self, int left, int top, int right, int bottom);
void KFilePlacesView_OnSetViewportMargins(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseSetViewportMargins(KFilePlacesView* self, int left, int top, int right, int bottom);
QMargins* KFilePlacesView_ViewportMargins(const KFilePlacesView* self);
void KFilePlacesView_OnViewportMargins(const KFilePlacesView* self, intptr_t slot);
QMargins* KFilePlacesView_QBaseViewportMargins(const KFilePlacesView* self);
void KFilePlacesView_DrawFrame(KFilePlacesView* self, QPainter* param1);
void KFilePlacesView_OnDrawFrame(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDrawFrame(KFilePlacesView* self, QPainter* param1);
void KFilePlacesView_UpdateMicroFocus(KFilePlacesView* self);
void KFilePlacesView_OnUpdateMicroFocus(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseUpdateMicroFocus(KFilePlacesView* self);
void KFilePlacesView_Create(KFilePlacesView* self);
void KFilePlacesView_OnCreate(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseCreate(KFilePlacesView* self);
void KFilePlacesView_Destroy(KFilePlacesView* self);
void KFilePlacesView_OnDestroy(KFilePlacesView* self, intptr_t slot);
void KFilePlacesView_QBaseDestroy(KFilePlacesView* self);
bool KFilePlacesView_FocusNextChild(KFilePlacesView* self);
void KFilePlacesView_OnFocusNextChild(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseFocusNextChild(KFilePlacesView* self);
bool KFilePlacesView_FocusPreviousChild(KFilePlacesView* self);
void KFilePlacesView_OnFocusPreviousChild(KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseFocusPreviousChild(KFilePlacesView* self);
QObject* KFilePlacesView_Sender(const KFilePlacesView* self);
void KFilePlacesView_OnSender(const KFilePlacesView* self, intptr_t slot);
QObject* KFilePlacesView_QBaseSender(const KFilePlacesView* self);
int KFilePlacesView_SenderSignalIndex(const KFilePlacesView* self);
void KFilePlacesView_OnSenderSignalIndex(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseSenderSignalIndex(const KFilePlacesView* self);
int KFilePlacesView_Receivers(const KFilePlacesView* self, const char* signal);
void KFilePlacesView_OnReceivers(const KFilePlacesView* self, intptr_t slot);
int KFilePlacesView_QBaseReceivers(const KFilePlacesView* self, const char* signal);
bool KFilePlacesView_IsSignalConnected(const KFilePlacesView* self, const QMetaMethod* signal);
void KFilePlacesView_OnIsSignalConnected(const KFilePlacesView* self, intptr_t slot);
bool KFilePlacesView_QBaseIsSignalConnected(const KFilePlacesView* self, const QMetaMethod* signal);
double KFilePlacesView_GetDecodedMetricF(const KFilePlacesView* self, int metricA, int metricB);
void KFilePlacesView_OnGetDecodedMetricF(const KFilePlacesView* self, intptr_t slot);
double KFilePlacesView_QBaseGetDecodedMetricF(const KFilePlacesView* self, int metricA, int metricB);
void KFilePlacesView_Delete(KFilePlacesView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
