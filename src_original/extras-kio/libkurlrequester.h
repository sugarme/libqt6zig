#pragma once
#ifndef SRC_EXTRAS_KIOC_LIBKURLREQUESTER_H
#define SRC_EXTRAS_KIOC_LIBKURLREQUESTER_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_KEditListWidget__CustomEditor)
typedef KEditListWidget::CustomEditor KEditListWidget__CustomEditor;
#endif
#else
typedef struct KComboBox KComboBox;
typedef struct KEditListWidget__CustomEditor KEditListWidget__CustomEditor;
typedef struct KLineEdit KLineEdit;
typedef struct KUrlComboRequester KUrlComboRequester;
typedef struct KUrlCompletion KUrlCompletion;
typedef struct KUrlRequester KUrlRequester;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFileDialog QFileDialog;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QPushButton QPushButton;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KUrlRequester* KUrlRequester_new(QWidget* parent);
KUrlRequester* KUrlRequester_new2();
KUrlRequester* KUrlRequester_new3(const QUrl* url);
KUrlRequester* KUrlRequester_new4(QWidget* editWidget, QWidget* parent);
KUrlRequester* KUrlRequester_new5(const QUrl* url, QWidget* parent);
QMetaObject* KUrlRequester_MetaObject(const KUrlRequester* self);
void* KUrlRequester_Metacast(KUrlRequester* self, const char* param1);
int KUrlRequester_Metacall(KUrlRequester* self, int param1, int param2, void** param3);
libqt_string KUrlRequester_Tr(const char* s);
QUrl* KUrlRequester_Url(const KUrlRequester* self);
QUrl* KUrlRequester_StartDir(const KUrlRequester* self);
libqt_string KUrlRequester_Text(const KUrlRequester* self);
void KUrlRequester_SetMode(KUrlRequester* self, int mode);
int KUrlRequester_Mode(const KUrlRequester* self);
void KUrlRequester_SetAcceptMode(KUrlRequester* self, int m);
int KUrlRequester_AcceptMode(const KUrlRequester* self);
void KUrlRequester_SetNameFilters(KUrlRequester* self, const libqt_list /* of libqt_string */ filters);
void KUrlRequester_SetNameFilter(KUrlRequester* self, const libqt_string filter);
libqt_list /* of libqt_string */ KUrlRequester_NameFilters(const KUrlRequester* self);
void KUrlRequester_SetMimeTypeFilters(KUrlRequester* self, const libqt_list /* of libqt_string */ mimeTypes);
libqt_list /* of libqt_string */ KUrlRequester_MimeTypeFilters(const KUrlRequester* self);
QFileDialog* KUrlRequester_FileDialog(const KUrlRequester* self);
KLineEdit* KUrlRequester_LineEdit(const KUrlRequester* self);
KComboBox* KUrlRequester_ComboBox(const KUrlRequester* self);
QPushButton* KUrlRequester_Button(const KUrlRequester* self);
KUrlCompletion* KUrlRequester_CompletionObject(const KUrlRequester* self);
KEditListWidget__CustomEditor* KUrlRequester_CustomEditor(KUrlRequester* self);
libqt_string KUrlRequester_PlaceholderText(const KUrlRequester* self);
void KUrlRequester_SetPlaceholderText(KUrlRequester* self, const libqt_string msg);
int KUrlRequester_FileDialogModality(const KUrlRequester* self);
void KUrlRequester_SetFileDialogModality(KUrlRequester* self, int modality);
void KUrlRequester_SetUrl(KUrlRequester* self, const QUrl* url);
void KUrlRequester_SetStartDir(KUrlRequester* self, const QUrl* startDir);
void KUrlRequester_SetText(KUrlRequester* self, const libqt_string text);
void KUrlRequester_Clear(KUrlRequester* self);
void KUrlRequester_TextChanged(KUrlRequester* self, const libqt_string param1);
void KUrlRequester_Connect_TextChanged(KUrlRequester* self, intptr_t slot);
void KUrlRequester_TextEdited(KUrlRequester* self, const libqt_string param1);
void KUrlRequester_Connect_TextEdited(KUrlRequester* self, intptr_t slot);
void KUrlRequester_ReturnPressed(KUrlRequester* self, const libqt_string text);
void KUrlRequester_Connect_ReturnPressed(KUrlRequester* self, intptr_t slot);
void KUrlRequester_OpenFileDialog(KUrlRequester* self, KUrlRequester* param1);
void KUrlRequester_Connect_OpenFileDialog(KUrlRequester* self, intptr_t slot);
void KUrlRequester_UrlSelected(KUrlRequester* self, const QUrl* param1);
void KUrlRequester_Connect_UrlSelected(KUrlRequester* self, intptr_t slot);
void KUrlRequester_ChangeEvent(KUrlRequester* self, QEvent* e);
bool KUrlRequester_EventFilter(KUrlRequester* self, QObject* obj, QEvent* ev);
libqt_string KUrlRequester_Tr2(const char* s, const char* c);
libqt_string KUrlRequester_Tr3(const char* s, const char* c, int n);
void KUrlRequester_OnMetacall(KUrlRequester* self, intptr_t slot);
int KUrlRequester_QBaseMetacall(KUrlRequester* self, int param1, int param2, void** param3);
void KUrlRequester_OnFileDialog(const KUrlRequester* self, intptr_t slot);
QFileDialog* KUrlRequester_QBaseFileDialog(const KUrlRequester* self);
void KUrlRequester_OnChangeEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseChangeEvent(KUrlRequester* self, QEvent* e);
void KUrlRequester_OnEventFilter(KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseEventFilter(KUrlRequester* self, QObject* obj, QEvent* ev);
int KUrlRequester_DevType(const KUrlRequester* self);
void KUrlRequester_OnDevType(const KUrlRequester* self, intptr_t slot);
int KUrlRequester_QBaseDevType(const KUrlRequester* self);
void KUrlRequester_SetVisible(KUrlRequester* self, bool visible);
void KUrlRequester_OnSetVisible(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseSetVisible(KUrlRequester* self, bool visible);
QSize* KUrlRequester_SizeHint(const KUrlRequester* self);
void KUrlRequester_OnSizeHint(const KUrlRequester* self, intptr_t slot);
QSize* KUrlRequester_QBaseSizeHint(const KUrlRequester* self);
QSize* KUrlRequester_MinimumSizeHint(const KUrlRequester* self);
void KUrlRequester_OnMinimumSizeHint(const KUrlRequester* self, intptr_t slot);
QSize* KUrlRequester_QBaseMinimumSizeHint(const KUrlRequester* self);
int KUrlRequester_HeightForWidth(const KUrlRequester* self, int param1);
void KUrlRequester_OnHeightForWidth(const KUrlRequester* self, intptr_t slot);
int KUrlRequester_QBaseHeightForWidth(const KUrlRequester* self, int param1);
bool KUrlRequester_HasHeightForWidth(const KUrlRequester* self);
void KUrlRequester_OnHasHeightForWidth(const KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseHasHeightForWidth(const KUrlRequester* self);
QPaintEngine* KUrlRequester_PaintEngine(const KUrlRequester* self);
void KUrlRequester_OnPaintEngine(const KUrlRequester* self, intptr_t slot);
QPaintEngine* KUrlRequester_QBasePaintEngine(const KUrlRequester* self);
bool KUrlRequester_Event(KUrlRequester* self, QEvent* event);
void KUrlRequester_OnEvent(KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseEvent(KUrlRequester* self, QEvent* event);
void KUrlRequester_MousePressEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_OnMousePressEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseMousePressEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_MouseReleaseEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_OnMouseReleaseEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseMouseReleaseEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_MouseDoubleClickEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_OnMouseDoubleClickEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseMouseDoubleClickEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_MouseMoveEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_OnMouseMoveEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseMouseMoveEvent(KUrlRequester* self, QMouseEvent* event);
void KUrlRequester_WheelEvent(KUrlRequester* self, QWheelEvent* event);
void KUrlRequester_OnWheelEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseWheelEvent(KUrlRequester* self, QWheelEvent* event);
void KUrlRequester_KeyPressEvent(KUrlRequester* self, QKeyEvent* event);
void KUrlRequester_OnKeyPressEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseKeyPressEvent(KUrlRequester* self, QKeyEvent* event);
void KUrlRequester_KeyReleaseEvent(KUrlRequester* self, QKeyEvent* event);
void KUrlRequester_OnKeyReleaseEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseKeyReleaseEvent(KUrlRequester* self, QKeyEvent* event);
void KUrlRequester_FocusInEvent(KUrlRequester* self, QFocusEvent* event);
void KUrlRequester_OnFocusInEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseFocusInEvent(KUrlRequester* self, QFocusEvent* event);
void KUrlRequester_FocusOutEvent(KUrlRequester* self, QFocusEvent* event);
void KUrlRequester_OnFocusOutEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseFocusOutEvent(KUrlRequester* self, QFocusEvent* event);
void KUrlRequester_EnterEvent(KUrlRequester* self, QEnterEvent* event);
void KUrlRequester_OnEnterEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseEnterEvent(KUrlRequester* self, QEnterEvent* event);
void KUrlRequester_LeaveEvent(KUrlRequester* self, QEvent* event);
void KUrlRequester_OnLeaveEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseLeaveEvent(KUrlRequester* self, QEvent* event);
void KUrlRequester_PaintEvent(KUrlRequester* self, QPaintEvent* event);
void KUrlRequester_OnPaintEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBasePaintEvent(KUrlRequester* self, QPaintEvent* event);
void KUrlRequester_MoveEvent(KUrlRequester* self, QMoveEvent* event);
void KUrlRequester_OnMoveEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseMoveEvent(KUrlRequester* self, QMoveEvent* event);
void KUrlRequester_ResizeEvent(KUrlRequester* self, QResizeEvent* event);
void KUrlRequester_OnResizeEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseResizeEvent(KUrlRequester* self, QResizeEvent* event);
void KUrlRequester_CloseEvent(KUrlRequester* self, QCloseEvent* event);
void KUrlRequester_OnCloseEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseCloseEvent(KUrlRequester* self, QCloseEvent* event);
void KUrlRequester_ContextMenuEvent(KUrlRequester* self, QContextMenuEvent* event);
void KUrlRequester_OnContextMenuEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseContextMenuEvent(KUrlRequester* self, QContextMenuEvent* event);
void KUrlRequester_TabletEvent(KUrlRequester* self, QTabletEvent* event);
void KUrlRequester_OnTabletEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseTabletEvent(KUrlRequester* self, QTabletEvent* event);
void KUrlRequester_ActionEvent(KUrlRequester* self, QActionEvent* event);
void KUrlRequester_OnActionEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseActionEvent(KUrlRequester* self, QActionEvent* event);
void KUrlRequester_DragEnterEvent(KUrlRequester* self, QDragEnterEvent* event);
void KUrlRequester_OnDragEnterEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseDragEnterEvent(KUrlRequester* self, QDragEnterEvent* event);
void KUrlRequester_DragMoveEvent(KUrlRequester* self, QDragMoveEvent* event);
void KUrlRequester_OnDragMoveEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseDragMoveEvent(KUrlRequester* self, QDragMoveEvent* event);
void KUrlRequester_DragLeaveEvent(KUrlRequester* self, QDragLeaveEvent* event);
void KUrlRequester_OnDragLeaveEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseDragLeaveEvent(KUrlRequester* self, QDragLeaveEvent* event);
void KUrlRequester_DropEvent(KUrlRequester* self, QDropEvent* event);
void KUrlRequester_OnDropEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseDropEvent(KUrlRequester* self, QDropEvent* event);
void KUrlRequester_ShowEvent(KUrlRequester* self, QShowEvent* event);
void KUrlRequester_OnShowEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseShowEvent(KUrlRequester* self, QShowEvent* event);
void KUrlRequester_HideEvent(KUrlRequester* self, QHideEvent* event);
void KUrlRequester_OnHideEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseHideEvent(KUrlRequester* self, QHideEvent* event);
bool KUrlRequester_NativeEvent(KUrlRequester* self, const libqt_string eventType, void* message, intptr_t* result);
void KUrlRequester_OnNativeEvent(KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseNativeEvent(KUrlRequester* self, const libqt_string eventType, void* message, intptr_t* result);
int KUrlRequester_Metric(const KUrlRequester* self, int param1);
void KUrlRequester_OnMetric(const KUrlRequester* self, intptr_t slot);
int KUrlRequester_QBaseMetric(const KUrlRequester* self, int param1);
void KUrlRequester_InitPainter(const KUrlRequester* self, QPainter* painter);
void KUrlRequester_OnInitPainter(const KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseInitPainter(const KUrlRequester* self, QPainter* painter);
QPaintDevice* KUrlRequester_Redirected(const KUrlRequester* self, QPoint* offset);
void KUrlRequester_OnRedirected(const KUrlRequester* self, intptr_t slot);
QPaintDevice* KUrlRequester_QBaseRedirected(const KUrlRequester* self, QPoint* offset);
QPainter* KUrlRequester_SharedPainter(const KUrlRequester* self);
void KUrlRequester_OnSharedPainter(const KUrlRequester* self, intptr_t slot);
QPainter* KUrlRequester_QBaseSharedPainter(const KUrlRequester* self);
void KUrlRequester_InputMethodEvent(KUrlRequester* self, QInputMethodEvent* param1);
void KUrlRequester_OnInputMethodEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseInputMethodEvent(KUrlRequester* self, QInputMethodEvent* param1);
QVariant* KUrlRequester_InputMethodQuery(const KUrlRequester* self, int param1);
void KUrlRequester_OnInputMethodQuery(const KUrlRequester* self, intptr_t slot);
QVariant* KUrlRequester_QBaseInputMethodQuery(const KUrlRequester* self, int param1);
bool KUrlRequester_FocusNextPrevChild(KUrlRequester* self, bool next);
void KUrlRequester_OnFocusNextPrevChild(KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseFocusNextPrevChild(KUrlRequester* self, bool next);
void KUrlRequester_TimerEvent(KUrlRequester* self, QTimerEvent* event);
void KUrlRequester_OnTimerEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseTimerEvent(KUrlRequester* self, QTimerEvent* event);
void KUrlRequester_ChildEvent(KUrlRequester* self, QChildEvent* event);
void KUrlRequester_OnChildEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseChildEvent(KUrlRequester* self, QChildEvent* event);
void KUrlRequester_CustomEvent(KUrlRequester* self, QEvent* event);
void KUrlRequester_OnCustomEvent(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseCustomEvent(KUrlRequester* self, QEvent* event);
void KUrlRequester_ConnectNotify(KUrlRequester* self, const QMetaMethod* signal);
void KUrlRequester_OnConnectNotify(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseConnectNotify(KUrlRequester* self, const QMetaMethod* signal);
void KUrlRequester_DisconnectNotify(KUrlRequester* self, const QMetaMethod* signal);
void KUrlRequester_OnDisconnectNotify(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseDisconnectNotify(KUrlRequester* self, const QMetaMethod* signal);
void KUrlRequester_UpdateMicroFocus(KUrlRequester* self);
void KUrlRequester_OnUpdateMicroFocus(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseUpdateMicroFocus(KUrlRequester* self);
void KUrlRequester_Create(KUrlRequester* self);
void KUrlRequester_OnCreate(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseCreate(KUrlRequester* self);
void KUrlRequester_Destroy(KUrlRequester* self);
void KUrlRequester_OnDestroy(KUrlRequester* self, intptr_t slot);
void KUrlRequester_QBaseDestroy(KUrlRequester* self);
bool KUrlRequester_FocusNextChild(KUrlRequester* self);
void KUrlRequester_OnFocusNextChild(KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseFocusNextChild(KUrlRequester* self);
bool KUrlRequester_FocusPreviousChild(KUrlRequester* self);
void KUrlRequester_OnFocusPreviousChild(KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseFocusPreviousChild(KUrlRequester* self);
QObject* KUrlRequester_Sender(const KUrlRequester* self);
void KUrlRequester_OnSender(const KUrlRequester* self, intptr_t slot);
QObject* KUrlRequester_QBaseSender(const KUrlRequester* self);
int KUrlRequester_SenderSignalIndex(const KUrlRequester* self);
void KUrlRequester_OnSenderSignalIndex(const KUrlRequester* self, intptr_t slot);
int KUrlRequester_QBaseSenderSignalIndex(const KUrlRequester* self);
int KUrlRequester_Receivers(const KUrlRequester* self, const char* signal);
void KUrlRequester_OnReceivers(const KUrlRequester* self, intptr_t slot);
int KUrlRequester_QBaseReceivers(const KUrlRequester* self, const char* signal);
bool KUrlRequester_IsSignalConnected(const KUrlRequester* self, const QMetaMethod* signal);
void KUrlRequester_OnIsSignalConnected(const KUrlRequester* self, intptr_t slot);
bool KUrlRequester_QBaseIsSignalConnected(const KUrlRequester* self, const QMetaMethod* signal);
double KUrlRequester_GetDecodedMetricF(const KUrlRequester* self, int metricA, int metricB);
void KUrlRequester_OnGetDecodedMetricF(const KUrlRequester* self, intptr_t slot);
double KUrlRequester_QBaseGetDecodedMetricF(const KUrlRequester* self, int metricA, int metricB);
void KUrlRequester_Delete(KUrlRequester* self);

KUrlComboRequester* KUrlComboRequester_new(QWidget* parent);
KUrlComboRequester* KUrlComboRequester_new2();
QMetaObject* KUrlComboRequester_MetaObject(const KUrlComboRequester* self);
void* KUrlComboRequester_Metacast(KUrlComboRequester* self, const char* param1);
int KUrlComboRequester_Metacall(KUrlComboRequester* self, int param1, int param2, void** param3);
libqt_string KUrlComboRequester_Tr(const char* s);
libqt_string KUrlComboRequester_Tr2(const char* s, const char* c);
libqt_string KUrlComboRequester_Tr3(const char* s, const char* c, int n);
void KUrlComboRequester_OnMetacall(KUrlComboRequester* self, intptr_t slot);
int KUrlComboRequester_QBaseMetacall(KUrlComboRequester* self, int param1, int param2, void** param3);
QFileDialog* KUrlComboRequester_FileDialog(const KUrlComboRequester* self);
void KUrlComboRequester_OnFileDialog(const KUrlComboRequester* self, intptr_t slot);
QFileDialog* KUrlComboRequester_QBaseFileDialog(const KUrlComboRequester* self);
void KUrlComboRequester_ChangeEvent(KUrlComboRequester* self, QEvent* e);
void KUrlComboRequester_OnChangeEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseChangeEvent(KUrlComboRequester* self, QEvent* e);
bool KUrlComboRequester_EventFilter(KUrlComboRequester* self, QObject* obj, QEvent* ev);
void KUrlComboRequester_OnEventFilter(KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseEventFilter(KUrlComboRequester* self, QObject* obj, QEvent* ev);
int KUrlComboRequester_DevType(const KUrlComboRequester* self);
void KUrlComboRequester_OnDevType(const KUrlComboRequester* self, intptr_t slot);
int KUrlComboRequester_QBaseDevType(const KUrlComboRequester* self);
void KUrlComboRequester_SetVisible(KUrlComboRequester* self, bool visible);
void KUrlComboRequester_OnSetVisible(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseSetVisible(KUrlComboRequester* self, bool visible);
QSize* KUrlComboRequester_SizeHint(const KUrlComboRequester* self);
void KUrlComboRequester_OnSizeHint(const KUrlComboRequester* self, intptr_t slot);
QSize* KUrlComboRequester_QBaseSizeHint(const KUrlComboRequester* self);
QSize* KUrlComboRequester_MinimumSizeHint(const KUrlComboRequester* self);
void KUrlComboRequester_OnMinimumSizeHint(const KUrlComboRequester* self, intptr_t slot);
QSize* KUrlComboRequester_QBaseMinimumSizeHint(const KUrlComboRequester* self);
int KUrlComboRequester_HeightForWidth(const KUrlComboRequester* self, int param1);
void KUrlComboRequester_OnHeightForWidth(const KUrlComboRequester* self, intptr_t slot);
int KUrlComboRequester_QBaseHeightForWidth(const KUrlComboRequester* self, int param1);
bool KUrlComboRequester_HasHeightForWidth(const KUrlComboRequester* self);
void KUrlComboRequester_OnHasHeightForWidth(const KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseHasHeightForWidth(const KUrlComboRequester* self);
QPaintEngine* KUrlComboRequester_PaintEngine(const KUrlComboRequester* self);
void KUrlComboRequester_OnPaintEngine(const KUrlComboRequester* self, intptr_t slot);
QPaintEngine* KUrlComboRequester_QBasePaintEngine(const KUrlComboRequester* self);
bool KUrlComboRequester_Event(KUrlComboRequester* self, QEvent* event);
void KUrlComboRequester_OnEvent(KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseEvent(KUrlComboRequester* self, QEvent* event);
void KUrlComboRequester_MousePressEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_OnMousePressEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseMousePressEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_MouseReleaseEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_OnMouseReleaseEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseMouseReleaseEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_MouseDoubleClickEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_OnMouseDoubleClickEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseMouseDoubleClickEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_MouseMoveEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_OnMouseMoveEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseMouseMoveEvent(KUrlComboRequester* self, QMouseEvent* event);
void KUrlComboRequester_WheelEvent(KUrlComboRequester* self, QWheelEvent* event);
void KUrlComboRequester_OnWheelEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseWheelEvent(KUrlComboRequester* self, QWheelEvent* event);
void KUrlComboRequester_KeyPressEvent(KUrlComboRequester* self, QKeyEvent* event);
void KUrlComboRequester_OnKeyPressEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseKeyPressEvent(KUrlComboRequester* self, QKeyEvent* event);
void KUrlComboRequester_KeyReleaseEvent(KUrlComboRequester* self, QKeyEvent* event);
void KUrlComboRequester_OnKeyReleaseEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseKeyReleaseEvent(KUrlComboRequester* self, QKeyEvent* event);
void KUrlComboRequester_FocusInEvent(KUrlComboRequester* self, QFocusEvent* event);
void KUrlComboRequester_OnFocusInEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseFocusInEvent(KUrlComboRequester* self, QFocusEvent* event);
void KUrlComboRequester_FocusOutEvent(KUrlComboRequester* self, QFocusEvent* event);
void KUrlComboRequester_OnFocusOutEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseFocusOutEvent(KUrlComboRequester* self, QFocusEvent* event);
void KUrlComboRequester_EnterEvent(KUrlComboRequester* self, QEnterEvent* event);
void KUrlComboRequester_OnEnterEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseEnterEvent(KUrlComboRequester* self, QEnterEvent* event);
void KUrlComboRequester_LeaveEvent(KUrlComboRequester* self, QEvent* event);
void KUrlComboRequester_OnLeaveEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseLeaveEvent(KUrlComboRequester* self, QEvent* event);
void KUrlComboRequester_PaintEvent(KUrlComboRequester* self, QPaintEvent* event);
void KUrlComboRequester_OnPaintEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBasePaintEvent(KUrlComboRequester* self, QPaintEvent* event);
void KUrlComboRequester_MoveEvent(KUrlComboRequester* self, QMoveEvent* event);
void KUrlComboRequester_OnMoveEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseMoveEvent(KUrlComboRequester* self, QMoveEvent* event);
void KUrlComboRequester_ResizeEvent(KUrlComboRequester* self, QResizeEvent* event);
void KUrlComboRequester_OnResizeEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseResizeEvent(KUrlComboRequester* self, QResizeEvent* event);
void KUrlComboRequester_CloseEvent(KUrlComboRequester* self, QCloseEvent* event);
void KUrlComboRequester_OnCloseEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseCloseEvent(KUrlComboRequester* self, QCloseEvent* event);
void KUrlComboRequester_ContextMenuEvent(KUrlComboRequester* self, QContextMenuEvent* event);
void KUrlComboRequester_OnContextMenuEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseContextMenuEvent(KUrlComboRequester* self, QContextMenuEvent* event);
void KUrlComboRequester_TabletEvent(KUrlComboRequester* self, QTabletEvent* event);
void KUrlComboRequester_OnTabletEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseTabletEvent(KUrlComboRequester* self, QTabletEvent* event);
void KUrlComboRequester_ActionEvent(KUrlComboRequester* self, QActionEvent* event);
void KUrlComboRequester_OnActionEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseActionEvent(KUrlComboRequester* self, QActionEvent* event);
void KUrlComboRequester_DragEnterEvent(KUrlComboRequester* self, QDragEnterEvent* event);
void KUrlComboRequester_OnDragEnterEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseDragEnterEvent(KUrlComboRequester* self, QDragEnterEvent* event);
void KUrlComboRequester_DragMoveEvent(KUrlComboRequester* self, QDragMoveEvent* event);
void KUrlComboRequester_OnDragMoveEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseDragMoveEvent(KUrlComboRequester* self, QDragMoveEvent* event);
void KUrlComboRequester_DragLeaveEvent(KUrlComboRequester* self, QDragLeaveEvent* event);
void KUrlComboRequester_OnDragLeaveEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseDragLeaveEvent(KUrlComboRequester* self, QDragLeaveEvent* event);
void KUrlComboRequester_DropEvent(KUrlComboRequester* self, QDropEvent* event);
void KUrlComboRequester_OnDropEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseDropEvent(KUrlComboRequester* self, QDropEvent* event);
void KUrlComboRequester_ShowEvent(KUrlComboRequester* self, QShowEvent* event);
void KUrlComboRequester_OnShowEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseShowEvent(KUrlComboRequester* self, QShowEvent* event);
void KUrlComboRequester_HideEvent(KUrlComboRequester* self, QHideEvent* event);
void KUrlComboRequester_OnHideEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseHideEvent(KUrlComboRequester* self, QHideEvent* event);
bool KUrlComboRequester_NativeEvent(KUrlComboRequester* self, const libqt_string eventType, void* message, intptr_t* result);
void KUrlComboRequester_OnNativeEvent(KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseNativeEvent(KUrlComboRequester* self, const libqt_string eventType, void* message, intptr_t* result);
int KUrlComboRequester_Metric(const KUrlComboRequester* self, int param1);
void KUrlComboRequester_OnMetric(const KUrlComboRequester* self, intptr_t slot);
int KUrlComboRequester_QBaseMetric(const KUrlComboRequester* self, int param1);
void KUrlComboRequester_InitPainter(const KUrlComboRequester* self, QPainter* painter);
void KUrlComboRequester_OnInitPainter(const KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseInitPainter(const KUrlComboRequester* self, QPainter* painter);
QPaintDevice* KUrlComboRequester_Redirected(const KUrlComboRequester* self, QPoint* offset);
void KUrlComboRequester_OnRedirected(const KUrlComboRequester* self, intptr_t slot);
QPaintDevice* KUrlComboRequester_QBaseRedirected(const KUrlComboRequester* self, QPoint* offset);
QPainter* KUrlComboRequester_SharedPainter(const KUrlComboRequester* self);
void KUrlComboRequester_OnSharedPainter(const KUrlComboRequester* self, intptr_t slot);
QPainter* KUrlComboRequester_QBaseSharedPainter(const KUrlComboRequester* self);
void KUrlComboRequester_InputMethodEvent(KUrlComboRequester* self, QInputMethodEvent* param1);
void KUrlComboRequester_OnInputMethodEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseInputMethodEvent(KUrlComboRequester* self, QInputMethodEvent* param1);
QVariant* KUrlComboRequester_InputMethodQuery(const KUrlComboRequester* self, int param1);
void KUrlComboRequester_OnInputMethodQuery(const KUrlComboRequester* self, intptr_t slot);
QVariant* KUrlComboRequester_QBaseInputMethodQuery(const KUrlComboRequester* self, int param1);
bool KUrlComboRequester_FocusNextPrevChild(KUrlComboRequester* self, bool next);
void KUrlComboRequester_OnFocusNextPrevChild(KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseFocusNextPrevChild(KUrlComboRequester* self, bool next);
void KUrlComboRequester_TimerEvent(KUrlComboRequester* self, QTimerEvent* event);
void KUrlComboRequester_OnTimerEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseTimerEvent(KUrlComboRequester* self, QTimerEvent* event);
void KUrlComboRequester_ChildEvent(KUrlComboRequester* self, QChildEvent* event);
void KUrlComboRequester_OnChildEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseChildEvent(KUrlComboRequester* self, QChildEvent* event);
void KUrlComboRequester_CustomEvent(KUrlComboRequester* self, QEvent* event);
void KUrlComboRequester_OnCustomEvent(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseCustomEvent(KUrlComboRequester* self, QEvent* event);
void KUrlComboRequester_ConnectNotify(KUrlComboRequester* self, const QMetaMethod* signal);
void KUrlComboRequester_OnConnectNotify(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseConnectNotify(KUrlComboRequester* self, const QMetaMethod* signal);
void KUrlComboRequester_DisconnectNotify(KUrlComboRequester* self, const QMetaMethod* signal);
void KUrlComboRequester_OnDisconnectNotify(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseDisconnectNotify(KUrlComboRequester* self, const QMetaMethod* signal);
void KUrlComboRequester_UpdateMicroFocus(KUrlComboRequester* self);
void KUrlComboRequester_OnUpdateMicroFocus(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseUpdateMicroFocus(KUrlComboRequester* self);
void KUrlComboRequester_Create(KUrlComboRequester* self);
void KUrlComboRequester_OnCreate(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseCreate(KUrlComboRequester* self);
void KUrlComboRequester_Destroy(KUrlComboRequester* self);
void KUrlComboRequester_OnDestroy(KUrlComboRequester* self, intptr_t slot);
void KUrlComboRequester_QBaseDestroy(KUrlComboRequester* self);
bool KUrlComboRequester_FocusNextChild(KUrlComboRequester* self);
void KUrlComboRequester_OnFocusNextChild(KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseFocusNextChild(KUrlComboRequester* self);
bool KUrlComboRequester_FocusPreviousChild(KUrlComboRequester* self);
void KUrlComboRequester_OnFocusPreviousChild(KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseFocusPreviousChild(KUrlComboRequester* self);
QObject* KUrlComboRequester_Sender(const KUrlComboRequester* self);
void KUrlComboRequester_OnSender(const KUrlComboRequester* self, intptr_t slot);
QObject* KUrlComboRequester_QBaseSender(const KUrlComboRequester* self);
int KUrlComboRequester_SenderSignalIndex(const KUrlComboRequester* self);
void KUrlComboRequester_OnSenderSignalIndex(const KUrlComboRequester* self, intptr_t slot);
int KUrlComboRequester_QBaseSenderSignalIndex(const KUrlComboRequester* self);
int KUrlComboRequester_Receivers(const KUrlComboRequester* self, const char* signal);
void KUrlComboRequester_OnReceivers(const KUrlComboRequester* self, intptr_t slot);
int KUrlComboRequester_QBaseReceivers(const KUrlComboRequester* self, const char* signal);
bool KUrlComboRequester_IsSignalConnected(const KUrlComboRequester* self, const QMetaMethod* signal);
void KUrlComboRequester_OnIsSignalConnected(const KUrlComboRequester* self, intptr_t slot);
bool KUrlComboRequester_QBaseIsSignalConnected(const KUrlComboRequester* self, const QMetaMethod* signal);
double KUrlComboRequester_GetDecodedMetricF(const KUrlComboRequester* self, int metricA, int metricB);
void KUrlComboRequester_OnGetDecodedMetricF(const KUrlComboRequester* self, intptr_t slot);
double KUrlComboRequester_QBaseGetDecodedMetricF(const KUrlComboRequester* self, int metricA, int metricB);
void KUrlComboRequester_Delete(KUrlComboRequester* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
