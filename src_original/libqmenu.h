#pragma once
#ifndef SRCC_LIBQMENU_H
#define SRCC_LIBQMENU_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionMenuItem QStyleOptionMenuItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QMenu* QMenu_new(QWidget* parent);
QMenu* QMenu_new2();
QMenu* QMenu_new3(const libqt_string title);
QMenu* QMenu_new4(const libqt_string title, QWidget* parent);
QMetaObject* QMenu_MetaObject(const QMenu* self);
void* QMenu_Metacast(QMenu* self, const char* param1);
int QMenu_Metacall(QMenu* self, int param1, int param2, void** param3);
libqt_string QMenu_Tr(const char* s);
QAction* QMenu_AddMenu(QMenu* self, QMenu* menu);
QMenu* QMenu_AddMenu2(QMenu* self, const libqt_string title);
QMenu* QMenu_AddMenu3(QMenu* self, const QIcon* icon, const libqt_string title);
QAction* QMenu_AddSeparator(QMenu* self);
QAction* QMenu_AddSection(QMenu* self, const libqt_string text);
QAction* QMenu_AddSection2(QMenu* self, const QIcon* icon, const libqt_string text);
QAction* QMenu_InsertMenu(QMenu* self, QAction* before, QMenu* menu);
QAction* QMenu_InsertSeparator(QMenu* self, QAction* before);
QAction* QMenu_InsertSection(QMenu* self, QAction* before, const libqt_string text);
QAction* QMenu_InsertSection2(QMenu* self, QAction* before, const QIcon* icon, const libqt_string text);
bool QMenu_IsEmpty(const QMenu* self);
void QMenu_Clear(QMenu* self);
void QMenu_SetTearOffEnabled(QMenu* self, bool tearOffEnabled);
bool QMenu_IsTearOffEnabled(const QMenu* self);
bool QMenu_IsTearOffMenuVisible(const QMenu* self);
void QMenu_ShowTearOffMenu(QMenu* self);
void QMenu_ShowTearOffMenu2(QMenu* self, const QPoint* pos);
void QMenu_HideTearOffMenu(QMenu* self);
void QMenu_SetDefaultAction(QMenu* self, QAction* defaultAction);
QAction* QMenu_DefaultAction(const QMenu* self);
void QMenu_SetActiveAction(QMenu* self, QAction* act);
QAction* QMenu_ActiveAction(const QMenu* self);
void QMenu_Popup(QMenu* self, const QPoint* pos);
QAction* QMenu_Exec(QMenu* self);
QAction* QMenu_Exec2(QMenu* self, const QPoint* pos);
QAction* QMenu_Exec3(const libqt_list /* of QAction* */ actions, const QPoint* pos);
QSize* QMenu_SizeHint(const QMenu* self);
QRect* QMenu_ActionGeometry(const QMenu* self, QAction* param1);
QAction* QMenu_ActionAt(const QMenu* self, const QPoint* param1);
QAction* QMenu_MenuAction(const QMenu* self);
QMenu* QMenu_MenuInAction(const QAction* action);
libqt_string QMenu_Title(const QMenu* self);
void QMenu_SetTitle(QMenu* self, const libqt_string title);
QIcon* QMenu_Icon(const QMenu* self);
void QMenu_SetIcon(QMenu* self, const QIcon* icon);
void QMenu_SetNoReplayFor(QMenu* self, QWidget* widget);
bool QMenu_SeparatorsCollapsible(const QMenu* self);
void QMenu_SetSeparatorsCollapsible(QMenu* self, bool collapse);
bool QMenu_ToolTipsVisible(const QMenu* self);
void QMenu_SetToolTipsVisible(QMenu* self, bool visible);
void QMenu_AboutToShow(QMenu* self);
void QMenu_Connect_AboutToShow(QMenu* self, intptr_t slot);
void QMenu_AboutToHide(QMenu* self);
void QMenu_Connect_AboutToHide(QMenu* self, intptr_t slot);
void QMenu_Triggered(QMenu* self, QAction* action);
void QMenu_Connect_Triggered(QMenu* self, intptr_t slot);
void QMenu_Hovered(QMenu* self, QAction* action);
void QMenu_Connect_Hovered(QMenu* self, intptr_t slot);
void QMenu_ChangeEvent(QMenu* self, QEvent* param1);
void QMenu_KeyPressEvent(QMenu* self, QKeyEvent* param1);
void QMenu_MouseReleaseEvent(QMenu* self, QMouseEvent* param1);
void QMenu_MousePressEvent(QMenu* self, QMouseEvent* param1);
void QMenu_MouseMoveEvent(QMenu* self, QMouseEvent* param1);
void QMenu_WheelEvent(QMenu* self, QWheelEvent* param1);
void QMenu_EnterEvent(QMenu* self, QEnterEvent* param1);
void QMenu_LeaveEvent(QMenu* self, QEvent* param1);
void QMenu_HideEvent(QMenu* self, QHideEvent* param1);
void QMenu_PaintEvent(QMenu* self, QPaintEvent* param1);
void QMenu_ActionEvent(QMenu* self, QActionEvent* param1);
void QMenu_TimerEvent(QMenu* self, QTimerEvent* param1);
bool QMenu_Event(QMenu* self, QEvent* param1);
bool QMenu_FocusNextPrevChild(QMenu* self, bool next);
void QMenu_InitStyleOption(const QMenu* self, QStyleOptionMenuItem* option, const QAction* action);
libqt_string QMenu_Tr2(const char* s, const char* c);
libqt_string QMenu_Tr3(const char* s, const char* c, int n);
void QMenu_Popup2(QMenu* self, const QPoint* pos, QAction* at);
QAction* QMenu_Exec22(QMenu* self, const QPoint* pos, QAction* at);
QAction* QMenu_Exec32(const libqt_list /* of QAction* */ actions, const QPoint* pos, QAction* at);
QAction* QMenu_Exec4(const libqt_list /* of QAction* */ actions, const QPoint* pos, QAction* at, QWidget* parent);
void QMenu_OnMetacall(QMenu* self, intptr_t slot);
int QMenu_QBaseMetacall(QMenu* self, int param1, int param2, void** param3);
void QMenu_OnSizeHint(const QMenu* self, intptr_t slot);
QSize* QMenu_QBaseSizeHint(const QMenu* self);
void QMenu_OnChangeEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseChangeEvent(QMenu* self, QEvent* param1);
void QMenu_OnKeyPressEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseKeyPressEvent(QMenu* self, QKeyEvent* param1);
void QMenu_OnMouseReleaseEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseMouseReleaseEvent(QMenu* self, QMouseEvent* param1);
void QMenu_OnMousePressEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseMousePressEvent(QMenu* self, QMouseEvent* param1);
void QMenu_OnMouseMoveEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseMouseMoveEvent(QMenu* self, QMouseEvent* param1);
void QMenu_OnWheelEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseWheelEvent(QMenu* self, QWheelEvent* param1);
void QMenu_OnEnterEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseEnterEvent(QMenu* self, QEnterEvent* param1);
void QMenu_OnLeaveEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseLeaveEvent(QMenu* self, QEvent* param1);
void QMenu_OnHideEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseHideEvent(QMenu* self, QHideEvent* param1);
void QMenu_OnPaintEvent(QMenu* self, intptr_t slot);
void QMenu_QBasePaintEvent(QMenu* self, QPaintEvent* param1);
void QMenu_OnActionEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseActionEvent(QMenu* self, QActionEvent* param1);
void QMenu_OnTimerEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseTimerEvent(QMenu* self, QTimerEvent* param1);
void QMenu_OnEvent(QMenu* self, intptr_t slot);
bool QMenu_QBaseEvent(QMenu* self, QEvent* param1);
void QMenu_OnFocusNextPrevChild(QMenu* self, intptr_t slot);
bool QMenu_QBaseFocusNextPrevChild(QMenu* self, bool next);
void QMenu_OnInitStyleOption(const QMenu* self, intptr_t slot);
void QMenu_QBaseInitStyleOption(const QMenu* self, QStyleOptionMenuItem* option, const QAction* action);
int QMenu_DevType(const QMenu* self);
void QMenu_OnDevType(const QMenu* self, intptr_t slot);
int QMenu_QBaseDevType(const QMenu* self);
void QMenu_SetVisible(QMenu* self, bool visible);
void QMenu_OnSetVisible(QMenu* self, intptr_t slot);
void QMenu_QBaseSetVisible(QMenu* self, bool visible);
QSize* QMenu_MinimumSizeHint(const QMenu* self);
void QMenu_OnMinimumSizeHint(const QMenu* self, intptr_t slot);
QSize* QMenu_QBaseMinimumSizeHint(const QMenu* self);
int QMenu_HeightForWidth(const QMenu* self, int param1);
void QMenu_OnHeightForWidth(const QMenu* self, intptr_t slot);
int QMenu_QBaseHeightForWidth(const QMenu* self, int param1);
bool QMenu_HasHeightForWidth(const QMenu* self);
void QMenu_OnHasHeightForWidth(const QMenu* self, intptr_t slot);
bool QMenu_QBaseHasHeightForWidth(const QMenu* self);
QPaintEngine* QMenu_PaintEngine(const QMenu* self);
void QMenu_OnPaintEngine(const QMenu* self, intptr_t slot);
QPaintEngine* QMenu_QBasePaintEngine(const QMenu* self);
void QMenu_MouseDoubleClickEvent(QMenu* self, QMouseEvent* event);
void QMenu_OnMouseDoubleClickEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseMouseDoubleClickEvent(QMenu* self, QMouseEvent* event);
void QMenu_KeyReleaseEvent(QMenu* self, QKeyEvent* event);
void QMenu_OnKeyReleaseEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseKeyReleaseEvent(QMenu* self, QKeyEvent* event);
void QMenu_FocusInEvent(QMenu* self, QFocusEvent* event);
void QMenu_OnFocusInEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseFocusInEvent(QMenu* self, QFocusEvent* event);
void QMenu_FocusOutEvent(QMenu* self, QFocusEvent* event);
void QMenu_OnFocusOutEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseFocusOutEvent(QMenu* self, QFocusEvent* event);
void QMenu_MoveEvent(QMenu* self, QMoveEvent* event);
void QMenu_OnMoveEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseMoveEvent(QMenu* self, QMoveEvent* event);
void QMenu_ResizeEvent(QMenu* self, QResizeEvent* event);
void QMenu_OnResizeEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseResizeEvent(QMenu* self, QResizeEvent* event);
void QMenu_CloseEvent(QMenu* self, QCloseEvent* event);
void QMenu_OnCloseEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseCloseEvent(QMenu* self, QCloseEvent* event);
void QMenu_ContextMenuEvent(QMenu* self, QContextMenuEvent* event);
void QMenu_OnContextMenuEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseContextMenuEvent(QMenu* self, QContextMenuEvent* event);
void QMenu_TabletEvent(QMenu* self, QTabletEvent* event);
void QMenu_OnTabletEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseTabletEvent(QMenu* self, QTabletEvent* event);
void QMenu_DragEnterEvent(QMenu* self, QDragEnterEvent* event);
void QMenu_OnDragEnterEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseDragEnterEvent(QMenu* self, QDragEnterEvent* event);
void QMenu_DragMoveEvent(QMenu* self, QDragMoveEvent* event);
void QMenu_OnDragMoveEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseDragMoveEvent(QMenu* self, QDragMoveEvent* event);
void QMenu_DragLeaveEvent(QMenu* self, QDragLeaveEvent* event);
void QMenu_OnDragLeaveEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseDragLeaveEvent(QMenu* self, QDragLeaveEvent* event);
void QMenu_DropEvent(QMenu* self, QDropEvent* event);
void QMenu_OnDropEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseDropEvent(QMenu* self, QDropEvent* event);
void QMenu_ShowEvent(QMenu* self, QShowEvent* event);
void QMenu_OnShowEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseShowEvent(QMenu* self, QShowEvent* event);
bool QMenu_NativeEvent(QMenu* self, const libqt_string eventType, void* message, intptr_t* result);
void QMenu_OnNativeEvent(QMenu* self, intptr_t slot);
bool QMenu_QBaseNativeEvent(QMenu* self, const libqt_string eventType, void* message, intptr_t* result);
int QMenu_Metric(const QMenu* self, int param1);
void QMenu_OnMetric(const QMenu* self, intptr_t slot);
int QMenu_QBaseMetric(const QMenu* self, int param1);
void QMenu_InitPainter(const QMenu* self, QPainter* painter);
void QMenu_OnInitPainter(const QMenu* self, intptr_t slot);
void QMenu_QBaseInitPainter(const QMenu* self, QPainter* painter);
QPaintDevice* QMenu_Redirected(const QMenu* self, QPoint* offset);
void QMenu_OnRedirected(const QMenu* self, intptr_t slot);
QPaintDevice* QMenu_QBaseRedirected(const QMenu* self, QPoint* offset);
QPainter* QMenu_SharedPainter(const QMenu* self);
void QMenu_OnSharedPainter(const QMenu* self, intptr_t slot);
QPainter* QMenu_QBaseSharedPainter(const QMenu* self);
void QMenu_InputMethodEvent(QMenu* self, QInputMethodEvent* param1);
void QMenu_OnInputMethodEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseInputMethodEvent(QMenu* self, QInputMethodEvent* param1);
QVariant* QMenu_InputMethodQuery(const QMenu* self, int param1);
void QMenu_OnInputMethodQuery(const QMenu* self, intptr_t slot);
QVariant* QMenu_QBaseInputMethodQuery(const QMenu* self, int param1);
bool QMenu_EventFilter(QMenu* self, QObject* watched, QEvent* event);
void QMenu_OnEventFilter(QMenu* self, intptr_t slot);
bool QMenu_QBaseEventFilter(QMenu* self, QObject* watched, QEvent* event);
void QMenu_ChildEvent(QMenu* self, QChildEvent* event);
void QMenu_OnChildEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseChildEvent(QMenu* self, QChildEvent* event);
void QMenu_CustomEvent(QMenu* self, QEvent* event);
void QMenu_OnCustomEvent(QMenu* self, intptr_t slot);
void QMenu_QBaseCustomEvent(QMenu* self, QEvent* event);
void QMenu_ConnectNotify(QMenu* self, const QMetaMethod* signal);
void QMenu_OnConnectNotify(QMenu* self, intptr_t slot);
void QMenu_QBaseConnectNotify(QMenu* self, const QMetaMethod* signal);
void QMenu_DisconnectNotify(QMenu* self, const QMetaMethod* signal);
void QMenu_OnDisconnectNotify(QMenu* self, intptr_t slot);
void QMenu_QBaseDisconnectNotify(QMenu* self, const QMetaMethod* signal);
int QMenu_ColumnCount(const QMenu* self);
void QMenu_OnColumnCount(const QMenu* self, intptr_t slot);
int QMenu_QBaseColumnCount(const QMenu* self);
void QMenu_UpdateMicroFocus(QMenu* self);
void QMenu_OnUpdateMicroFocus(QMenu* self, intptr_t slot);
void QMenu_QBaseUpdateMicroFocus(QMenu* self);
void QMenu_Create(QMenu* self);
void QMenu_OnCreate(QMenu* self, intptr_t slot);
void QMenu_QBaseCreate(QMenu* self);
void QMenu_Destroy(QMenu* self);
void QMenu_OnDestroy(QMenu* self, intptr_t slot);
void QMenu_QBaseDestroy(QMenu* self);
bool QMenu_FocusNextChild(QMenu* self);
void QMenu_OnFocusNextChild(QMenu* self, intptr_t slot);
bool QMenu_QBaseFocusNextChild(QMenu* self);
bool QMenu_FocusPreviousChild(QMenu* self);
void QMenu_OnFocusPreviousChild(QMenu* self, intptr_t slot);
bool QMenu_QBaseFocusPreviousChild(QMenu* self);
QObject* QMenu_Sender(const QMenu* self);
void QMenu_OnSender(const QMenu* self, intptr_t slot);
QObject* QMenu_QBaseSender(const QMenu* self);
int QMenu_SenderSignalIndex(const QMenu* self);
void QMenu_OnSenderSignalIndex(const QMenu* self, intptr_t slot);
int QMenu_QBaseSenderSignalIndex(const QMenu* self);
int QMenu_Receivers(const QMenu* self, const char* signal);
void QMenu_OnReceivers(const QMenu* self, intptr_t slot);
int QMenu_QBaseReceivers(const QMenu* self, const char* signal);
bool QMenu_IsSignalConnected(const QMenu* self, const QMetaMethod* signal);
void QMenu_OnIsSignalConnected(const QMenu* self, intptr_t slot);
bool QMenu_QBaseIsSignalConnected(const QMenu* self, const QMetaMethod* signal);
double QMenu_GetDecodedMetricF(const QMenu* self, int metricA, int metricB);
void QMenu_OnGetDecodedMetricF(const QMenu* self, intptr_t slot);
double QMenu_QBaseGetDecodedMetricF(const QMenu* self, int metricA, int metricB);
void QMenu_Delete(QMenu* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
