#pragma once
#ifndef SRC_OPENGLC_LIBQOPENGLFUNCTIONS_3_3_CORE_H
#define SRC_OPENGLC_LIBQOPENGLFUNCTIONS_3_3_CORE_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef char GLchar;
typedef float GLclampf;
typedef struct QAbstractOpenGLFunctions QAbstractOpenGLFunctions;
typedef struct QOpenGLContext QOpenGLContext;
typedef struct QOpenGLFunctions_3_3_Core QOpenGLFunctions_3_3_Core;
#endif

QOpenGLFunctions_3_3_Core* QOpenGLFunctions_3_3_Core_new();
bool QOpenGLFunctions_3_3_Core_InitializeOpenGLFunctions(QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_GlViewport(QOpenGLFunctions_3_3_Core* self, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Core_GlDepthRange(QOpenGLFunctions_3_3_Core* self, double nearVal, double farVal);
unsigned char QOpenGLFunctions_3_3_Core_GlIsEnabled(QOpenGLFunctions_3_3_Core* self, uint32_t cap);
void QOpenGLFunctions_3_3_Core_GlGetTexLevelParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetTexLevelParameterfv(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Core_GlGetTexParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetTexParameterfv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Core_GlGetTexImage(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t format, uint32_t typeVal, void* pixels);
const uint8_t* QOpenGLFunctions_3_3_Core_GlGetString(QOpenGLFunctions_3_3_Core* self, uint32_t name);
void QOpenGLFunctions_3_3_Core_GlGetIntegerv(QOpenGLFunctions_3_3_Core* self, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetFloatv(QOpenGLFunctions_3_3_Core* self, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Core_GlGetDoublev(QOpenGLFunctions_3_3_Core* self, uint32_t pname, double* params);
void QOpenGLFunctions_3_3_Core_GlGetBooleanv(QOpenGLFunctions_3_3_Core* self, uint32_t pname, unsigned char* params);
void QOpenGLFunctions_3_3_Core_GlReadPixels(QOpenGLFunctions_3_3_Core* self, int32_t x, int32_t y, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, void* pixels);
void QOpenGLFunctions_3_3_Core_GlReadBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlPixelStorei(QOpenGLFunctions_3_3_Core* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Core_GlPixelStoref(QOpenGLFunctions_3_3_Core* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Core_GlDepthFunc(QOpenGLFunctions_3_3_Core* self, uint32_t func);
void QOpenGLFunctions_3_3_Core_GlStencilOp(QOpenGLFunctions_3_3_Core* self, uint32_t fail, uint32_t zfail, uint32_t zpass);
void QOpenGLFunctions_3_3_Core_GlStencilFunc(QOpenGLFunctions_3_3_Core* self, uint32_t func, int32_t ref, uint32_t mask);
void QOpenGLFunctions_3_3_Core_GlLogicOp(QOpenGLFunctions_3_3_Core* self, uint32_t opcode);
void QOpenGLFunctions_3_3_Core_GlBlendFunc(QOpenGLFunctions_3_3_Core* self, uint32_t sfactor, uint32_t dfactor);
void QOpenGLFunctions_3_3_Core_GlFlush(QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_GlFinish(QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_GlEnable(QOpenGLFunctions_3_3_Core* self, uint32_t cap);
void QOpenGLFunctions_3_3_Core_GlDisable(QOpenGLFunctions_3_3_Core* self, uint32_t cap);
void QOpenGLFunctions_3_3_Core_GlDepthMask(QOpenGLFunctions_3_3_Core* self, unsigned char flag);
void QOpenGLFunctions_3_3_Core_GlColorMask(QOpenGLFunctions_3_3_Core* self, unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha);
void QOpenGLFunctions_3_3_Core_GlStencilMask(QOpenGLFunctions_3_3_Core* self, uint32_t mask);
void QOpenGLFunctions_3_3_Core_GlClearDepth(QOpenGLFunctions_3_3_Core* self, double depth);
void QOpenGLFunctions_3_3_Core_GlClearStencil(QOpenGLFunctions_3_3_Core* self, int32_t s);
void QOpenGLFunctions_3_3_Core_GlClearColor(QOpenGLFunctions_3_3_Core* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_3_Core_GlClear(QOpenGLFunctions_3_3_Core* self, uint32_t mask);
void QOpenGLFunctions_3_3_Core_GlDrawBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlTexImage2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Core_GlTexImage1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Core_GlTexParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Core_GlTexParameteri(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Core_GlTexParameterfv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Core_GlTexParameterf(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Core_GlScissor(QOpenGLFunctions_3_3_Core* self, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Core_GlPolygonMode(QOpenGLFunctions_3_3_Core* self, uint32_t face, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlPointSize(QOpenGLFunctions_3_3_Core* self, float size);
void QOpenGLFunctions_3_3_Core_GlLineWidth(QOpenGLFunctions_3_3_Core* self, float width);
void QOpenGLFunctions_3_3_Core_GlHint(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlFrontFace(QOpenGLFunctions_3_3_Core* self, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlCullFace(QOpenGLFunctions_3_3_Core* self, uint32_t mode);
unsigned char QOpenGLFunctions_3_3_Core_GlIsTexture(QOpenGLFunctions_3_3_Core* self, uint32_t texture);
void QOpenGLFunctions_3_3_Core_GlGenTextures(QOpenGLFunctions_3_3_Core* self, int32_t n, uint32_t* textures);
void QOpenGLFunctions_3_3_Core_GlDeleteTextures(QOpenGLFunctions_3_3_Core* self, int32_t n, const uint32_t* textures);
void QOpenGLFunctions_3_3_Core_GlBindTexture(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t texture);
void QOpenGLFunctions_3_3_Core_GlTexSubImage2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Core_GlTexSubImage1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Core_GlCopyTexSubImage2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Core_GlCopyTexSubImage1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t x, int32_t y, int32_t width);
void QOpenGLFunctions_3_3_Core_GlCopyTexImage2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t height, int32_t border);
void QOpenGLFunctions_3_3_Core_GlCopyTexImage1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t border);
void QOpenGLFunctions_3_3_Core_GlPolygonOffset(QOpenGLFunctions_3_3_Core* self, float factor, float units);
void QOpenGLFunctions_3_3_Core_GlDrawElements(QOpenGLFunctions_3_3_Core* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices);
void QOpenGLFunctions_3_3_Core_GlDrawArrays(QOpenGLFunctions_3_3_Core* self, uint32_t mode, int32_t first, int32_t count);
void QOpenGLFunctions_3_3_Core_GlCopyTexSubImage3D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Core_GlTexSubImage3D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t width, int32_t height, int32_t depth, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Core_GlTexImage3D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t depth, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_3_Core_GlDrawRangeElements(QOpenGLFunctions_3_3_Core* self, uint32_t mode, uint32_t start, uint32_t end, int32_t count, uint32_t typeVal, const void* indices);
void QOpenGLFunctions_3_3_Core_GlBlendEquation(QOpenGLFunctions_3_3_Core* self, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlBlendColor(QOpenGLFunctions_3_3_Core* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_3_Core_GlGetCompressedTexImage(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, void* img);
void QOpenGLFunctions_3_3_Core_GlCompressedTexSubImage1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Core_GlCompressedTexSubImage2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Core_GlCompressedTexSubImage3D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t width, int32_t height, int32_t depth, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Core_GlCompressedTexImage1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Core_GlCompressedTexImage2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t height, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Core_GlCompressedTexImage3D(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t height, int32_t depth, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_3_Core_GlSampleCoverage(QOpenGLFunctions_3_3_Core* self, float value, unsigned char invert);
void QOpenGLFunctions_3_3_Core_GlActiveTexture(QOpenGLFunctions_3_3_Core* self, uint32_t texture);
void QOpenGLFunctions_3_3_Core_GlPointParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Core_GlPointParameteri(QOpenGLFunctions_3_3_Core* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Core_GlPointParameterfv(QOpenGLFunctions_3_3_Core* self, uint32_t pname, const float* params);
void QOpenGLFunctions_3_3_Core_GlPointParameterf(QOpenGLFunctions_3_3_Core* self, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Core_GlMultiDrawArrays(QOpenGLFunctions_3_3_Core* self, uint32_t mode, const int32_t* first, const int32_t* count, int32_t drawcount);
void QOpenGLFunctions_3_3_Core_GlBlendFuncSeparate(QOpenGLFunctions_3_3_Core* self, uint32_t sfactorRGB, uint32_t dfactorRGB, uint32_t sfactorAlpha, uint32_t dfactorAlpha);
void QOpenGLFunctions_3_3_Core_GlGetBufferParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int32_t* params);
unsigned char QOpenGLFunctions_3_3_Core_GlUnmapBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target);
void* QOpenGLFunctions_3_3_Core_GlMapBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t access);
void QOpenGLFunctions_3_3_Core_GlGetBufferSubData(QOpenGLFunctions_3_3_Core* self, uint32_t target, int64_t offset, int64_t size, void* data);
void QOpenGLFunctions_3_3_Core_GlBufferSubData(QOpenGLFunctions_3_3_Core* self, uint32_t target, int64_t offset, int64_t size, const void* data);
void QOpenGLFunctions_3_3_Core_GlBufferData(QOpenGLFunctions_3_3_Core* self, uint32_t target, int64_t size, const void* data, uint32_t usage);
unsigned char QOpenGLFunctions_3_3_Core_GlIsBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t buffer);
void QOpenGLFunctions_3_3_Core_GlGenBuffers(QOpenGLFunctions_3_3_Core* self, int32_t n, uint32_t* buffers);
void QOpenGLFunctions_3_3_Core_GlDeleteBuffers(QOpenGLFunctions_3_3_Core* self, int32_t n, const uint32_t* buffers);
void QOpenGLFunctions_3_3_Core_GlBindBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t buffer);
void QOpenGLFunctions_3_3_Core_GlGetQueryObjectuiv(QOpenGLFunctions_3_3_Core* self, uint32_t id, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetQueryObjectiv(QOpenGLFunctions_3_3_Core* self, uint32_t id, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetQueryiv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlEndQuery(QOpenGLFunctions_3_3_Core* self, uint32_t target);
void QOpenGLFunctions_3_3_Core_GlBeginQuery(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t id);
unsigned char QOpenGLFunctions_3_3_Core_GlIsQuery(QOpenGLFunctions_3_3_Core* self, uint32_t id);
void QOpenGLFunctions_3_3_Core_GlDeleteQueries(QOpenGLFunctions_3_3_Core* self, int32_t n, const uint32_t* ids);
void QOpenGLFunctions_3_3_Core_GlGenQueries(QOpenGLFunctions_3_3_Core* self, int32_t n, uint32_t* ids);
void QOpenGLFunctions_3_3_Core_GlVertexAttribPointer(QOpenGLFunctions_3_3_Core* self, uint32_t index, int32_t size, uint32_t typeVal, unsigned char normalized, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Core_GlValidateProgram(QOpenGLFunctions_3_3_Core* self, uint32_t program);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix4fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix3fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix2fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniform4iv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform3iv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform2iv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform1iv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform4fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniform3fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniform2fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniform1fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniform4i(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t v0, int32_t v1, int32_t v2, int32_t v3);
void QOpenGLFunctions_3_3_Core_GlUniform3i(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t v0, int32_t v1, int32_t v2);
void QOpenGLFunctions_3_3_Core_GlUniform2i(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t v0, int32_t v1);
void QOpenGLFunctions_3_3_Core_GlUniform1i(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t v0);
void QOpenGLFunctions_3_3_Core_GlUniform4f(QOpenGLFunctions_3_3_Core* self, int32_t location, float v0, float v1, float v2, float v3);
void QOpenGLFunctions_3_3_Core_GlUniform3f(QOpenGLFunctions_3_3_Core* self, int32_t location, float v0, float v1, float v2);
void QOpenGLFunctions_3_3_Core_GlUniform2f(QOpenGLFunctions_3_3_Core* self, int32_t location, float v0, float v1);
void QOpenGLFunctions_3_3_Core_GlUniform1f(QOpenGLFunctions_3_3_Core* self, int32_t location, float v0);
void QOpenGLFunctions_3_3_Core_GlUseProgram(QOpenGLFunctions_3_3_Core* self, uint32_t program);
void QOpenGLFunctions_3_3_Core_GlLinkProgram(QOpenGLFunctions_3_3_Core* self, uint32_t program);
unsigned char QOpenGLFunctions_3_3_Core_GlIsShader(QOpenGLFunctions_3_3_Core* self, uint32_t shader);
unsigned char QOpenGLFunctions_3_3_Core_GlIsProgram(QOpenGLFunctions_3_3_Core* self, uint32_t program);
void QOpenGLFunctions_3_3_Core_GlGetVertexAttribiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetVertexAttribfv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Core_GlGetVertexAttribdv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t pname, double* params);
void QOpenGLFunctions_3_3_Core_GlGetUniformiv(QOpenGLFunctions_3_3_Core* self, uint32_t program, int32_t location, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetUniformfv(QOpenGLFunctions_3_3_Core* self, uint32_t program, int32_t location, float* params);
int32_t QOpenGLFunctions_3_3_Core_GlGetUniformLocation(QOpenGLFunctions_3_3_Core* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlGetShaderSource(QOpenGLFunctions_3_3_Core* self, uint32_t shader, int32_t bufSize, int32_t* length, GLchar* source);
void QOpenGLFunctions_3_3_Core_GlGetShaderInfoLog(QOpenGLFunctions_3_3_Core* self, uint32_t shader, int32_t bufSize, int32_t* length, GLchar* infoLog);
void QOpenGLFunctions_3_3_Core_GlGetShaderiv(QOpenGLFunctions_3_3_Core* self, uint32_t shader, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetProgramInfoLog(QOpenGLFunctions_3_3_Core* self, uint32_t program, int32_t bufSize, int32_t* length, GLchar* infoLog);
void QOpenGLFunctions_3_3_Core_GlGetProgramiv(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t pname, int32_t* params);
int32_t QOpenGLFunctions_3_3_Core_GlGetAttribLocation(QOpenGLFunctions_3_3_Core* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlGetAttachedShaders(QOpenGLFunctions_3_3_Core* self, uint32_t program, int32_t maxCount, int32_t* count, uint32_t* obj);
void QOpenGLFunctions_3_3_Core_GlEnableVertexAttribArray(QOpenGLFunctions_3_3_Core* self, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlDisableVertexAttribArray(QOpenGLFunctions_3_3_Core* self, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlDetachShader(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t shader);
void QOpenGLFunctions_3_3_Core_GlDeleteShader(QOpenGLFunctions_3_3_Core* self, uint32_t shader);
void QOpenGLFunctions_3_3_Core_GlDeleteProgram(QOpenGLFunctions_3_3_Core* self, uint32_t program);
uint32_t QOpenGLFunctions_3_3_Core_GlCreateShader(QOpenGLFunctions_3_3_Core* self, uint32_t typeVal);
uint32_t QOpenGLFunctions_3_3_Core_GlCreateProgram(QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_GlCompileShader(QOpenGLFunctions_3_3_Core* self, uint32_t shader);
void QOpenGLFunctions_3_3_Core_GlBindAttribLocation(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t index, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlAttachShader(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t shader);
void QOpenGLFunctions_3_3_Core_GlStencilMaskSeparate(QOpenGLFunctions_3_3_Core* self, uint32_t face, uint32_t mask);
void QOpenGLFunctions_3_3_Core_GlStencilFuncSeparate(QOpenGLFunctions_3_3_Core* self, uint32_t face, uint32_t func, int32_t ref, uint32_t mask);
void QOpenGLFunctions_3_3_Core_GlStencilOpSeparate(QOpenGLFunctions_3_3_Core* self, uint32_t face, uint32_t sfail, uint32_t dpfail, uint32_t dppass);
void QOpenGLFunctions_3_3_Core_GlBlendEquationSeparate(QOpenGLFunctions_3_3_Core* self, uint32_t modeRGB, uint32_t modeAlpha);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix4x3fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix3x4fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix4x2fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix2x4fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix3x2fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_3_Core_GlUniformMatrix2x3fv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
unsigned char QOpenGLFunctions_3_3_Core_GlIsVertexArray(QOpenGLFunctions_3_3_Core* self, uint32_t array);
void QOpenGLFunctions_3_3_Core_GlGenVertexArrays(QOpenGLFunctions_3_3_Core* self, int32_t n, uint32_t* arrays);
void QOpenGLFunctions_3_3_Core_GlDeleteVertexArrays(QOpenGLFunctions_3_3_Core* self, int32_t n, const uint32_t* arrays);
void QOpenGLFunctions_3_3_Core_GlBindVertexArray(QOpenGLFunctions_3_3_Core* self, uint32_t array);
void QOpenGLFunctions_3_3_Core_GlFlushMappedBufferRange(QOpenGLFunctions_3_3_Core* self, uint32_t target, int64_t offset, int64_t length);
void* QOpenGLFunctions_3_3_Core_GlMapBufferRange(QOpenGLFunctions_3_3_Core* self, uint32_t target, int64_t offset, int64_t length, uint32_t access);
void QOpenGLFunctions_3_3_Core_GlFramebufferTextureLayer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t texture, int32_t level, int32_t layer);
void QOpenGLFunctions_3_3_Core_GlRenderbufferStorageMultisample(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t samples, uint32_t internalformat, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Core_GlBlitFramebuffer(QOpenGLFunctions_3_3_Core* self, int32_t srcX0, int32_t srcY0, int32_t srcX1, int32_t srcY1, int32_t dstX0, int32_t dstY0, int32_t dstX1, int32_t dstY1, uint32_t mask, uint32_t filter);
void QOpenGLFunctions_3_3_Core_GlGenerateMipmap(QOpenGLFunctions_3_3_Core* self, uint32_t target);
void QOpenGLFunctions_3_3_Core_GlGetFramebufferAttachmentParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlFramebufferRenderbuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t renderbuffertarget, uint32_t renderbuffer);
void QOpenGLFunctions_3_3_Core_GlFramebufferTexture3D(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level, int32_t zoffset);
void QOpenGLFunctions_3_3_Core_GlFramebufferTexture2D(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_3_Core_GlFramebufferTexture1D(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_3_Core_GlGenFramebuffers(QOpenGLFunctions_3_3_Core* self, int32_t n, uint32_t* framebuffers);
void QOpenGLFunctions_3_3_Core_GlDeleteFramebuffers(QOpenGLFunctions_3_3_Core* self, int32_t n, const uint32_t* framebuffers);
void QOpenGLFunctions_3_3_Core_GlBindFramebuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t framebuffer);
unsigned char QOpenGLFunctions_3_3_Core_GlIsFramebuffer(QOpenGLFunctions_3_3_Core* self, uint32_t framebuffer);
void QOpenGLFunctions_3_3_Core_GlGetRenderbufferParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlRenderbufferStorage(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t internalformat, int32_t width, int32_t height);
void QOpenGLFunctions_3_3_Core_GlGenRenderbuffers(QOpenGLFunctions_3_3_Core* self, int32_t n, uint32_t* renderbuffers);
void QOpenGLFunctions_3_3_Core_GlDeleteRenderbuffers(QOpenGLFunctions_3_3_Core* self, int32_t n, const uint32_t* renderbuffers);
void QOpenGLFunctions_3_3_Core_GlBindRenderbuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t renderbuffer);
unsigned char QOpenGLFunctions_3_3_Core_GlIsRenderbuffer(QOpenGLFunctions_3_3_Core* self, uint32_t renderbuffer);
const uint8_t* QOpenGLFunctions_3_3_Core_GlGetStringi(QOpenGLFunctions_3_3_Core* self, uint32_t name, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlClearBufferfi(QOpenGLFunctions_3_3_Core* self, uint32_t buffer, int32_t drawbuffer, float depth, int32_t stencil);
void QOpenGLFunctions_3_3_Core_GlClearBufferfv(QOpenGLFunctions_3_3_Core* self, uint32_t buffer, int32_t drawbuffer, const float* value);
void QOpenGLFunctions_3_3_Core_GlClearBufferuiv(QOpenGLFunctions_3_3_Core* self, uint32_t buffer, int32_t drawbuffer, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlClearBufferiv(QOpenGLFunctions_3_3_Core* self, uint32_t buffer, int32_t drawbuffer, const int32_t* value);
void QOpenGLFunctions_3_3_Core_GlGetTexParameterIuiv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetTexParameterIiv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlTexParameterIuiv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, const uint32_t* params);
void QOpenGLFunctions_3_3_Core_GlTexParameterIiv(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_3_Core_GlUniform4uiv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform3uiv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform2uiv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform1uiv(QOpenGLFunctions_3_3_Core* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlUniform4ui(QOpenGLFunctions_3_3_Core* self, int32_t location, uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3);
void QOpenGLFunctions_3_3_Core_GlUniform3ui(QOpenGLFunctions_3_3_Core* self, int32_t location, uint32_t v0, uint32_t v1, uint32_t v2);
void QOpenGLFunctions_3_3_Core_GlUniform2ui(QOpenGLFunctions_3_3_Core* self, int32_t location, uint32_t v0, uint32_t v1);
void QOpenGLFunctions_3_3_Core_GlUniform1ui(QOpenGLFunctions_3_3_Core* self, int32_t location, uint32_t v0);
int32_t QOpenGLFunctions_3_3_Core_GlGetFragDataLocation(QOpenGLFunctions_3_3_Core* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlBindFragDataLocation(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t color, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlGetUniformuiv(QOpenGLFunctions_3_3_Core* self, uint32_t program, int32_t location, uint32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetVertexAttribIuiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetVertexAttribIiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlVertexAttribIPointer(QOpenGLFunctions_3_3_Core* self, uint32_t index, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_3_Core_GlEndConditionalRender(QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_GlBeginConditionalRender(QOpenGLFunctions_3_3_Core* self, uint32_t id, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlClampColor(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t clamp);
void QOpenGLFunctions_3_3_Core_GlBindBufferBase(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index, uint32_t buffer);
void QOpenGLFunctions_3_3_Core_GlBindBufferRange(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index, uint32_t buffer, int64_t offset, int64_t size);
void QOpenGLFunctions_3_3_Core_GlEndTransformFeedback(QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_GlBeginTransformFeedback(QOpenGLFunctions_3_3_Core* self, uint32_t primitiveMode);
unsigned char QOpenGLFunctions_3_3_Core_GlIsEnabledi(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlDisablei(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlEnablei(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlGetIntegeriV(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index, int32_t* data);
void QOpenGLFunctions_3_3_Core_GlGetBooleaniV(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index, unsigned char* data);
void QOpenGLFunctions_3_3_Core_GlColorMaski(QOpenGLFunctions_3_3_Core* self, uint32_t index, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
void QOpenGLFunctions_3_3_Core_GlCopyBufferSubData(QOpenGLFunctions_3_3_Core* self, uint32_t readTarget, uint32_t writeTarget, int64_t readOffset, int64_t writeOffset, int64_t size);
void QOpenGLFunctions_3_3_Core_GlUniformBlockBinding(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t uniformBlockIndex, uint32_t uniformBlockBinding);
void QOpenGLFunctions_3_3_Core_GlGetActiveUniformBlockName(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t uniformBlockIndex, int32_t bufSize, int32_t* length, GLchar* uniformBlockName);
void QOpenGLFunctions_3_3_Core_GlGetActiveUniformBlockiv(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t uniformBlockIndex, uint32_t pname, int32_t* params);
uint32_t QOpenGLFunctions_3_3_Core_GlGetUniformBlockIndex(QOpenGLFunctions_3_3_Core* self, uint32_t program, const GLchar* uniformBlockName);
void QOpenGLFunctions_3_3_Core_GlGetActiveUniformName(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t uniformIndex, int32_t bufSize, int32_t* length, GLchar* uniformName);
void QOpenGLFunctions_3_3_Core_GlGetActiveUniformsiv(QOpenGLFunctions_3_3_Core* self, uint32_t program, int32_t uniformCount, const uint32_t* uniformIndices, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlPrimitiveRestartIndex(QOpenGLFunctions_3_3_Core* self, uint32_t index);
void QOpenGLFunctions_3_3_Core_GlTexBuffer(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t internalformat, uint32_t buffer);
void QOpenGLFunctions_3_3_Core_GlDrawElementsInstanced(QOpenGLFunctions_3_3_Core* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t instancecount);
void QOpenGLFunctions_3_3_Core_GlDrawArraysInstanced(QOpenGLFunctions_3_3_Core* self, uint32_t mode, int32_t first, int32_t count, int32_t instancecount);
void QOpenGLFunctions_3_3_Core_GlSampleMaski(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t mask);
void QOpenGLFunctions_3_3_Core_GlGetMultisamplefv(QOpenGLFunctions_3_3_Core* self, uint32_t pname, uint32_t index, float* val);
void QOpenGLFunctions_3_3_Core_GlTexImage3DMultisample(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t samples, int32_t internalformat, int32_t width, int32_t height, int32_t depth, unsigned char fixedsamplelocations);
void QOpenGLFunctions_3_3_Core_GlTexImage2DMultisample(QOpenGLFunctions_3_3_Core* self, uint32_t target, int32_t samples, int32_t internalformat, int32_t width, int32_t height, unsigned char fixedsamplelocations);
void QOpenGLFunctions_3_3_Core_GlGetInteger64v(QOpenGLFunctions_3_3_Core* self, uint32_t pname, int64_t* params);
void QOpenGLFunctions_3_3_Core_GlProvokingVertex(QOpenGLFunctions_3_3_Core* self, uint32_t mode);
void QOpenGLFunctions_3_3_Core_GlDrawElementsInstancedBaseVertex(QOpenGLFunctions_3_3_Core* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t instancecount, int32_t basevertex);
void QOpenGLFunctions_3_3_Core_GlDrawRangeElementsBaseVertex(QOpenGLFunctions_3_3_Core* self, uint32_t mode, uint32_t start, uint32_t end, int32_t count, uint32_t typeVal, const void* indices, int32_t basevertex);
void QOpenGLFunctions_3_3_Core_GlDrawElementsBaseVertex(QOpenGLFunctions_3_3_Core* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t basevertex);
void QOpenGLFunctions_3_3_Core_GlFramebufferTexture(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t attachment, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_3_Core_GlGetBufferParameteri64v(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t pname, int64_t* params);
void QOpenGLFunctions_3_3_Core_GlGetInteger64iV(QOpenGLFunctions_3_3_Core* self, uint32_t target, uint32_t index, int64_t* data);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP4uiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP4ui(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP3uiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP3ui(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP2uiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP2ui(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP1uiv(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, const uint32_t* value);
void QOpenGLFunctions_3_3_Core_GlVertexAttribP1ui(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t typeVal, unsigned char normalized, uint32_t value);
void QOpenGLFunctions_3_3_Core_GlGetQueryObjectui64v(QOpenGLFunctions_3_3_Core* self, uint32_t id, uint32_t pname, uint64_t* params);
void QOpenGLFunctions_3_3_Core_GlGetQueryObjecti64v(QOpenGLFunctions_3_3_Core* self, uint32_t id, uint32_t pname, int64_t* params);
void QOpenGLFunctions_3_3_Core_GlQueryCounter(QOpenGLFunctions_3_3_Core* self, uint32_t id, uint32_t target);
void QOpenGLFunctions_3_3_Core_GlGetSamplerParameterIuiv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetSamplerParameterfv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, float* params);
void QOpenGLFunctions_3_3_Core_GlGetSamplerParameterIiv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlGetSamplerParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_3_Core_GlSamplerParameterIuiv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, const uint32_t* param);
void QOpenGLFunctions_3_3_Core_GlSamplerParameterIiv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, const int32_t* param);
void QOpenGLFunctions_3_3_Core_GlSamplerParameterfv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, const float* param);
void QOpenGLFunctions_3_3_Core_GlSamplerParameterf(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, float param);
void QOpenGLFunctions_3_3_Core_GlSamplerParameteriv(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, const int32_t* param);
void QOpenGLFunctions_3_3_Core_GlSamplerParameteri(QOpenGLFunctions_3_3_Core* self, uint32_t sampler, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_3_Core_GlBindSampler(QOpenGLFunctions_3_3_Core* self, uint32_t unit, uint32_t sampler);
unsigned char QOpenGLFunctions_3_3_Core_GlIsSampler(QOpenGLFunctions_3_3_Core* self, uint32_t sampler);
void QOpenGLFunctions_3_3_Core_GlDeleteSamplers(QOpenGLFunctions_3_3_Core* self, int32_t count, const uint32_t* samplers);
void QOpenGLFunctions_3_3_Core_GlGenSamplers(QOpenGLFunctions_3_3_Core* self, int32_t count, uint32_t* samplers);
int32_t QOpenGLFunctions_3_3_Core_GlGetFragDataIndex(QOpenGLFunctions_3_3_Core* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlBindFragDataLocationIndexed(QOpenGLFunctions_3_3_Core* self, uint32_t program, uint32_t colorNumber, uint32_t index, const GLchar* name);
void QOpenGLFunctions_3_3_Core_GlVertexAttribDivisor(QOpenGLFunctions_3_3_Core* self, uint32_t index, uint32_t divisor);
void QOpenGLFunctions_3_3_Core_OnInitializeOpenGLFunctions(QOpenGLFunctions_3_3_Core* self, intptr_t slot);
bool QOpenGLFunctions_3_3_Core_QBaseInitializeOpenGLFunctions(QOpenGLFunctions_3_3_Core* self);
bool QOpenGLFunctions_3_3_Core_IsInitialized(const QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_OnIsInitialized(const QOpenGLFunctions_3_3_Core* self, intptr_t slot);
bool QOpenGLFunctions_3_3_Core_QBaseIsInitialized(const QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_SetOwningContext(QOpenGLFunctions_3_3_Core* self, const QOpenGLContext* context);
void QOpenGLFunctions_3_3_Core_OnSetOwningContext(QOpenGLFunctions_3_3_Core* self, intptr_t slot);
void QOpenGLFunctions_3_3_Core_QBaseSetOwningContext(QOpenGLFunctions_3_3_Core* self, const QOpenGLContext* context);
QOpenGLContext* QOpenGLFunctions_3_3_Core_OwningContext(const QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_OnOwningContext(const QOpenGLFunctions_3_3_Core* self, intptr_t slot);
QOpenGLContext* QOpenGLFunctions_3_3_Core_QBaseOwningContext(const QOpenGLFunctions_3_3_Core* self);
void QOpenGLFunctions_3_3_Core_Delete(QOpenGLFunctions_3_3_Core* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
