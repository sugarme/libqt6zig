#pragma once
#ifndef SRC_OPENGLC_LIBQOPENGLFUNCTIONS_3_1_H
#define SRC_OPENGLC_LIBQOPENGLFUNCTIONS_3_1_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef char GLchar;
typedef float GLclampf;
typedef struct QAbstractOpenGLFunctions QAbstractOpenGLFunctions;
typedef struct QOpenGLContext QOpenGLContext;
typedef struct QOpenGLFunctions_3_1 QOpenGLFunctions_3_1;
#endif

QOpenGLFunctions_3_1* QOpenGLFunctions_3_1_new();
bool QOpenGLFunctions_3_1_InitializeOpenGLFunctions(QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_GlViewport(QOpenGLFunctions_3_1* self, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_1_GlDepthRange(QOpenGLFunctions_3_1* self, double nearVal, double farVal);
unsigned char QOpenGLFunctions_3_1_GlIsEnabled(QOpenGLFunctions_3_1* self, uint32_t cap);
void QOpenGLFunctions_3_1_GlGetTexLevelParameteriv(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlGetTexLevelParameterfv(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t pname, float* params);
void QOpenGLFunctions_3_1_GlGetTexParameteriv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlGetTexParameterfv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, float* params);
void QOpenGLFunctions_3_1_GlGetTexImage(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t format, uint32_t typeVal, void* pixels);
const uint8_t* QOpenGLFunctions_3_1_GlGetString(QOpenGLFunctions_3_1* self, uint32_t name);
void QOpenGLFunctions_3_1_GlGetIntegerv(QOpenGLFunctions_3_1* self, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlGetFloatv(QOpenGLFunctions_3_1* self, uint32_t pname, float* params);
void QOpenGLFunctions_3_1_GlGetDoublev(QOpenGLFunctions_3_1* self, uint32_t pname, double* params);
void QOpenGLFunctions_3_1_GlGetBooleanv(QOpenGLFunctions_3_1* self, uint32_t pname, unsigned char* params);
void QOpenGLFunctions_3_1_GlReadPixels(QOpenGLFunctions_3_1* self, int32_t x, int32_t y, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, void* pixels);
void QOpenGLFunctions_3_1_GlReadBuffer(QOpenGLFunctions_3_1* self, uint32_t mode);
void QOpenGLFunctions_3_1_GlPixelStorei(QOpenGLFunctions_3_1* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_1_GlPixelStoref(QOpenGLFunctions_3_1* self, uint32_t pname, float param);
void QOpenGLFunctions_3_1_GlDepthFunc(QOpenGLFunctions_3_1* self, uint32_t func);
void QOpenGLFunctions_3_1_GlStencilOp(QOpenGLFunctions_3_1* self, uint32_t fail, uint32_t zfail, uint32_t zpass);
void QOpenGLFunctions_3_1_GlStencilFunc(QOpenGLFunctions_3_1* self, uint32_t func, int32_t ref, uint32_t mask);
void QOpenGLFunctions_3_1_GlLogicOp(QOpenGLFunctions_3_1* self, uint32_t opcode);
void QOpenGLFunctions_3_1_GlBlendFunc(QOpenGLFunctions_3_1* self, uint32_t sfactor, uint32_t dfactor);
void QOpenGLFunctions_3_1_GlFlush(QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_GlFinish(QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_GlEnable(QOpenGLFunctions_3_1* self, uint32_t cap);
void QOpenGLFunctions_3_1_GlDisable(QOpenGLFunctions_3_1* self, uint32_t cap);
void QOpenGLFunctions_3_1_GlDepthMask(QOpenGLFunctions_3_1* self, unsigned char flag);
void QOpenGLFunctions_3_1_GlColorMask(QOpenGLFunctions_3_1* self, unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha);
void QOpenGLFunctions_3_1_GlStencilMask(QOpenGLFunctions_3_1* self, uint32_t mask);
void QOpenGLFunctions_3_1_GlClearDepth(QOpenGLFunctions_3_1* self, double depth);
void QOpenGLFunctions_3_1_GlClearStencil(QOpenGLFunctions_3_1* self, int32_t s);
void QOpenGLFunctions_3_1_GlClearColor(QOpenGLFunctions_3_1* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_1_GlClear(QOpenGLFunctions_3_1* self, uint32_t mask);
void QOpenGLFunctions_3_1_GlDrawBuffer(QOpenGLFunctions_3_1* self, uint32_t mode);
void QOpenGLFunctions_3_1_GlTexImage2D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_1_GlTexImage1D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_1_GlTexParameteriv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_1_GlTexParameteri(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_1_GlTexParameterfv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, const float* params);
void QOpenGLFunctions_3_1_GlTexParameterf(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, float param);
void QOpenGLFunctions_3_1_GlScissor(QOpenGLFunctions_3_1* self, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_1_GlPolygonMode(QOpenGLFunctions_3_1* self, uint32_t face, uint32_t mode);
void QOpenGLFunctions_3_1_GlPointSize(QOpenGLFunctions_3_1* self, float size);
void QOpenGLFunctions_3_1_GlLineWidth(QOpenGLFunctions_3_1* self, float width);
void QOpenGLFunctions_3_1_GlHint(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t mode);
void QOpenGLFunctions_3_1_GlFrontFace(QOpenGLFunctions_3_1* self, uint32_t mode);
void QOpenGLFunctions_3_1_GlCullFace(QOpenGLFunctions_3_1* self, uint32_t mode);
unsigned char QOpenGLFunctions_3_1_GlIsTexture(QOpenGLFunctions_3_1* self, uint32_t texture);
void QOpenGLFunctions_3_1_GlGenTextures(QOpenGLFunctions_3_1* self, int32_t n, uint32_t* textures);
void QOpenGLFunctions_3_1_GlDeleteTextures(QOpenGLFunctions_3_1* self, int32_t n, const uint32_t* textures);
void QOpenGLFunctions_3_1_GlBindTexture(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t texture);
void QOpenGLFunctions_3_1_GlTexSubImage2D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_1_GlTexSubImage1D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_1_GlCopyTexSubImage2D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_1_GlCopyTexSubImage1D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t x, int32_t y, int32_t width);
void QOpenGLFunctions_3_1_GlCopyTexImage2D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t height, int32_t border);
void QOpenGLFunctions_3_1_GlCopyTexImage1D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t x, int32_t y, int32_t width, int32_t border);
void QOpenGLFunctions_3_1_GlPolygonOffset(QOpenGLFunctions_3_1* self, float factor, float units);
void QOpenGLFunctions_3_1_GlDrawElements(QOpenGLFunctions_3_1* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices);
void QOpenGLFunctions_3_1_GlDrawArrays(QOpenGLFunctions_3_1* self, uint32_t mode, int32_t first, int32_t count);
void QOpenGLFunctions_3_1_GlCopyTexSubImage3D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t x, int32_t y, int32_t width, int32_t height);
void QOpenGLFunctions_3_1_GlTexSubImage3D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t width, int32_t height, int32_t depth, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_1_GlTexImage3D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t internalformat, int32_t width, int32_t height, int32_t depth, int32_t border, uint32_t format, uint32_t typeVal, const void* pixels);
void QOpenGLFunctions_3_1_GlDrawRangeElements(QOpenGLFunctions_3_1* self, uint32_t mode, uint32_t start, uint32_t end, int32_t count, uint32_t typeVal, const void* indices);
void QOpenGLFunctions_3_1_GlBlendEquation(QOpenGLFunctions_3_1* self, uint32_t mode);
void QOpenGLFunctions_3_1_GlBlendColor(QOpenGLFunctions_3_1* self, float red, float green, float blue, float alpha);
void QOpenGLFunctions_3_1_GlGetCompressedTexImage(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, void* img);
void QOpenGLFunctions_3_1_GlCompressedTexSubImage1D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t width, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_1_GlCompressedTexSubImage2D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t width, int32_t height, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_1_GlCompressedTexSubImage3D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, int32_t xoffset, int32_t yoffset, int32_t zoffset, int32_t width, int32_t height, int32_t depth, uint32_t format, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_1_GlCompressedTexImage1D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_1_GlCompressedTexImage2D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t height, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_1_GlCompressedTexImage3D(QOpenGLFunctions_3_1* self, uint32_t target, int32_t level, uint32_t internalformat, int32_t width, int32_t height, int32_t depth, int32_t border, int32_t imageSize, const void* data);
void QOpenGLFunctions_3_1_GlSampleCoverage(QOpenGLFunctions_3_1* self, float value, unsigned char invert);
void QOpenGLFunctions_3_1_GlActiveTexture(QOpenGLFunctions_3_1* self, uint32_t texture);
void QOpenGLFunctions_3_1_GlPointParameteriv(QOpenGLFunctions_3_1* self, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_1_GlPointParameteri(QOpenGLFunctions_3_1* self, uint32_t pname, int32_t param);
void QOpenGLFunctions_3_1_GlPointParameterfv(QOpenGLFunctions_3_1* self, uint32_t pname, const float* params);
void QOpenGLFunctions_3_1_GlPointParameterf(QOpenGLFunctions_3_1* self, uint32_t pname, float param);
void QOpenGLFunctions_3_1_GlMultiDrawArrays(QOpenGLFunctions_3_1* self, uint32_t mode, const int32_t* first, const int32_t* count, int32_t drawcount);
void QOpenGLFunctions_3_1_GlBlendFuncSeparate(QOpenGLFunctions_3_1* self, uint32_t sfactorRGB, uint32_t dfactorRGB, uint32_t sfactorAlpha, uint32_t dfactorAlpha);
void QOpenGLFunctions_3_1_GlGetBufferParameteriv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, int32_t* params);
unsigned char QOpenGLFunctions_3_1_GlUnmapBuffer(QOpenGLFunctions_3_1* self, uint32_t target);
void* QOpenGLFunctions_3_1_GlMapBuffer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t access);
void QOpenGLFunctions_3_1_GlGetBufferSubData(QOpenGLFunctions_3_1* self, uint32_t target, int64_t offset, int64_t size, void* data);
void QOpenGLFunctions_3_1_GlBufferSubData(QOpenGLFunctions_3_1* self, uint32_t target, int64_t offset, int64_t size, const void* data);
void QOpenGLFunctions_3_1_GlBufferData(QOpenGLFunctions_3_1* self, uint32_t target, int64_t size, const void* data, uint32_t usage);
unsigned char QOpenGLFunctions_3_1_GlIsBuffer(QOpenGLFunctions_3_1* self, uint32_t buffer);
void QOpenGLFunctions_3_1_GlGenBuffers(QOpenGLFunctions_3_1* self, int32_t n, uint32_t* buffers);
void QOpenGLFunctions_3_1_GlDeleteBuffers(QOpenGLFunctions_3_1* self, int32_t n, const uint32_t* buffers);
void QOpenGLFunctions_3_1_GlBindBuffer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t buffer);
void QOpenGLFunctions_3_1_GlGetQueryObjectuiv(QOpenGLFunctions_3_1* self, uint32_t id, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_1_GlGetQueryObjectiv(QOpenGLFunctions_3_1* self, uint32_t id, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlGetQueryiv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlEndQuery(QOpenGLFunctions_3_1* self, uint32_t target);
void QOpenGLFunctions_3_1_GlBeginQuery(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t id);
unsigned char QOpenGLFunctions_3_1_GlIsQuery(QOpenGLFunctions_3_1* self, uint32_t id);
void QOpenGLFunctions_3_1_GlDeleteQueries(QOpenGLFunctions_3_1* self, int32_t n, const uint32_t* ids);
void QOpenGLFunctions_3_1_GlGenQueries(QOpenGLFunctions_3_1* self, int32_t n, uint32_t* ids);
void QOpenGLFunctions_3_1_GlVertexAttribPointer(QOpenGLFunctions_3_1* self, uint32_t index, int32_t size, uint32_t typeVal, unsigned char normalized, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_1_GlValidateProgram(QOpenGLFunctions_3_1* self, uint32_t program);
void QOpenGLFunctions_3_1_GlUniformMatrix4fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix3fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix2fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniform4iv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_1_GlUniform3iv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_1_GlUniform2iv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_1_GlUniform1iv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const int32_t* value);
void QOpenGLFunctions_3_1_GlUniform4fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_1_GlUniform3fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_1_GlUniform2fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_1_GlUniform1fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const float* value);
void QOpenGLFunctions_3_1_GlUniform4i(QOpenGLFunctions_3_1* self, int32_t location, int32_t v0, int32_t v1, int32_t v2, int32_t v3);
void QOpenGLFunctions_3_1_GlUniform3i(QOpenGLFunctions_3_1* self, int32_t location, int32_t v0, int32_t v1, int32_t v2);
void QOpenGLFunctions_3_1_GlUniform2i(QOpenGLFunctions_3_1* self, int32_t location, int32_t v0, int32_t v1);
void QOpenGLFunctions_3_1_GlUniform1i(QOpenGLFunctions_3_1* self, int32_t location, int32_t v0);
void QOpenGLFunctions_3_1_GlUniform4f(QOpenGLFunctions_3_1* self, int32_t location, float v0, float v1, float v2, float v3);
void QOpenGLFunctions_3_1_GlUniform3f(QOpenGLFunctions_3_1* self, int32_t location, float v0, float v1, float v2);
void QOpenGLFunctions_3_1_GlUniform2f(QOpenGLFunctions_3_1* self, int32_t location, float v0, float v1);
void QOpenGLFunctions_3_1_GlUniform1f(QOpenGLFunctions_3_1* self, int32_t location, float v0);
void QOpenGLFunctions_3_1_GlUseProgram(QOpenGLFunctions_3_1* self, uint32_t program);
void QOpenGLFunctions_3_1_GlLinkProgram(QOpenGLFunctions_3_1* self, uint32_t program);
unsigned char QOpenGLFunctions_3_1_GlIsShader(QOpenGLFunctions_3_1* self, uint32_t shader);
unsigned char QOpenGLFunctions_3_1_GlIsProgram(QOpenGLFunctions_3_1* self, uint32_t program);
void QOpenGLFunctions_3_1_GlGetVertexAttribiv(QOpenGLFunctions_3_1* self, uint32_t index, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlGetVertexAttribfv(QOpenGLFunctions_3_1* self, uint32_t index, uint32_t pname, float* params);
void QOpenGLFunctions_3_1_GlGetVertexAttribdv(QOpenGLFunctions_3_1* self, uint32_t index, uint32_t pname, double* params);
void QOpenGLFunctions_3_1_GlGetUniformiv(QOpenGLFunctions_3_1* self, uint32_t program, int32_t location, int32_t* params);
void QOpenGLFunctions_3_1_GlGetUniformfv(QOpenGLFunctions_3_1* self, uint32_t program, int32_t location, float* params);
int32_t QOpenGLFunctions_3_1_GlGetUniformLocation(QOpenGLFunctions_3_1* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_1_GlGetShaderSource(QOpenGLFunctions_3_1* self, uint32_t shader, int32_t bufSize, int32_t* length, GLchar* source);
void QOpenGLFunctions_3_1_GlGetShaderInfoLog(QOpenGLFunctions_3_1* self, uint32_t shader, int32_t bufSize, int32_t* length, GLchar* infoLog);
void QOpenGLFunctions_3_1_GlGetShaderiv(QOpenGLFunctions_3_1* self, uint32_t shader, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlGetProgramInfoLog(QOpenGLFunctions_3_1* self, uint32_t program, int32_t bufSize, int32_t* length, GLchar* infoLog);
void QOpenGLFunctions_3_1_GlGetProgramiv(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t pname, int32_t* params);
int32_t QOpenGLFunctions_3_1_GlGetAttribLocation(QOpenGLFunctions_3_1* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_1_GlGetAttachedShaders(QOpenGLFunctions_3_1* self, uint32_t program, int32_t maxCount, int32_t* count, uint32_t* obj);
void QOpenGLFunctions_3_1_GlEnableVertexAttribArray(QOpenGLFunctions_3_1* self, uint32_t index);
void QOpenGLFunctions_3_1_GlDisableVertexAttribArray(QOpenGLFunctions_3_1* self, uint32_t index);
void QOpenGLFunctions_3_1_GlDetachShader(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t shader);
void QOpenGLFunctions_3_1_GlDeleteShader(QOpenGLFunctions_3_1* self, uint32_t shader);
void QOpenGLFunctions_3_1_GlDeleteProgram(QOpenGLFunctions_3_1* self, uint32_t program);
uint32_t QOpenGLFunctions_3_1_GlCreateShader(QOpenGLFunctions_3_1* self, uint32_t typeVal);
uint32_t QOpenGLFunctions_3_1_GlCreateProgram(QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_GlCompileShader(QOpenGLFunctions_3_1* self, uint32_t shader);
void QOpenGLFunctions_3_1_GlBindAttribLocation(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t index, const GLchar* name);
void QOpenGLFunctions_3_1_GlAttachShader(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t shader);
void QOpenGLFunctions_3_1_GlStencilMaskSeparate(QOpenGLFunctions_3_1* self, uint32_t face, uint32_t mask);
void QOpenGLFunctions_3_1_GlStencilFuncSeparate(QOpenGLFunctions_3_1* self, uint32_t face, uint32_t func, int32_t ref, uint32_t mask);
void QOpenGLFunctions_3_1_GlStencilOpSeparate(QOpenGLFunctions_3_1* self, uint32_t face, uint32_t sfail, uint32_t dpfail, uint32_t dppass);
void QOpenGLFunctions_3_1_GlBlendEquationSeparate(QOpenGLFunctions_3_1* self, uint32_t modeRGB, uint32_t modeAlpha);
void QOpenGLFunctions_3_1_GlUniformMatrix4x3fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix3x4fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix4x2fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix2x4fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix3x2fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
void QOpenGLFunctions_3_1_GlUniformMatrix2x3fv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, unsigned char transpose, const float* value);
unsigned char QOpenGLFunctions_3_1_GlIsVertexArray(QOpenGLFunctions_3_1* self, uint32_t array);
void QOpenGLFunctions_3_1_GlGenVertexArrays(QOpenGLFunctions_3_1* self, int32_t n, uint32_t* arrays);
void QOpenGLFunctions_3_1_GlDeleteVertexArrays(QOpenGLFunctions_3_1* self, int32_t n, const uint32_t* arrays);
void QOpenGLFunctions_3_1_GlBindVertexArray(QOpenGLFunctions_3_1* self, uint32_t array);
void QOpenGLFunctions_3_1_GlFlushMappedBufferRange(QOpenGLFunctions_3_1* self, uint32_t target, int64_t offset, int64_t length);
void* QOpenGLFunctions_3_1_GlMapBufferRange(QOpenGLFunctions_3_1* self, uint32_t target, int64_t offset, int64_t length, uint32_t access);
void QOpenGLFunctions_3_1_GlFramebufferTextureLayer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t attachment, uint32_t texture, int32_t level, int32_t layer);
void QOpenGLFunctions_3_1_GlRenderbufferStorageMultisample(QOpenGLFunctions_3_1* self, uint32_t target, int32_t samples, uint32_t internalformat, int32_t width, int32_t height);
void QOpenGLFunctions_3_1_GlBlitFramebuffer(QOpenGLFunctions_3_1* self, int32_t srcX0, int32_t srcY0, int32_t srcX1, int32_t srcY1, int32_t dstX0, int32_t dstY0, int32_t dstX1, int32_t dstY1, uint32_t mask, uint32_t filter);
void QOpenGLFunctions_3_1_GlGenerateMipmap(QOpenGLFunctions_3_1* self, uint32_t target);
void QOpenGLFunctions_3_1_GlGetFramebufferAttachmentParameteriv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t attachment, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlFramebufferRenderbuffer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t attachment, uint32_t renderbuffertarget, uint32_t renderbuffer);
void QOpenGLFunctions_3_1_GlFramebufferTexture3D(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level, int32_t zoffset);
void QOpenGLFunctions_3_1_GlFramebufferTexture2D(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_1_GlFramebufferTexture1D(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t attachment, uint32_t textarget, uint32_t texture, int32_t level);
void QOpenGLFunctions_3_1_GlGenFramebuffers(QOpenGLFunctions_3_1* self, int32_t n, uint32_t* framebuffers);
void QOpenGLFunctions_3_1_GlDeleteFramebuffers(QOpenGLFunctions_3_1* self, int32_t n, const uint32_t* framebuffers);
void QOpenGLFunctions_3_1_GlBindFramebuffer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t framebuffer);
unsigned char QOpenGLFunctions_3_1_GlIsFramebuffer(QOpenGLFunctions_3_1* self, uint32_t framebuffer);
void QOpenGLFunctions_3_1_GlGetRenderbufferParameteriv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlRenderbufferStorage(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t internalformat, int32_t width, int32_t height);
void QOpenGLFunctions_3_1_GlGenRenderbuffers(QOpenGLFunctions_3_1* self, int32_t n, uint32_t* renderbuffers);
void QOpenGLFunctions_3_1_GlDeleteRenderbuffers(QOpenGLFunctions_3_1* self, int32_t n, const uint32_t* renderbuffers);
void QOpenGLFunctions_3_1_GlBindRenderbuffer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t renderbuffer);
unsigned char QOpenGLFunctions_3_1_GlIsRenderbuffer(QOpenGLFunctions_3_1* self, uint32_t renderbuffer);
const uint8_t* QOpenGLFunctions_3_1_GlGetStringi(QOpenGLFunctions_3_1* self, uint32_t name, uint32_t index);
void QOpenGLFunctions_3_1_GlClearBufferfi(QOpenGLFunctions_3_1* self, uint32_t buffer, int32_t drawbuffer, float depth, int32_t stencil);
void QOpenGLFunctions_3_1_GlClearBufferfv(QOpenGLFunctions_3_1* self, uint32_t buffer, int32_t drawbuffer, const float* value);
void QOpenGLFunctions_3_1_GlClearBufferuiv(QOpenGLFunctions_3_1* self, uint32_t buffer, int32_t drawbuffer, const uint32_t* value);
void QOpenGLFunctions_3_1_GlClearBufferiv(QOpenGLFunctions_3_1* self, uint32_t buffer, int32_t drawbuffer, const int32_t* value);
void QOpenGLFunctions_3_1_GlGetTexParameterIuiv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_1_GlGetTexParameterIiv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlTexParameterIuiv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, const uint32_t* params);
void QOpenGLFunctions_3_1_GlTexParameterIiv(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t pname, const int32_t* params);
void QOpenGLFunctions_3_1_GlUniform4uiv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_1_GlUniform3uiv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_1_GlUniform2uiv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_1_GlUniform1uiv(QOpenGLFunctions_3_1* self, int32_t location, int32_t count, const uint32_t* value);
void QOpenGLFunctions_3_1_GlUniform4ui(QOpenGLFunctions_3_1* self, int32_t location, uint32_t v0, uint32_t v1, uint32_t v2, uint32_t v3);
void QOpenGLFunctions_3_1_GlUniform3ui(QOpenGLFunctions_3_1* self, int32_t location, uint32_t v0, uint32_t v1, uint32_t v2);
void QOpenGLFunctions_3_1_GlUniform2ui(QOpenGLFunctions_3_1* self, int32_t location, uint32_t v0, uint32_t v1);
void QOpenGLFunctions_3_1_GlUniform1ui(QOpenGLFunctions_3_1* self, int32_t location, uint32_t v0);
int32_t QOpenGLFunctions_3_1_GlGetFragDataLocation(QOpenGLFunctions_3_1* self, uint32_t program, const GLchar* name);
void QOpenGLFunctions_3_1_GlBindFragDataLocation(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t color, const GLchar* name);
void QOpenGLFunctions_3_1_GlGetUniformuiv(QOpenGLFunctions_3_1* self, uint32_t program, int32_t location, uint32_t* params);
void QOpenGLFunctions_3_1_GlGetVertexAttribIuiv(QOpenGLFunctions_3_1* self, uint32_t index, uint32_t pname, uint32_t* params);
void QOpenGLFunctions_3_1_GlGetVertexAttribIiv(QOpenGLFunctions_3_1* self, uint32_t index, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlVertexAttribIPointer(QOpenGLFunctions_3_1* self, uint32_t index, int32_t size, uint32_t typeVal, int32_t stride, const void* pointer);
void QOpenGLFunctions_3_1_GlEndConditionalRender(QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_GlBeginConditionalRender(QOpenGLFunctions_3_1* self, uint32_t id, uint32_t mode);
void QOpenGLFunctions_3_1_GlClampColor(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t clamp);
void QOpenGLFunctions_3_1_GlBindBufferBase(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index, uint32_t buffer);
void QOpenGLFunctions_3_1_GlBindBufferRange(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index, uint32_t buffer, int64_t offset, int64_t size);
void QOpenGLFunctions_3_1_GlEndTransformFeedback(QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_GlBeginTransformFeedback(QOpenGLFunctions_3_1* self, uint32_t primitiveMode);
unsigned char QOpenGLFunctions_3_1_GlIsEnabledi(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_1_GlDisablei(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_1_GlEnablei(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index);
void QOpenGLFunctions_3_1_GlGetIntegeriV(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index, int32_t* data);
void QOpenGLFunctions_3_1_GlGetBooleaniV(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t index, unsigned char* data);
void QOpenGLFunctions_3_1_GlColorMaski(QOpenGLFunctions_3_1* self, uint32_t index, unsigned char r, unsigned char g, unsigned char b, unsigned char a);
void QOpenGLFunctions_3_1_GlCopyBufferSubData(QOpenGLFunctions_3_1* self, uint32_t readTarget, uint32_t writeTarget, int64_t readOffset, int64_t writeOffset, int64_t size);
void QOpenGLFunctions_3_1_GlUniformBlockBinding(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t uniformBlockIndex, uint32_t uniformBlockBinding);
void QOpenGLFunctions_3_1_GlGetActiveUniformBlockName(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t uniformBlockIndex, int32_t bufSize, int32_t* length, GLchar* uniformBlockName);
void QOpenGLFunctions_3_1_GlGetActiveUniformBlockiv(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t uniformBlockIndex, uint32_t pname, int32_t* params);
uint32_t QOpenGLFunctions_3_1_GlGetUniformBlockIndex(QOpenGLFunctions_3_1* self, uint32_t program, const GLchar* uniformBlockName);
void QOpenGLFunctions_3_1_GlGetActiveUniformName(QOpenGLFunctions_3_1* self, uint32_t program, uint32_t uniformIndex, int32_t bufSize, int32_t* length, GLchar* uniformName);
void QOpenGLFunctions_3_1_GlGetActiveUniformsiv(QOpenGLFunctions_3_1* self, uint32_t program, int32_t uniformCount, const uint32_t* uniformIndices, uint32_t pname, int32_t* params);
void QOpenGLFunctions_3_1_GlPrimitiveRestartIndex(QOpenGLFunctions_3_1* self, uint32_t index);
void QOpenGLFunctions_3_1_GlTexBuffer(QOpenGLFunctions_3_1* self, uint32_t target, uint32_t internalformat, uint32_t buffer);
void QOpenGLFunctions_3_1_GlDrawElementsInstanced(QOpenGLFunctions_3_1* self, uint32_t mode, int32_t count, uint32_t typeVal, const void* indices, int32_t instancecount);
void QOpenGLFunctions_3_1_GlDrawArraysInstanced(QOpenGLFunctions_3_1* self, uint32_t mode, int32_t first, int32_t count, int32_t instancecount);
void QOpenGLFunctions_3_1_OnInitializeOpenGLFunctions(QOpenGLFunctions_3_1* self, intptr_t slot);
bool QOpenGLFunctions_3_1_QBaseInitializeOpenGLFunctions(QOpenGLFunctions_3_1* self);
bool QOpenGLFunctions_3_1_IsInitialized(const QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_OnIsInitialized(const QOpenGLFunctions_3_1* self, intptr_t slot);
bool QOpenGLFunctions_3_1_QBaseIsInitialized(const QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_SetOwningContext(QOpenGLFunctions_3_1* self, const QOpenGLContext* context);
void QOpenGLFunctions_3_1_OnSetOwningContext(QOpenGLFunctions_3_1* self, intptr_t slot);
void QOpenGLFunctions_3_1_QBaseSetOwningContext(QOpenGLFunctions_3_1* self, const QOpenGLContext* context);
QOpenGLContext* QOpenGLFunctions_3_1_OwningContext(const QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_OnOwningContext(const QOpenGLFunctions_3_1* self, intptr_t slot);
QOpenGLContext* QOpenGLFunctions_3_1_QBaseOwningContext(const QOpenGLFunctions_3_1* self);
void QOpenGLFunctions_3_1_Delete(QOpenGLFunctions_3_1* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
