#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKDATECOMBOBOX_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKDATECOMBOBOX_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KDateComboBox KDateComboBox;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QComboBox QComboBox;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDate QDate;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionComboBox QStyleOptionComboBox;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KDateComboBox* KDateComboBox_new(QWidget* parent);
KDateComboBox* KDateComboBox_new2();
QMetaObject* KDateComboBox_MetaObject(const KDateComboBox* self);
void* KDateComboBox_Metacast(KDateComboBox* self, const char* param1);
int KDateComboBox_Metacall(KDateComboBox* self, int param1, int param2, void** param3);
libqt_string KDateComboBox_Tr(const char* s);
QDate* KDateComboBox_Date(const KDateComboBox* self);
bool KDateComboBox_IsValid(const KDateComboBox* self);
bool KDateComboBox_IsNull(const KDateComboBox* self);
int KDateComboBox_Options(const KDateComboBox* self);
int KDateComboBox_DisplayFormat(const KDateComboBox* self);
QDate* KDateComboBox_MinimumDate(const KDateComboBox* self);
QDate* KDateComboBox_MaximumDate(const KDateComboBox* self);
libqt_map /* of QDate* to libqt_string */ KDateComboBox_DateMap(const KDateComboBox* self);
void KDateComboBox_DateEntered(KDateComboBox* self, const QDate* date);
void KDateComboBox_Connect_DateEntered(KDateComboBox* self, intptr_t slot);
void KDateComboBox_DateChanged(KDateComboBox* self, const QDate* date);
void KDateComboBox_Connect_DateChanged(KDateComboBox* self, intptr_t slot);
void KDateComboBox_DateEdited(KDateComboBox* self, const QDate* date);
void KDateComboBox_Connect_DateEdited(KDateComboBox* self, intptr_t slot);
void KDateComboBox_SetDate(KDateComboBox* self, const QDate* date);
void KDateComboBox_SetOptions(KDateComboBox* self, int options);
void KDateComboBox_SetDisplayFormat(KDateComboBox* self, int format);
void KDateComboBox_SetDateRange(KDateComboBox* self, const QDate* minDate, const QDate* maxDate);
void KDateComboBox_ResetDateRange(KDateComboBox* self);
void KDateComboBox_SetMinimumDate(KDateComboBox* self, const QDate* minDate);
void KDateComboBox_ResetMinimumDate(KDateComboBox* self);
void KDateComboBox_SetMaximumDate(KDateComboBox* self, const QDate* maxDate);
void KDateComboBox_ResetMaximumDate(KDateComboBox* self);
void KDateComboBox_SetDateMap(KDateComboBox* self, libqt_map /* of QDate* to libqt_string */ dateMap);
bool KDateComboBox_EventFilter(KDateComboBox* self, QObject* object, QEvent* event);
void KDateComboBox_ShowPopup(KDateComboBox* self);
void KDateComboBox_HidePopup(KDateComboBox* self);
void KDateComboBox_MousePressEvent(KDateComboBox* self, QMouseEvent* event);
void KDateComboBox_WheelEvent(KDateComboBox* self, QWheelEvent* event);
void KDateComboBox_KeyPressEvent(KDateComboBox* self, QKeyEvent* event);
void KDateComboBox_FocusInEvent(KDateComboBox* self, QFocusEvent* event);
void KDateComboBox_FocusOutEvent(KDateComboBox* self, QFocusEvent* event);
void KDateComboBox_ResizeEvent(KDateComboBox* self, QResizeEvent* event);
void KDateComboBox_AssignDate(KDateComboBox* self, const QDate* date);
libqt_string KDateComboBox_Tr2(const char* s, const char* c);
libqt_string KDateComboBox_Tr3(const char* s, const char* c, int n);
void KDateComboBox_SetDateRange3(KDateComboBox* self, const QDate* minDate, const QDate* maxDate, const libqt_string minWarnMsg);
void KDateComboBox_SetDateRange4(KDateComboBox* self, const QDate* minDate, const QDate* maxDate, const libqt_string minWarnMsg, const libqt_string maxWarnMsg);
void KDateComboBox_SetMinimumDate2(KDateComboBox* self, const QDate* minDate, const libqt_string minWarnMsg);
void KDateComboBox_SetMaximumDate2(KDateComboBox* self, const QDate* maxDate, const libqt_string maxWarnMsg);
void KDateComboBox_OnMetacall(KDateComboBox* self, intptr_t slot);
int KDateComboBox_QBaseMetacall(KDateComboBox* self, int param1, int param2, void** param3);
void KDateComboBox_OnEventFilter(KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseEventFilter(KDateComboBox* self, QObject* object, QEvent* event);
void KDateComboBox_OnShowPopup(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseShowPopup(KDateComboBox* self);
void KDateComboBox_OnHidePopup(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseHidePopup(KDateComboBox* self);
void KDateComboBox_OnMousePressEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseMousePressEvent(KDateComboBox* self, QMouseEvent* event);
void KDateComboBox_OnWheelEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseWheelEvent(KDateComboBox* self, QWheelEvent* event);
void KDateComboBox_OnKeyPressEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseKeyPressEvent(KDateComboBox* self, QKeyEvent* event);
void KDateComboBox_OnFocusInEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseFocusInEvent(KDateComboBox* self, QFocusEvent* event);
void KDateComboBox_OnFocusOutEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseFocusOutEvent(KDateComboBox* self, QFocusEvent* event);
void KDateComboBox_OnResizeEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseResizeEvent(KDateComboBox* self, QResizeEvent* event);
void KDateComboBox_OnAssignDate(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseAssignDate(KDateComboBox* self, const QDate* date);
void KDateComboBox_SetModel(KDateComboBox* self, QAbstractItemModel* model);
void KDateComboBox_OnSetModel(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseSetModel(KDateComboBox* self, QAbstractItemModel* model);
QSize* KDateComboBox_SizeHint(const KDateComboBox* self);
void KDateComboBox_OnSizeHint(const KDateComboBox* self, intptr_t slot);
QSize* KDateComboBox_QBaseSizeHint(const KDateComboBox* self);
QSize* KDateComboBox_MinimumSizeHint(const KDateComboBox* self);
void KDateComboBox_OnMinimumSizeHint(const KDateComboBox* self, intptr_t slot);
QSize* KDateComboBox_QBaseMinimumSizeHint(const KDateComboBox* self);
bool KDateComboBox_Event(KDateComboBox* self, QEvent* event);
void KDateComboBox_OnEvent(KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseEvent(KDateComboBox* self, QEvent* event);
QVariant* KDateComboBox_InputMethodQuery(const KDateComboBox* self, int param1);
void KDateComboBox_OnInputMethodQuery(const KDateComboBox* self, intptr_t slot);
QVariant* KDateComboBox_QBaseInputMethodQuery(const KDateComboBox* self, int param1);
void KDateComboBox_ChangeEvent(KDateComboBox* self, QEvent* e);
void KDateComboBox_OnChangeEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseChangeEvent(KDateComboBox* self, QEvent* e);
void KDateComboBox_PaintEvent(KDateComboBox* self, QPaintEvent* e);
void KDateComboBox_OnPaintEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBasePaintEvent(KDateComboBox* self, QPaintEvent* e);
void KDateComboBox_ShowEvent(KDateComboBox* self, QShowEvent* e);
void KDateComboBox_OnShowEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseShowEvent(KDateComboBox* self, QShowEvent* e);
void KDateComboBox_HideEvent(KDateComboBox* self, QHideEvent* e);
void KDateComboBox_OnHideEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseHideEvent(KDateComboBox* self, QHideEvent* e);
void KDateComboBox_MouseReleaseEvent(KDateComboBox* self, QMouseEvent* e);
void KDateComboBox_OnMouseReleaseEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseMouseReleaseEvent(KDateComboBox* self, QMouseEvent* e);
void KDateComboBox_KeyReleaseEvent(KDateComboBox* self, QKeyEvent* e);
void KDateComboBox_OnKeyReleaseEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseKeyReleaseEvent(KDateComboBox* self, QKeyEvent* e);
void KDateComboBox_ContextMenuEvent(KDateComboBox* self, QContextMenuEvent* e);
void KDateComboBox_OnContextMenuEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseContextMenuEvent(KDateComboBox* self, QContextMenuEvent* e);
void KDateComboBox_InputMethodEvent(KDateComboBox* self, QInputMethodEvent* param1);
void KDateComboBox_OnInputMethodEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseInputMethodEvent(KDateComboBox* self, QInputMethodEvent* param1);
void KDateComboBox_InitStyleOption(const KDateComboBox* self, QStyleOptionComboBox* option);
void KDateComboBox_OnInitStyleOption(const KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseInitStyleOption(const KDateComboBox* self, QStyleOptionComboBox* option);
int KDateComboBox_DevType(const KDateComboBox* self);
void KDateComboBox_OnDevType(const KDateComboBox* self, intptr_t slot);
int KDateComboBox_QBaseDevType(const KDateComboBox* self);
void KDateComboBox_SetVisible(KDateComboBox* self, bool visible);
void KDateComboBox_OnSetVisible(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseSetVisible(KDateComboBox* self, bool visible);
int KDateComboBox_HeightForWidth(const KDateComboBox* self, int param1);
void KDateComboBox_OnHeightForWidth(const KDateComboBox* self, intptr_t slot);
int KDateComboBox_QBaseHeightForWidth(const KDateComboBox* self, int param1);
bool KDateComboBox_HasHeightForWidth(const KDateComboBox* self);
void KDateComboBox_OnHasHeightForWidth(const KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseHasHeightForWidth(const KDateComboBox* self);
QPaintEngine* KDateComboBox_PaintEngine(const KDateComboBox* self);
void KDateComboBox_OnPaintEngine(const KDateComboBox* self, intptr_t slot);
QPaintEngine* KDateComboBox_QBasePaintEngine(const KDateComboBox* self);
void KDateComboBox_MouseDoubleClickEvent(KDateComboBox* self, QMouseEvent* event);
void KDateComboBox_OnMouseDoubleClickEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseMouseDoubleClickEvent(KDateComboBox* self, QMouseEvent* event);
void KDateComboBox_MouseMoveEvent(KDateComboBox* self, QMouseEvent* event);
void KDateComboBox_OnMouseMoveEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseMouseMoveEvent(KDateComboBox* self, QMouseEvent* event);
void KDateComboBox_EnterEvent(KDateComboBox* self, QEnterEvent* event);
void KDateComboBox_OnEnterEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseEnterEvent(KDateComboBox* self, QEnterEvent* event);
void KDateComboBox_LeaveEvent(KDateComboBox* self, QEvent* event);
void KDateComboBox_OnLeaveEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseLeaveEvent(KDateComboBox* self, QEvent* event);
void KDateComboBox_MoveEvent(KDateComboBox* self, QMoveEvent* event);
void KDateComboBox_OnMoveEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseMoveEvent(KDateComboBox* self, QMoveEvent* event);
void KDateComboBox_CloseEvent(KDateComboBox* self, QCloseEvent* event);
void KDateComboBox_OnCloseEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseCloseEvent(KDateComboBox* self, QCloseEvent* event);
void KDateComboBox_TabletEvent(KDateComboBox* self, QTabletEvent* event);
void KDateComboBox_OnTabletEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseTabletEvent(KDateComboBox* self, QTabletEvent* event);
void KDateComboBox_ActionEvent(KDateComboBox* self, QActionEvent* event);
void KDateComboBox_OnActionEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseActionEvent(KDateComboBox* self, QActionEvent* event);
void KDateComboBox_DragEnterEvent(KDateComboBox* self, QDragEnterEvent* event);
void KDateComboBox_OnDragEnterEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseDragEnterEvent(KDateComboBox* self, QDragEnterEvent* event);
void KDateComboBox_DragMoveEvent(KDateComboBox* self, QDragMoveEvent* event);
void KDateComboBox_OnDragMoveEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseDragMoveEvent(KDateComboBox* self, QDragMoveEvent* event);
void KDateComboBox_DragLeaveEvent(KDateComboBox* self, QDragLeaveEvent* event);
void KDateComboBox_OnDragLeaveEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseDragLeaveEvent(KDateComboBox* self, QDragLeaveEvent* event);
void KDateComboBox_DropEvent(KDateComboBox* self, QDropEvent* event);
void KDateComboBox_OnDropEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseDropEvent(KDateComboBox* self, QDropEvent* event);
bool KDateComboBox_NativeEvent(KDateComboBox* self, const libqt_string eventType, void* message, intptr_t* result);
void KDateComboBox_OnNativeEvent(KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseNativeEvent(KDateComboBox* self, const libqt_string eventType, void* message, intptr_t* result);
int KDateComboBox_Metric(const KDateComboBox* self, int param1);
void KDateComboBox_OnMetric(const KDateComboBox* self, intptr_t slot);
int KDateComboBox_QBaseMetric(const KDateComboBox* self, int param1);
void KDateComboBox_InitPainter(const KDateComboBox* self, QPainter* painter);
void KDateComboBox_OnInitPainter(const KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseInitPainter(const KDateComboBox* self, QPainter* painter);
QPaintDevice* KDateComboBox_Redirected(const KDateComboBox* self, QPoint* offset);
void KDateComboBox_OnRedirected(const KDateComboBox* self, intptr_t slot);
QPaintDevice* KDateComboBox_QBaseRedirected(const KDateComboBox* self, QPoint* offset);
QPainter* KDateComboBox_SharedPainter(const KDateComboBox* self);
void KDateComboBox_OnSharedPainter(const KDateComboBox* self, intptr_t slot);
QPainter* KDateComboBox_QBaseSharedPainter(const KDateComboBox* self);
bool KDateComboBox_FocusNextPrevChild(KDateComboBox* self, bool next);
void KDateComboBox_OnFocusNextPrevChild(KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseFocusNextPrevChild(KDateComboBox* self, bool next);
void KDateComboBox_TimerEvent(KDateComboBox* self, QTimerEvent* event);
void KDateComboBox_OnTimerEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseTimerEvent(KDateComboBox* self, QTimerEvent* event);
void KDateComboBox_ChildEvent(KDateComboBox* self, QChildEvent* event);
void KDateComboBox_OnChildEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseChildEvent(KDateComboBox* self, QChildEvent* event);
void KDateComboBox_CustomEvent(KDateComboBox* self, QEvent* event);
void KDateComboBox_OnCustomEvent(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseCustomEvent(KDateComboBox* self, QEvent* event);
void KDateComboBox_ConnectNotify(KDateComboBox* self, const QMetaMethod* signal);
void KDateComboBox_OnConnectNotify(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseConnectNotify(KDateComboBox* self, const QMetaMethod* signal);
void KDateComboBox_DisconnectNotify(KDateComboBox* self, const QMetaMethod* signal);
void KDateComboBox_OnDisconnectNotify(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseDisconnectNotify(KDateComboBox* self, const QMetaMethod* signal);
void KDateComboBox_UpdateMicroFocus(KDateComboBox* self);
void KDateComboBox_OnUpdateMicroFocus(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseUpdateMicroFocus(KDateComboBox* self);
void KDateComboBox_Create(KDateComboBox* self);
void KDateComboBox_OnCreate(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseCreate(KDateComboBox* self);
void KDateComboBox_Destroy(KDateComboBox* self);
void KDateComboBox_OnDestroy(KDateComboBox* self, intptr_t slot);
void KDateComboBox_QBaseDestroy(KDateComboBox* self);
bool KDateComboBox_FocusNextChild(KDateComboBox* self);
void KDateComboBox_OnFocusNextChild(KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseFocusNextChild(KDateComboBox* self);
bool KDateComboBox_FocusPreviousChild(KDateComboBox* self);
void KDateComboBox_OnFocusPreviousChild(KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseFocusPreviousChild(KDateComboBox* self);
QObject* KDateComboBox_Sender(const KDateComboBox* self);
void KDateComboBox_OnSender(const KDateComboBox* self, intptr_t slot);
QObject* KDateComboBox_QBaseSender(const KDateComboBox* self);
int KDateComboBox_SenderSignalIndex(const KDateComboBox* self);
void KDateComboBox_OnSenderSignalIndex(const KDateComboBox* self, intptr_t slot);
int KDateComboBox_QBaseSenderSignalIndex(const KDateComboBox* self);
int KDateComboBox_Receivers(const KDateComboBox* self, const char* signal);
void KDateComboBox_OnReceivers(const KDateComboBox* self, intptr_t slot);
int KDateComboBox_QBaseReceivers(const KDateComboBox* self, const char* signal);
bool KDateComboBox_IsSignalConnected(const KDateComboBox* self, const QMetaMethod* signal);
void KDateComboBox_OnIsSignalConnected(const KDateComboBox* self, intptr_t slot);
bool KDateComboBox_QBaseIsSignalConnected(const KDateComboBox* self, const QMetaMethod* signal);
double KDateComboBox_GetDecodedMetricF(const KDateComboBox* self, int metricA, int metricB);
void KDateComboBox_OnGetDecodedMetricF(const KDateComboBox* self, intptr_t slot);
double KDateComboBox_QBaseGetDecodedMetricF(const KDateComboBox* self, int metricA, int metricB);
void KDateComboBox_Delete(KDateComboBox* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
