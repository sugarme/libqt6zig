#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKDATEPICKER_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKDATEPICKER_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KDatePicker KDatePicker;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDate QDate;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KDatePicker* KDatePicker_new(QWidget* parent);
KDatePicker* KDatePicker_new2();
KDatePicker* KDatePicker_new3(const QDate* dt);
KDatePicker* KDatePicker_new4(const QDate* dt, QWidget* parent);
QMetaObject* KDatePicker_MetaObject(const KDatePicker* self);
void* KDatePicker_Metacast(KDatePicker* self, const char* param1);
int KDatePicker_Metacall(KDatePicker* self, int param1, int param2, void** param3);
libqt_string KDatePicker_Tr(const char* s);
QSize* KDatePicker_SizeHint(const KDatePicker* self);
bool KDatePicker_SetDate(KDatePicker* self, const QDate* date);
QDate* KDatePicker_Date(const KDatePicker* self);
void KDatePicker_SetFontSize(KDatePicker* self, int fontSize);
int KDatePicker_FontSize(const KDatePicker* self);
void KDatePicker_SetCloseButton(KDatePicker* self, bool enable);
bool KDatePicker_HasCloseButton(const KDatePicker* self);
void KDatePicker_SetDateRange(KDatePicker* self, const QDate* minDate);
bool KDatePicker_EventFilter(KDatePicker* self, QObject* o, QEvent* e);
void KDatePicker_ResizeEvent(KDatePicker* self, QResizeEvent* param1);
void KDatePicker_ChangeEvent(KDatePicker* self, QEvent* event);
void KDatePicker_DateChanged(KDatePicker* self, const QDate* date);
void KDatePicker_Connect_DateChanged(KDatePicker* self, intptr_t slot);
void KDatePicker_DateSelected(KDatePicker* self, const QDate* date);
void KDatePicker_Connect_DateSelected(KDatePicker* self, intptr_t slot);
void KDatePicker_DateEntered(KDatePicker* self, const QDate* date);
void KDatePicker_Connect_DateEntered(KDatePicker* self, intptr_t slot);
void KDatePicker_TableClicked(KDatePicker* self);
void KDatePicker_Connect_TableClicked(KDatePicker* self, intptr_t slot);
libqt_string KDatePicker_Tr2(const char* s, const char* c);
libqt_string KDatePicker_Tr3(const char* s, const char* c, int n);
void KDatePicker_SetDateRange2(KDatePicker* self, const QDate* minDate, const QDate* maxDate);
void KDatePicker_OnMetacall(KDatePicker* self, intptr_t slot);
int KDatePicker_QBaseMetacall(KDatePicker* self, int param1, int param2, void** param3);
void KDatePicker_OnSizeHint(const KDatePicker* self, intptr_t slot);
QSize* KDatePicker_QBaseSizeHint(const KDatePicker* self);
void KDatePicker_OnEventFilter(KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseEventFilter(KDatePicker* self, QObject* o, QEvent* e);
void KDatePicker_OnResizeEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseResizeEvent(KDatePicker* self, QResizeEvent* param1);
void KDatePicker_OnChangeEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseChangeEvent(KDatePicker* self, QEvent* event);
bool KDatePicker_Event(KDatePicker* self, QEvent* e);
void KDatePicker_OnEvent(KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseEvent(KDatePicker* self, QEvent* e);
void KDatePicker_PaintEvent(KDatePicker* self, QPaintEvent* param1);
void KDatePicker_OnPaintEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBasePaintEvent(KDatePicker* self, QPaintEvent* param1);
void KDatePicker_InitStyleOption(const KDatePicker* self, QStyleOptionFrame* option);
void KDatePicker_OnInitStyleOption(const KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseInitStyleOption(const KDatePicker* self, QStyleOptionFrame* option);
int KDatePicker_DevType(const KDatePicker* self);
void KDatePicker_OnDevType(const KDatePicker* self, intptr_t slot);
int KDatePicker_QBaseDevType(const KDatePicker* self);
void KDatePicker_SetVisible(KDatePicker* self, bool visible);
void KDatePicker_OnSetVisible(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseSetVisible(KDatePicker* self, bool visible);
QSize* KDatePicker_MinimumSizeHint(const KDatePicker* self);
void KDatePicker_OnMinimumSizeHint(const KDatePicker* self, intptr_t slot);
QSize* KDatePicker_QBaseMinimumSizeHint(const KDatePicker* self);
int KDatePicker_HeightForWidth(const KDatePicker* self, int param1);
void KDatePicker_OnHeightForWidth(const KDatePicker* self, intptr_t slot);
int KDatePicker_QBaseHeightForWidth(const KDatePicker* self, int param1);
bool KDatePicker_HasHeightForWidth(const KDatePicker* self);
void KDatePicker_OnHasHeightForWidth(const KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseHasHeightForWidth(const KDatePicker* self);
QPaintEngine* KDatePicker_PaintEngine(const KDatePicker* self);
void KDatePicker_OnPaintEngine(const KDatePicker* self, intptr_t slot);
QPaintEngine* KDatePicker_QBasePaintEngine(const KDatePicker* self);
void KDatePicker_MousePressEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_OnMousePressEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMousePressEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_MouseReleaseEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_OnMouseReleaseEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMouseReleaseEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_MouseDoubleClickEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_OnMouseDoubleClickEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMouseDoubleClickEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_MouseMoveEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_OnMouseMoveEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMouseMoveEvent(KDatePicker* self, QMouseEvent* event);
void KDatePicker_WheelEvent(KDatePicker* self, QWheelEvent* event);
void KDatePicker_OnWheelEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseWheelEvent(KDatePicker* self, QWheelEvent* event);
void KDatePicker_KeyPressEvent(KDatePicker* self, QKeyEvent* event);
void KDatePicker_OnKeyPressEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseKeyPressEvent(KDatePicker* self, QKeyEvent* event);
void KDatePicker_KeyReleaseEvent(KDatePicker* self, QKeyEvent* event);
void KDatePicker_OnKeyReleaseEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseKeyReleaseEvent(KDatePicker* self, QKeyEvent* event);
void KDatePicker_FocusInEvent(KDatePicker* self, QFocusEvent* event);
void KDatePicker_OnFocusInEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseFocusInEvent(KDatePicker* self, QFocusEvent* event);
void KDatePicker_FocusOutEvent(KDatePicker* self, QFocusEvent* event);
void KDatePicker_OnFocusOutEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseFocusOutEvent(KDatePicker* self, QFocusEvent* event);
void KDatePicker_EnterEvent(KDatePicker* self, QEnterEvent* event);
void KDatePicker_OnEnterEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseEnterEvent(KDatePicker* self, QEnterEvent* event);
void KDatePicker_LeaveEvent(KDatePicker* self, QEvent* event);
void KDatePicker_OnLeaveEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseLeaveEvent(KDatePicker* self, QEvent* event);
void KDatePicker_MoveEvent(KDatePicker* self, QMoveEvent* event);
void KDatePicker_OnMoveEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMoveEvent(KDatePicker* self, QMoveEvent* event);
void KDatePicker_CloseEvent(KDatePicker* self, QCloseEvent* event);
void KDatePicker_OnCloseEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseCloseEvent(KDatePicker* self, QCloseEvent* event);
void KDatePicker_ContextMenuEvent(KDatePicker* self, QContextMenuEvent* event);
void KDatePicker_OnContextMenuEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseContextMenuEvent(KDatePicker* self, QContextMenuEvent* event);
void KDatePicker_TabletEvent(KDatePicker* self, QTabletEvent* event);
void KDatePicker_OnTabletEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseTabletEvent(KDatePicker* self, QTabletEvent* event);
void KDatePicker_ActionEvent(KDatePicker* self, QActionEvent* event);
void KDatePicker_OnActionEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseActionEvent(KDatePicker* self, QActionEvent* event);
void KDatePicker_DragEnterEvent(KDatePicker* self, QDragEnterEvent* event);
void KDatePicker_OnDragEnterEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDragEnterEvent(KDatePicker* self, QDragEnterEvent* event);
void KDatePicker_DragMoveEvent(KDatePicker* self, QDragMoveEvent* event);
void KDatePicker_OnDragMoveEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDragMoveEvent(KDatePicker* self, QDragMoveEvent* event);
void KDatePicker_DragLeaveEvent(KDatePicker* self, QDragLeaveEvent* event);
void KDatePicker_OnDragLeaveEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDragLeaveEvent(KDatePicker* self, QDragLeaveEvent* event);
void KDatePicker_DropEvent(KDatePicker* self, QDropEvent* event);
void KDatePicker_OnDropEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDropEvent(KDatePicker* self, QDropEvent* event);
void KDatePicker_ShowEvent(KDatePicker* self, QShowEvent* event);
void KDatePicker_OnShowEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseShowEvent(KDatePicker* self, QShowEvent* event);
void KDatePicker_HideEvent(KDatePicker* self, QHideEvent* event);
void KDatePicker_OnHideEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseHideEvent(KDatePicker* self, QHideEvent* event);
bool KDatePicker_NativeEvent(KDatePicker* self, const libqt_string eventType, void* message, intptr_t* result);
void KDatePicker_OnNativeEvent(KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseNativeEvent(KDatePicker* self, const libqt_string eventType, void* message, intptr_t* result);
int KDatePicker_Metric(const KDatePicker* self, int param1);
void KDatePicker_OnMetric(const KDatePicker* self, intptr_t slot);
int KDatePicker_QBaseMetric(const KDatePicker* self, int param1);
void KDatePicker_InitPainter(const KDatePicker* self, QPainter* painter);
void KDatePicker_OnInitPainter(const KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseInitPainter(const KDatePicker* self, QPainter* painter);
QPaintDevice* KDatePicker_Redirected(const KDatePicker* self, QPoint* offset);
void KDatePicker_OnRedirected(const KDatePicker* self, intptr_t slot);
QPaintDevice* KDatePicker_QBaseRedirected(const KDatePicker* self, QPoint* offset);
QPainter* KDatePicker_SharedPainter(const KDatePicker* self);
void KDatePicker_OnSharedPainter(const KDatePicker* self, intptr_t slot);
QPainter* KDatePicker_QBaseSharedPainter(const KDatePicker* self);
void KDatePicker_InputMethodEvent(KDatePicker* self, QInputMethodEvent* param1);
void KDatePicker_OnInputMethodEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseInputMethodEvent(KDatePicker* self, QInputMethodEvent* param1);
QVariant* KDatePicker_InputMethodQuery(const KDatePicker* self, int param1);
void KDatePicker_OnInputMethodQuery(const KDatePicker* self, intptr_t slot);
QVariant* KDatePicker_QBaseInputMethodQuery(const KDatePicker* self, int param1);
bool KDatePicker_FocusNextPrevChild(KDatePicker* self, bool next);
void KDatePicker_OnFocusNextPrevChild(KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseFocusNextPrevChild(KDatePicker* self, bool next);
void KDatePicker_TimerEvent(KDatePicker* self, QTimerEvent* event);
void KDatePicker_OnTimerEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseTimerEvent(KDatePicker* self, QTimerEvent* event);
void KDatePicker_ChildEvent(KDatePicker* self, QChildEvent* event);
void KDatePicker_OnChildEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseChildEvent(KDatePicker* self, QChildEvent* event);
void KDatePicker_CustomEvent(KDatePicker* self, QEvent* event);
void KDatePicker_OnCustomEvent(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseCustomEvent(KDatePicker* self, QEvent* event);
void KDatePicker_ConnectNotify(KDatePicker* self, const QMetaMethod* signal);
void KDatePicker_OnConnectNotify(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseConnectNotify(KDatePicker* self, const QMetaMethod* signal);
void KDatePicker_DisconnectNotify(KDatePicker* self, const QMetaMethod* signal);
void KDatePicker_OnDisconnectNotify(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDisconnectNotify(KDatePicker* self, const QMetaMethod* signal);
void KDatePicker_DateChangedSlot(KDatePicker* self, const QDate* date);
void KDatePicker_OnDateChangedSlot(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDateChangedSlot(KDatePicker* self, const QDate* date);
void KDatePicker_TableClickedSlot(KDatePicker* self);
void KDatePicker_OnTableClickedSlot(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseTableClickedSlot(KDatePicker* self);
void KDatePicker_MonthForwardClicked(KDatePicker* self);
void KDatePicker_OnMonthForwardClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMonthForwardClicked(KDatePicker* self);
void KDatePicker_MonthBackwardClicked(KDatePicker* self);
void KDatePicker_OnMonthBackwardClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseMonthBackwardClicked(KDatePicker* self);
void KDatePicker_YearForwardClicked(KDatePicker* self);
void KDatePicker_OnYearForwardClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseYearForwardClicked(KDatePicker* self);
void KDatePicker_YearBackwardClicked(KDatePicker* self);
void KDatePicker_OnYearBackwardClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseYearBackwardClicked(KDatePicker* self);
void KDatePicker_SelectMonthClicked(KDatePicker* self);
void KDatePicker_OnSelectMonthClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseSelectMonthClicked(KDatePicker* self);
void KDatePicker_SelectYearClicked(KDatePicker* self);
void KDatePicker_OnSelectYearClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseSelectYearClicked(KDatePicker* self);
void KDatePicker_UncheckYearSelector(KDatePicker* self);
void KDatePicker_OnUncheckYearSelector(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseUncheckYearSelector(KDatePicker* self);
void KDatePicker_LineEnterPressed(KDatePicker* self);
void KDatePicker_OnLineEnterPressed(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseLineEnterPressed(KDatePicker* self);
void KDatePicker_TodayButtonClicked(KDatePicker* self);
void KDatePicker_OnTodayButtonClicked(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseTodayButtonClicked(KDatePicker* self);
void KDatePicker_WeekSelected(KDatePicker* self, int param1);
void KDatePicker_OnWeekSelected(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseWeekSelected(KDatePicker* self, int param1);
void KDatePicker_DrawFrame(KDatePicker* self, QPainter* param1);
void KDatePicker_OnDrawFrame(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDrawFrame(KDatePicker* self, QPainter* param1);
void KDatePicker_UpdateMicroFocus(KDatePicker* self);
void KDatePicker_OnUpdateMicroFocus(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseUpdateMicroFocus(KDatePicker* self);
void KDatePicker_Create(KDatePicker* self);
void KDatePicker_OnCreate(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseCreate(KDatePicker* self);
void KDatePicker_Destroy(KDatePicker* self);
void KDatePicker_OnDestroy(KDatePicker* self, intptr_t slot);
void KDatePicker_QBaseDestroy(KDatePicker* self);
bool KDatePicker_FocusNextChild(KDatePicker* self);
void KDatePicker_OnFocusNextChild(KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseFocusNextChild(KDatePicker* self);
bool KDatePicker_FocusPreviousChild(KDatePicker* self);
void KDatePicker_OnFocusPreviousChild(KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseFocusPreviousChild(KDatePicker* self);
QObject* KDatePicker_Sender(const KDatePicker* self);
void KDatePicker_OnSender(const KDatePicker* self, intptr_t slot);
QObject* KDatePicker_QBaseSender(const KDatePicker* self);
int KDatePicker_SenderSignalIndex(const KDatePicker* self);
void KDatePicker_OnSenderSignalIndex(const KDatePicker* self, intptr_t slot);
int KDatePicker_QBaseSenderSignalIndex(const KDatePicker* self);
int KDatePicker_Receivers(const KDatePicker* self, const char* signal);
void KDatePicker_OnReceivers(const KDatePicker* self, intptr_t slot);
int KDatePicker_QBaseReceivers(const KDatePicker* self, const char* signal);
bool KDatePicker_IsSignalConnected(const KDatePicker* self, const QMetaMethod* signal);
void KDatePicker_OnIsSignalConnected(const KDatePicker* self, intptr_t slot);
bool KDatePicker_QBaseIsSignalConnected(const KDatePicker* self, const QMetaMethod* signal);
double KDatePicker_GetDecodedMetricF(const KDatePicker* self, int metricA, int metricB);
void KDatePicker_OnGetDecodedMetricF(const KDatePicker* self, intptr_t slot);
double KDatePicker_QBaseGetDecodedMetricF(const KDatePicker* self, int metricA, int metricB);
void KDatePicker_Delete(KDatePicker* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
