#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKACTIONSELECTOR_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKACTIONSELECTOR_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KActionSelector KActionSelector;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QListWidget QListWidget;
typedef struct QListWidgetItem QListWidgetItem;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KActionSelector* KActionSelector_new(QWidget* parent);
KActionSelector* KActionSelector_new2();
QMetaObject* KActionSelector_MetaObject(const KActionSelector* self);
void* KActionSelector_Metacast(KActionSelector* self, const char* param1);
int KActionSelector_Metacall(KActionSelector* self, int param1, int param2, void** param3);
libqt_string KActionSelector_Tr(const char* s);
QListWidget* KActionSelector_AvailableListWidget(const KActionSelector* self);
QListWidget* KActionSelector_SelectedListWidget(const KActionSelector* self);
bool KActionSelector_MoveOnDoubleClick(const KActionSelector* self);
void KActionSelector_SetMoveOnDoubleClick(KActionSelector* self, bool enable);
bool KActionSelector_KeyboardEnabled(const KActionSelector* self);
void KActionSelector_SetKeyboardEnabled(KActionSelector* self, bool enable);
libqt_string KActionSelector_AvailableLabel(const KActionSelector* self);
void KActionSelector_SetAvailableLabel(KActionSelector* self, const libqt_string text);
libqt_string KActionSelector_SelectedLabel(const KActionSelector* self);
void KActionSelector_SetSelectedLabel(KActionSelector* self, const libqt_string text);
int KActionSelector_AvailableInsertionPolicy(const KActionSelector* self);
void KActionSelector_SetAvailableInsertionPolicy(KActionSelector* self, int policy);
int KActionSelector_SelectedInsertionPolicy(const KActionSelector* self);
void KActionSelector_SetSelectedInsertionPolicy(KActionSelector* self, int policy);
bool KActionSelector_ShowUpDownButtons(const KActionSelector* self);
void KActionSelector_SetShowUpDownButtons(KActionSelector* self, bool show);
void KActionSelector_SetButtonIcon(KActionSelector* self, const libqt_string icon, int button);
void KActionSelector_SetButtonIconSet(KActionSelector* self, const QIcon* iconset, int button);
void KActionSelector_SetButtonTooltip(KActionSelector* self, const libqt_string tip, int button);
void KActionSelector_SetButtonWhatsThis(KActionSelector* self, const libqt_string text, int button);
void KActionSelector_Added(KActionSelector* self, QListWidgetItem* item);
void KActionSelector_Connect_Added(KActionSelector* self, intptr_t slot);
void KActionSelector_Removed(KActionSelector* self, QListWidgetItem* item);
void KActionSelector_Connect_Removed(KActionSelector* self, intptr_t slot);
void KActionSelector_MovedUp(KActionSelector* self, QListWidgetItem* item);
void KActionSelector_Connect_MovedUp(KActionSelector* self, intptr_t slot);
void KActionSelector_MovedDown(KActionSelector* self, QListWidgetItem* item);
void KActionSelector_Connect_MovedDown(KActionSelector* self, intptr_t slot);
void KActionSelector_SetButtonsEnabled(KActionSelector* self);
void KActionSelector_KeyPressEvent(KActionSelector* self, QKeyEvent* param1);
bool KActionSelector_EventFilter(KActionSelector* self, QObject* param1, QEvent* param2);
libqt_string KActionSelector_Tr2(const char* s, const char* c);
libqt_string KActionSelector_Tr3(const char* s, const char* c, int n);
void KActionSelector_OnMetacall(KActionSelector* self, intptr_t slot);
int KActionSelector_QBaseMetacall(KActionSelector* self, int param1, int param2, void** param3);
void KActionSelector_OnKeyPressEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseKeyPressEvent(KActionSelector* self, QKeyEvent* param1);
void KActionSelector_OnEventFilter(KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseEventFilter(KActionSelector* self, QObject* param1, QEvent* param2);
int KActionSelector_DevType(const KActionSelector* self);
void KActionSelector_OnDevType(const KActionSelector* self, intptr_t slot);
int KActionSelector_QBaseDevType(const KActionSelector* self);
void KActionSelector_SetVisible(KActionSelector* self, bool visible);
void KActionSelector_OnSetVisible(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseSetVisible(KActionSelector* self, bool visible);
QSize* KActionSelector_SizeHint(const KActionSelector* self);
void KActionSelector_OnSizeHint(const KActionSelector* self, intptr_t slot);
QSize* KActionSelector_QBaseSizeHint(const KActionSelector* self);
QSize* KActionSelector_MinimumSizeHint(const KActionSelector* self);
void KActionSelector_OnMinimumSizeHint(const KActionSelector* self, intptr_t slot);
QSize* KActionSelector_QBaseMinimumSizeHint(const KActionSelector* self);
int KActionSelector_HeightForWidth(const KActionSelector* self, int param1);
void KActionSelector_OnHeightForWidth(const KActionSelector* self, intptr_t slot);
int KActionSelector_QBaseHeightForWidth(const KActionSelector* self, int param1);
bool KActionSelector_HasHeightForWidth(const KActionSelector* self);
void KActionSelector_OnHasHeightForWidth(const KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseHasHeightForWidth(const KActionSelector* self);
QPaintEngine* KActionSelector_PaintEngine(const KActionSelector* self);
void KActionSelector_OnPaintEngine(const KActionSelector* self, intptr_t slot);
QPaintEngine* KActionSelector_QBasePaintEngine(const KActionSelector* self);
bool KActionSelector_Event(KActionSelector* self, QEvent* event);
void KActionSelector_OnEvent(KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseEvent(KActionSelector* self, QEvent* event);
void KActionSelector_MousePressEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_OnMousePressEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseMousePressEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_MouseReleaseEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_OnMouseReleaseEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseMouseReleaseEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_MouseDoubleClickEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_OnMouseDoubleClickEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseMouseDoubleClickEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_MouseMoveEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_OnMouseMoveEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseMouseMoveEvent(KActionSelector* self, QMouseEvent* event);
void KActionSelector_WheelEvent(KActionSelector* self, QWheelEvent* event);
void KActionSelector_OnWheelEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseWheelEvent(KActionSelector* self, QWheelEvent* event);
void KActionSelector_KeyReleaseEvent(KActionSelector* self, QKeyEvent* event);
void KActionSelector_OnKeyReleaseEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseKeyReleaseEvent(KActionSelector* self, QKeyEvent* event);
void KActionSelector_FocusInEvent(KActionSelector* self, QFocusEvent* event);
void KActionSelector_OnFocusInEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseFocusInEvent(KActionSelector* self, QFocusEvent* event);
void KActionSelector_FocusOutEvent(KActionSelector* self, QFocusEvent* event);
void KActionSelector_OnFocusOutEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseFocusOutEvent(KActionSelector* self, QFocusEvent* event);
void KActionSelector_EnterEvent(KActionSelector* self, QEnterEvent* event);
void KActionSelector_OnEnterEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseEnterEvent(KActionSelector* self, QEnterEvent* event);
void KActionSelector_LeaveEvent(KActionSelector* self, QEvent* event);
void KActionSelector_OnLeaveEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseLeaveEvent(KActionSelector* self, QEvent* event);
void KActionSelector_PaintEvent(KActionSelector* self, QPaintEvent* event);
void KActionSelector_OnPaintEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBasePaintEvent(KActionSelector* self, QPaintEvent* event);
void KActionSelector_MoveEvent(KActionSelector* self, QMoveEvent* event);
void KActionSelector_OnMoveEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseMoveEvent(KActionSelector* self, QMoveEvent* event);
void KActionSelector_ResizeEvent(KActionSelector* self, QResizeEvent* event);
void KActionSelector_OnResizeEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseResizeEvent(KActionSelector* self, QResizeEvent* event);
void KActionSelector_CloseEvent(KActionSelector* self, QCloseEvent* event);
void KActionSelector_OnCloseEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseCloseEvent(KActionSelector* self, QCloseEvent* event);
void KActionSelector_ContextMenuEvent(KActionSelector* self, QContextMenuEvent* event);
void KActionSelector_OnContextMenuEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseContextMenuEvent(KActionSelector* self, QContextMenuEvent* event);
void KActionSelector_TabletEvent(KActionSelector* self, QTabletEvent* event);
void KActionSelector_OnTabletEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseTabletEvent(KActionSelector* self, QTabletEvent* event);
void KActionSelector_ActionEvent(KActionSelector* self, QActionEvent* event);
void KActionSelector_OnActionEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseActionEvent(KActionSelector* self, QActionEvent* event);
void KActionSelector_DragEnterEvent(KActionSelector* self, QDragEnterEvent* event);
void KActionSelector_OnDragEnterEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseDragEnterEvent(KActionSelector* self, QDragEnterEvent* event);
void KActionSelector_DragMoveEvent(KActionSelector* self, QDragMoveEvent* event);
void KActionSelector_OnDragMoveEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseDragMoveEvent(KActionSelector* self, QDragMoveEvent* event);
void KActionSelector_DragLeaveEvent(KActionSelector* self, QDragLeaveEvent* event);
void KActionSelector_OnDragLeaveEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseDragLeaveEvent(KActionSelector* self, QDragLeaveEvent* event);
void KActionSelector_DropEvent(KActionSelector* self, QDropEvent* event);
void KActionSelector_OnDropEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseDropEvent(KActionSelector* self, QDropEvent* event);
void KActionSelector_ShowEvent(KActionSelector* self, QShowEvent* event);
void KActionSelector_OnShowEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseShowEvent(KActionSelector* self, QShowEvent* event);
void KActionSelector_HideEvent(KActionSelector* self, QHideEvent* event);
void KActionSelector_OnHideEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseHideEvent(KActionSelector* self, QHideEvent* event);
bool KActionSelector_NativeEvent(KActionSelector* self, const libqt_string eventType, void* message, intptr_t* result);
void KActionSelector_OnNativeEvent(KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseNativeEvent(KActionSelector* self, const libqt_string eventType, void* message, intptr_t* result);
void KActionSelector_ChangeEvent(KActionSelector* self, QEvent* param1);
void KActionSelector_OnChangeEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseChangeEvent(KActionSelector* self, QEvent* param1);
int KActionSelector_Metric(const KActionSelector* self, int param1);
void KActionSelector_OnMetric(const KActionSelector* self, intptr_t slot);
int KActionSelector_QBaseMetric(const KActionSelector* self, int param1);
void KActionSelector_InitPainter(const KActionSelector* self, QPainter* painter);
void KActionSelector_OnInitPainter(const KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseInitPainter(const KActionSelector* self, QPainter* painter);
QPaintDevice* KActionSelector_Redirected(const KActionSelector* self, QPoint* offset);
void KActionSelector_OnRedirected(const KActionSelector* self, intptr_t slot);
QPaintDevice* KActionSelector_QBaseRedirected(const KActionSelector* self, QPoint* offset);
QPainter* KActionSelector_SharedPainter(const KActionSelector* self);
void KActionSelector_OnSharedPainter(const KActionSelector* self, intptr_t slot);
QPainter* KActionSelector_QBaseSharedPainter(const KActionSelector* self);
void KActionSelector_InputMethodEvent(KActionSelector* self, QInputMethodEvent* param1);
void KActionSelector_OnInputMethodEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseInputMethodEvent(KActionSelector* self, QInputMethodEvent* param1);
QVariant* KActionSelector_InputMethodQuery(const KActionSelector* self, int param1);
void KActionSelector_OnInputMethodQuery(const KActionSelector* self, intptr_t slot);
QVariant* KActionSelector_QBaseInputMethodQuery(const KActionSelector* self, int param1);
bool KActionSelector_FocusNextPrevChild(KActionSelector* self, bool next);
void KActionSelector_OnFocusNextPrevChild(KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseFocusNextPrevChild(KActionSelector* self, bool next);
void KActionSelector_TimerEvent(KActionSelector* self, QTimerEvent* event);
void KActionSelector_OnTimerEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseTimerEvent(KActionSelector* self, QTimerEvent* event);
void KActionSelector_ChildEvent(KActionSelector* self, QChildEvent* event);
void KActionSelector_OnChildEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseChildEvent(KActionSelector* self, QChildEvent* event);
void KActionSelector_CustomEvent(KActionSelector* self, QEvent* event);
void KActionSelector_OnCustomEvent(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseCustomEvent(KActionSelector* self, QEvent* event);
void KActionSelector_ConnectNotify(KActionSelector* self, const QMetaMethod* signal);
void KActionSelector_OnConnectNotify(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseConnectNotify(KActionSelector* self, const QMetaMethod* signal);
void KActionSelector_DisconnectNotify(KActionSelector* self, const QMetaMethod* signal);
void KActionSelector_OnDisconnectNotify(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseDisconnectNotify(KActionSelector* self, const QMetaMethod* signal);
void KActionSelector_UpdateMicroFocus(KActionSelector* self);
void KActionSelector_OnUpdateMicroFocus(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseUpdateMicroFocus(KActionSelector* self);
void KActionSelector_Create(KActionSelector* self);
void KActionSelector_OnCreate(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseCreate(KActionSelector* self);
void KActionSelector_Destroy(KActionSelector* self);
void KActionSelector_OnDestroy(KActionSelector* self, intptr_t slot);
void KActionSelector_QBaseDestroy(KActionSelector* self);
bool KActionSelector_FocusNextChild(KActionSelector* self);
void KActionSelector_OnFocusNextChild(KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseFocusNextChild(KActionSelector* self);
bool KActionSelector_FocusPreviousChild(KActionSelector* self);
void KActionSelector_OnFocusPreviousChild(KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseFocusPreviousChild(KActionSelector* self);
QObject* KActionSelector_Sender(const KActionSelector* self);
void KActionSelector_OnSender(const KActionSelector* self, intptr_t slot);
QObject* KActionSelector_QBaseSender(const KActionSelector* self);
int KActionSelector_SenderSignalIndex(const KActionSelector* self);
void KActionSelector_OnSenderSignalIndex(const KActionSelector* self, intptr_t slot);
int KActionSelector_QBaseSenderSignalIndex(const KActionSelector* self);
int KActionSelector_Receivers(const KActionSelector* self, const char* signal);
void KActionSelector_OnReceivers(const KActionSelector* self, intptr_t slot);
int KActionSelector_QBaseReceivers(const KActionSelector* self, const char* signal);
bool KActionSelector_IsSignalConnected(const KActionSelector* self, const QMetaMethod* signal);
void KActionSelector_OnIsSignalConnected(const KActionSelector* self, intptr_t slot);
bool KActionSelector_QBaseIsSignalConnected(const KActionSelector* self, const QMetaMethod* signal);
double KActionSelector_GetDecodedMetricF(const KActionSelector* self, int metricA, int metricB);
void KActionSelector_OnGetDecodedMetricF(const KActionSelector* self, intptr_t slot);
double KActionSelector_QBaseGetDecodedMetricF(const KActionSelector* self, int metricA, int metricB);
void KActionSelector_Delete(KActionSelector* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
