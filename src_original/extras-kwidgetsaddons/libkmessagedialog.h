#pragma once
#ifndef SRC_EXTRAS_KWIDGETSADDONSC_LIBKMESSAGEDIALOG_H
#define SRC_EXTRAS_KWIDGETSADDONSC_LIBKMESSAGEDIALOG_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KGuiItem KGuiItem;
typedef struct KMessageDialog KMessageDialog;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDialog QDialog;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KMessageDialog* KMessageDialog_new(int typeVal, const libqt_string text);
KMessageDialog* KMessageDialog_new2(int typeVal, const libqt_string text, uintptr_t parent_id);
KMessageDialog* KMessageDialog_new3(int typeVal, const libqt_string text, QWidget* parent);
QMetaObject* KMessageDialog_MetaObject(const KMessageDialog* self);
void* KMessageDialog_Metacast(KMessageDialog* self, const char* param1);
int KMessageDialog_Metacall(KMessageDialog* self, int param1, int param2, void** param3);
libqt_string KMessageDialog_Tr(const char* s);
void KMessageDialog_SetCaption(KMessageDialog* self, const libqt_string caption);
void KMessageDialog_SetIcon(KMessageDialog* self, const QIcon* icon);
void KMessageDialog_SetListWidgetItems(KMessageDialog* self, const libqt_list /* of libqt_string */ strlist);
void KMessageDialog_SetDetails(KMessageDialog* self, const libqt_string details);
void KMessageDialog_SetDontAskAgainText(KMessageDialog* self, const libqt_string dontAskAgainText);
void KMessageDialog_SetDontAskAgainChecked(KMessageDialog* self, bool isChecked);
bool KMessageDialog_IsDontAskAgainChecked(const KMessageDialog* self);
void KMessageDialog_SetOpenExternalLinks(KMessageDialog* self, bool isAllowed);
bool KMessageDialog_IsNotifyEnabled(const KMessageDialog* self);
void KMessageDialog_SetNotifyEnabled(KMessageDialog* self, bool enable);
void KMessageDialog_SetButtons(KMessageDialog* self);
void KMessageDialog_Beep(int typeVal);
void KMessageDialog_ShowEvent(KMessageDialog* self, QShowEvent* event);
libqt_string KMessageDialog_Tr2(const char* s, const char* c);
libqt_string KMessageDialog_Tr3(const char* s, const char* c, int n);
void KMessageDialog_SetButtons1(KMessageDialog* self, const KGuiItem* primaryAction);
void KMessageDialog_SetButtons2(KMessageDialog* self, const KGuiItem* primaryAction, const KGuiItem* secondaryAction);
void KMessageDialog_SetButtons3(KMessageDialog* self, const KGuiItem* primaryAction, const KGuiItem* secondaryAction, const KGuiItem* cancelAction);
void KMessageDialog_Beep2(int typeVal, const libqt_string text);
void KMessageDialog_Beep3(int typeVal, const libqt_string text, QWidget* dialog);
void KMessageDialog_OnMetacall(KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseMetacall(KMessageDialog* self, int param1, int param2, void** param3);
void KMessageDialog_OnShowEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseShowEvent(KMessageDialog* self, QShowEvent* event);
void KMessageDialog_SetVisible(KMessageDialog* self, bool visible);
void KMessageDialog_OnSetVisible(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseSetVisible(KMessageDialog* self, bool visible);
QSize* KMessageDialog_SizeHint(const KMessageDialog* self);
void KMessageDialog_OnSizeHint(const KMessageDialog* self, intptr_t slot);
QSize* KMessageDialog_QBaseSizeHint(const KMessageDialog* self);
QSize* KMessageDialog_MinimumSizeHint(const KMessageDialog* self);
void KMessageDialog_OnMinimumSizeHint(const KMessageDialog* self, intptr_t slot);
QSize* KMessageDialog_QBaseMinimumSizeHint(const KMessageDialog* self);
void KMessageDialog_Open(KMessageDialog* self);
void KMessageDialog_OnOpen(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseOpen(KMessageDialog* self);
int KMessageDialog_Exec(KMessageDialog* self);
void KMessageDialog_OnExec(KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseExec(KMessageDialog* self);
void KMessageDialog_Done(KMessageDialog* self, int param1);
void KMessageDialog_OnDone(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDone(KMessageDialog* self, int param1);
void KMessageDialog_Accept(KMessageDialog* self);
void KMessageDialog_OnAccept(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseAccept(KMessageDialog* self);
void KMessageDialog_Reject(KMessageDialog* self);
void KMessageDialog_OnReject(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseReject(KMessageDialog* self);
void KMessageDialog_KeyPressEvent(KMessageDialog* self, QKeyEvent* param1);
void KMessageDialog_OnKeyPressEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseKeyPressEvent(KMessageDialog* self, QKeyEvent* param1);
void KMessageDialog_CloseEvent(KMessageDialog* self, QCloseEvent* param1);
void KMessageDialog_OnCloseEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseCloseEvent(KMessageDialog* self, QCloseEvent* param1);
void KMessageDialog_ResizeEvent(KMessageDialog* self, QResizeEvent* param1);
void KMessageDialog_OnResizeEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseResizeEvent(KMessageDialog* self, QResizeEvent* param1);
void KMessageDialog_ContextMenuEvent(KMessageDialog* self, QContextMenuEvent* param1);
void KMessageDialog_OnContextMenuEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseContextMenuEvent(KMessageDialog* self, QContextMenuEvent* param1);
bool KMessageDialog_EventFilter(KMessageDialog* self, QObject* param1, QEvent* param2);
void KMessageDialog_OnEventFilter(KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseEventFilter(KMessageDialog* self, QObject* param1, QEvent* param2);
int KMessageDialog_DevType(const KMessageDialog* self);
void KMessageDialog_OnDevType(const KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseDevType(const KMessageDialog* self);
int KMessageDialog_HeightForWidth(const KMessageDialog* self, int param1);
void KMessageDialog_OnHeightForWidth(const KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseHeightForWidth(const KMessageDialog* self, int param1);
bool KMessageDialog_HasHeightForWidth(const KMessageDialog* self);
void KMessageDialog_OnHasHeightForWidth(const KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseHasHeightForWidth(const KMessageDialog* self);
QPaintEngine* KMessageDialog_PaintEngine(const KMessageDialog* self);
void KMessageDialog_OnPaintEngine(const KMessageDialog* self, intptr_t slot);
QPaintEngine* KMessageDialog_QBasePaintEngine(const KMessageDialog* self);
bool KMessageDialog_Event(KMessageDialog* self, QEvent* event);
void KMessageDialog_OnEvent(KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseEvent(KMessageDialog* self, QEvent* event);
void KMessageDialog_MousePressEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_OnMousePressEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseMousePressEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_MouseReleaseEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_OnMouseReleaseEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseMouseReleaseEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_MouseDoubleClickEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_OnMouseDoubleClickEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseMouseDoubleClickEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_MouseMoveEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_OnMouseMoveEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseMouseMoveEvent(KMessageDialog* self, QMouseEvent* event);
void KMessageDialog_WheelEvent(KMessageDialog* self, QWheelEvent* event);
void KMessageDialog_OnWheelEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseWheelEvent(KMessageDialog* self, QWheelEvent* event);
void KMessageDialog_KeyReleaseEvent(KMessageDialog* self, QKeyEvent* event);
void KMessageDialog_OnKeyReleaseEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseKeyReleaseEvent(KMessageDialog* self, QKeyEvent* event);
void KMessageDialog_FocusInEvent(KMessageDialog* self, QFocusEvent* event);
void KMessageDialog_OnFocusInEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseFocusInEvent(KMessageDialog* self, QFocusEvent* event);
void KMessageDialog_FocusOutEvent(KMessageDialog* self, QFocusEvent* event);
void KMessageDialog_OnFocusOutEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseFocusOutEvent(KMessageDialog* self, QFocusEvent* event);
void KMessageDialog_EnterEvent(KMessageDialog* self, QEnterEvent* event);
void KMessageDialog_OnEnterEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseEnterEvent(KMessageDialog* self, QEnterEvent* event);
void KMessageDialog_LeaveEvent(KMessageDialog* self, QEvent* event);
void KMessageDialog_OnLeaveEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseLeaveEvent(KMessageDialog* self, QEvent* event);
void KMessageDialog_PaintEvent(KMessageDialog* self, QPaintEvent* event);
void KMessageDialog_OnPaintEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBasePaintEvent(KMessageDialog* self, QPaintEvent* event);
void KMessageDialog_MoveEvent(KMessageDialog* self, QMoveEvent* event);
void KMessageDialog_OnMoveEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseMoveEvent(KMessageDialog* self, QMoveEvent* event);
void KMessageDialog_TabletEvent(KMessageDialog* self, QTabletEvent* event);
void KMessageDialog_OnTabletEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseTabletEvent(KMessageDialog* self, QTabletEvent* event);
void KMessageDialog_ActionEvent(KMessageDialog* self, QActionEvent* event);
void KMessageDialog_OnActionEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseActionEvent(KMessageDialog* self, QActionEvent* event);
void KMessageDialog_DragEnterEvent(KMessageDialog* self, QDragEnterEvent* event);
void KMessageDialog_OnDragEnterEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDragEnterEvent(KMessageDialog* self, QDragEnterEvent* event);
void KMessageDialog_DragMoveEvent(KMessageDialog* self, QDragMoveEvent* event);
void KMessageDialog_OnDragMoveEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDragMoveEvent(KMessageDialog* self, QDragMoveEvent* event);
void KMessageDialog_DragLeaveEvent(KMessageDialog* self, QDragLeaveEvent* event);
void KMessageDialog_OnDragLeaveEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDragLeaveEvent(KMessageDialog* self, QDragLeaveEvent* event);
void KMessageDialog_DropEvent(KMessageDialog* self, QDropEvent* event);
void KMessageDialog_OnDropEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDropEvent(KMessageDialog* self, QDropEvent* event);
void KMessageDialog_HideEvent(KMessageDialog* self, QHideEvent* event);
void KMessageDialog_OnHideEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseHideEvent(KMessageDialog* self, QHideEvent* event);
bool KMessageDialog_NativeEvent(KMessageDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KMessageDialog_OnNativeEvent(KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseNativeEvent(KMessageDialog* self, const libqt_string eventType, void* message, intptr_t* result);
void KMessageDialog_ChangeEvent(KMessageDialog* self, QEvent* param1);
void KMessageDialog_OnChangeEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseChangeEvent(KMessageDialog* self, QEvent* param1);
int KMessageDialog_Metric(const KMessageDialog* self, int param1);
void KMessageDialog_OnMetric(const KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseMetric(const KMessageDialog* self, int param1);
void KMessageDialog_InitPainter(const KMessageDialog* self, QPainter* painter);
void KMessageDialog_OnInitPainter(const KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseInitPainter(const KMessageDialog* self, QPainter* painter);
QPaintDevice* KMessageDialog_Redirected(const KMessageDialog* self, QPoint* offset);
void KMessageDialog_OnRedirected(const KMessageDialog* self, intptr_t slot);
QPaintDevice* KMessageDialog_QBaseRedirected(const KMessageDialog* self, QPoint* offset);
QPainter* KMessageDialog_SharedPainter(const KMessageDialog* self);
void KMessageDialog_OnSharedPainter(const KMessageDialog* self, intptr_t slot);
QPainter* KMessageDialog_QBaseSharedPainter(const KMessageDialog* self);
void KMessageDialog_InputMethodEvent(KMessageDialog* self, QInputMethodEvent* param1);
void KMessageDialog_OnInputMethodEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseInputMethodEvent(KMessageDialog* self, QInputMethodEvent* param1);
QVariant* KMessageDialog_InputMethodQuery(const KMessageDialog* self, int param1);
void KMessageDialog_OnInputMethodQuery(const KMessageDialog* self, intptr_t slot);
QVariant* KMessageDialog_QBaseInputMethodQuery(const KMessageDialog* self, int param1);
bool KMessageDialog_FocusNextPrevChild(KMessageDialog* self, bool next);
void KMessageDialog_OnFocusNextPrevChild(KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseFocusNextPrevChild(KMessageDialog* self, bool next);
void KMessageDialog_TimerEvent(KMessageDialog* self, QTimerEvent* event);
void KMessageDialog_OnTimerEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseTimerEvent(KMessageDialog* self, QTimerEvent* event);
void KMessageDialog_ChildEvent(KMessageDialog* self, QChildEvent* event);
void KMessageDialog_OnChildEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseChildEvent(KMessageDialog* self, QChildEvent* event);
void KMessageDialog_CustomEvent(KMessageDialog* self, QEvent* event);
void KMessageDialog_OnCustomEvent(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseCustomEvent(KMessageDialog* self, QEvent* event);
void KMessageDialog_ConnectNotify(KMessageDialog* self, const QMetaMethod* signal);
void KMessageDialog_OnConnectNotify(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseConnectNotify(KMessageDialog* self, const QMetaMethod* signal);
void KMessageDialog_DisconnectNotify(KMessageDialog* self, const QMetaMethod* signal);
void KMessageDialog_OnDisconnectNotify(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDisconnectNotify(KMessageDialog* self, const QMetaMethod* signal);
void KMessageDialog_AdjustPosition(KMessageDialog* self, QWidget* param1);
void KMessageDialog_OnAdjustPosition(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseAdjustPosition(KMessageDialog* self, QWidget* param1);
void KMessageDialog_UpdateMicroFocus(KMessageDialog* self);
void KMessageDialog_OnUpdateMicroFocus(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseUpdateMicroFocus(KMessageDialog* self);
void KMessageDialog_Create(KMessageDialog* self);
void KMessageDialog_OnCreate(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseCreate(KMessageDialog* self);
void KMessageDialog_Destroy(KMessageDialog* self);
void KMessageDialog_OnDestroy(KMessageDialog* self, intptr_t slot);
void KMessageDialog_QBaseDestroy(KMessageDialog* self);
bool KMessageDialog_FocusNextChild(KMessageDialog* self);
void KMessageDialog_OnFocusNextChild(KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseFocusNextChild(KMessageDialog* self);
bool KMessageDialog_FocusPreviousChild(KMessageDialog* self);
void KMessageDialog_OnFocusPreviousChild(KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseFocusPreviousChild(KMessageDialog* self);
QObject* KMessageDialog_Sender(const KMessageDialog* self);
void KMessageDialog_OnSender(const KMessageDialog* self, intptr_t slot);
QObject* KMessageDialog_QBaseSender(const KMessageDialog* self);
int KMessageDialog_SenderSignalIndex(const KMessageDialog* self);
void KMessageDialog_OnSenderSignalIndex(const KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseSenderSignalIndex(const KMessageDialog* self);
int KMessageDialog_Receivers(const KMessageDialog* self, const char* signal);
void KMessageDialog_OnReceivers(const KMessageDialog* self, intptr_t slot);
int KMessageDialog_QBaseReceivers(const KMessageDialog* self, const char* signal);
bool KMessageDialog_IsSignalConnected(const KMessageDialog* self, const QMetaMethod* signal);
void KMessageDialog_OnIsSignalConnected(const KMessageDialog* self, intptr_t slot);
bool KMessageDialog_QBaseIsSignalConnected(const KMessageDialog* self, const QMetaMethod* signal);
double KMessageDialog_GetDecodedMetricF(const KMessageDialog* self, int metricA, int metricB);
void KMessageDialog_OnGetDecodedMetricF(const KMessageDialog* self, intptr_t slot);
double KMessageDialog_QBaseGetDecodedMetricF(const KMessageDialog* self, int metricA, int metricB);
void KMessageDialog_Delete(KMessageDialog* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
