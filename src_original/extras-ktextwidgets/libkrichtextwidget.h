#pragma once
#ifndef SRC_EXTRAS_KTEXTWIDGETSC_LIBKRICHTEXTWIDGET_H
#define SRC_EXTRAS_KTEXTWIDGETSC_LIBKRICHTEXTWIDGET_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KRichTextEdit KRichTextEdit;
typedef struct KRichTextWidget KRichTextWidget;
typedef struct KTextEdit KTextEdit;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMimeData QMimeData;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTextCursor QTextCursor;
typedef struct QTextEdit QTextEdit;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KRichTextWidget* KRichTextWidget_new(QWidget* parent);
KRichTextWidget* KRichTextWidget_new2(const libqt_string text);
KRichTextWidget* KRichTextWidget_new3(const libqt_string text, QWidget* parent);
QMetaObject* KRichTextWidget_MetaObject(const KRichTextWidget* self);
void* KRichTextWidget_Metacast(KRichTextWidget* self, const char* param1);
int KRichTextWidget_Metacall(KRichTextWidget* self, int param1, int param2, void** param3);
libqt_string KRichTextWidget_Tr(const char* s);
libqt_list /* of QAction* */ KRichTextWidget_CreateActions(KRichTextWidget* self);
int KRichTextWidget_RichTextSupport(const KRichTextWidget* self);
void KRichTextWidget_UpdateActionStates(KRichTextWidget* self);
void KRichTextWidget_SetActionsEnabled(KRichTextWidget* self, bool enabled);
void KRichTextWidget_MouseReleaseEvent(KRichTextWidget* self, QMouseEvent* event);
libqt_string KRichTextWidget_Tr2(const char* s, const char* c);
libqt_string KRichTextWidget_Tr3(const char* s, const char* c, int n);
void KRichTextWidget_OnMetacall(KRichTextWidget* self, intptr_t slot);
int KRichTextWidget_QBaseMetacall(KRichTextWidget* self, int param1, int param2, void** param3);
void KRichTextWidget_OnCreateActions(KRichTextWidget* self, intptr_t slot);
libqt_list /* of QAction* */ KRichTextWidget_QBaseCreateActions(KRichTextWidget* self);
void KRichTextWidget_OnMouseReleaseEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseMouseReleaseEvent(KRichTextWidget* self, QMouseEvent* event);
void KRichTextWidget_KeyPressEvent(KRichTextWidget* self, QKeyEvent* event);
void KRichTextWidget_OnKeyPressEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseKeyPressEvent(KRichTextWidget* self, QKeyEvent* event);
void KRichTextWidget_SetReadOnly(KRichTextWidget* self, bool readOnly);
void KRichTextWidget_OnSetReadOnly(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSetReadOnly(KRichTextWidget* self, bool readOnly);
void KRichTextWidget_SetCheckSpellingEnabled(KRichTextWidget* self, bool check);
void KRichTextWidget_OnSetCheckSpellingEnabled(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSetCheckSpellingEnabled(KRichTextWidget* self, bool check);
bool KRichTextWidget_CheckSpellingEnabled(const KRichTextWidget* self);
void KRichTextWidget_OnCheckSpellingEnabled(const KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseCheckSpellingEnabled(const KRichTextWidget* self);
bool KRichTextWidget_ShouldBlockBeSpellChecked(const KRichTextWidget* self, const libqt_string block);
void KRichTextWidget_OnShouldBlockBeSpellChecked(const KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseShouldBlockBeSpellChecked(const KRichTextWidget* self, const libqt_string block);
void KRichTextWidget_CreateHighlighter(KRichTextWidget* self);
void KRichTextWidget_OnCreateHighlighter(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseCreateHighlighter(KRichTextWidget* self);
QMenu* KRichTextWidget_MousePopupMenu(KRichTextWidget* self);
void KRichTextWidget_OnMousePopupMenu(KRichTextWidget* self, intptr_t slot);
QMenu* KRichTextWidget_QBaseMousePopupMenu(KRichTextWidget* self);
bool KRichTextWidget_Event(KRichTextWidget* self, QEvent* param1);
void KRichTextWidget_OnEvent(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseEvent(KRichTextWidget* self, QEvent* param1);
void KRichTextWidget_FocusInEvent(KRichTextWidget* self, QFocusEvent* param1);
void KRichTextWidget_OnFocusInEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseFocusInEvent(KRichTextWidget* self, QFocusEvent* param1);
void KRichTextWidget_DeleteWordBack(KRichTextWidget* self);
void KRichTextWidget_OnDeleteWordBack(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDeleteWordBack(KRichTextWidget* self);
void KRichTextWidget_DeleteWordForward(KRichTextWidget* self);
void KRichTextWidget_OnDeleteWordForward(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDeleteWordForward(KRichTextWidget* self);
void KRichTextWidget_ContextMenuEvent(KRichTextWidget* self, QContextMenuEvent* param1);
void KRichTextWidget_OnContextMenuEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseContextMenuEvent(KRichTextWidget* self, QContextMenuEvent* param1);
QVariant* KRichTextWidget_LoadResource(KRichTextWidget* self, int typeVal, const QUrl* name);
void KRichTextWidget_OnLoadResource(KRichTextWidget* self, intptr_t slot);
QVariant* KRichTextWidget_QBaseLoadResource(KRichTextWidget* self, int typeVal, const QUrl* name);
QVariant* KRichTextWidget_InputMethodQuery(const KRichTextWidget* self, int property);
void KRichTextWidget_OnInputMethodQuery(const KRichTextWidget* self, intptr_t slot);
QVariant* KRichTextWidget_QBaseInputMethodQuery(const KRichTextWidget* self, int property);
void KRichTextWidget_TimerEvent(KRichTextWidget* self, QTimerEvent* e);
void KRichTextWidget_OnTimerEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseTimerEvent(KRichTextWidget* self, QTimerEvent* e);
void KRichTextWidget_KeyReleaseEvent(KRichTextWidget* self, QKeyEvent* e);
void KRichTextWidget_OnKeyReleaseEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseKeyReleaseEvent(KRichTextWidget* self, QKeyEvent* e);
void KRichTextWidget_ResizeEvent(KRichTextWidget* self, QResizeEvent* e);
void KRichTextWidget_OnResizeEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseResizeEvent(KRichTextWidget* self, QResizeEvent* e);
void KRichTextWidget_PaintEvent(KRichTextWidget* self, QPaintEvent* e);
void KRichTextWidget_OnPaintEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBasePaintEvent(KRichTextWidget* self, QPaintEvent* e);
void KRichTextWidget_MousePressEvent(KRichTextWidget* self, QMouseEvent* e);
void KRichTextWidget_OnMousePressEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseMousePressEvent(KRichTextWidget* self, QMouseEvent* e);
void KRichTextWidget_MouseMoveEvent(KRichTextWidget* self, QMouseEvent* e);
void KRichTextWidget_OnMouseMoveEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseMouseMoveEvent(KRichTextWidget* self, QMouseEvent* e);
void KRichTextWidget_MouseDoubleClickEvent(KRichTextWidget* self, QMouseEvent* e);
void KRichTextWidget_OnMouseDoubleClickEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseMouseDoubleClickEvent(KRichTextWidget* self, QMouseEvent* e);
bool KRichTextWidget_FocusNextPrevChild(KRichTextWidget* self, bool next);
void KRichTextWidget_OnFocusNextPrevChild(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseFocusNextPrevChild(KRichTextWidget* self, bool next);
void KRichTextWidget_DragEnterEvent(KRichTextWidget* self, QDragEnterEvent* e);
void KRichTextWidget_OnDragEnterEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDragEnterEvent(KRichTextWidget* self, QDragEnterEvent* e);
void KRichTextWidget_DragLeaveEvent(KRichTextWidget* self, QDragLeaveEvent* e);
void KRichTextWidget_OnDragLeaveEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDragLeaveEvent(KRichTextWidget* self, QDragLeaveEvent* e);
void KRichTextWidget_DragMoveEvent(KRichTextWidget* self, QDragMoveEvent* e);
void KRichTextWidget_OnDragMoveEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDragMoveEvent(KRichTextWidget* self, QDragMoveEvent* e);
void KRichTextWidget_DropEvent(KRichTextWidget* self, QDropEvent* e);
void KRichTextWidget_OnDropEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDropEvent(KRichTextWidget* self, QDropEvent* e);
void KRichTextWidget_FocusOutEvent(KRichTextWidget* self, QFocusEvent* e);
void KRichTextWidget_OnFocusOutEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseFocusOutEvent(KRichTextWidget* self, QFocusEvent* e);
void KRichTextWidget_ShowEvent(KRichTextWidget* self, QShowEvent* param1);
void KRichTextWidget_OnShowEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseShowEvent(KRichTextWidget* self, QShowEvent* param1);
void KRichTextWidget_ChangeEvent(KRichTextWidget* self, QEvent* e);
void KRichTextWidget_OnChangeEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseChangeEvent(KRichTextWidget* self, QEvent* e);
void KRichTextWidget_WheelEvent(KRichTextWidget* self, QWheelEvent* e);
void KRichTextWidget_OnWheelEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseWheelEvent(KRichTextWidget* self, QWheelEvent* e);
QMimeData* KRichTextWidget_CreateMimeDataFromSelection(const KRichTextWidget* self);
void KRichTextWidget_OnCreateMimeDataFromSelection(const KRichTextWidget* self, intptr_t slot);
QMimeData* KRichTextWidget_QBaseCreateMimeDataFromSelection(const KRichTextWidget* self);
bool KRichTextWidget_CanInsertFromMimeData(const KRichTextWidget* self, const QMimeData* source);
void KRichTextWidget_OnCanInsertFromMimeData(const KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseCanInsertFromMimeData(const KRichTextWidget* self, const QMimeData* source);
void KRichTextWidget_InsertFromMimeData(KRichTextWidget* self, const QMimeData* source);
void KRichTextWidget_OnInsertFromMimeData(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseInsertFromMimeData(KRichTextWidget* self, const QMimeData* source);
void KRichTextWidget_InputMethodEvent(KRichTextWidget* self, QInputMethodEvent* param1);
void KRichTextWidget_OnInputMethodEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseInputMethodEvent(KRichTextWidget* self, QInputMethodEvent* param1);
void KRichTextWidget_ScrollContentsBy(KRichTextWidget* self, int dx, int dy);
void KRichTextWidget_OnScrollContentsBy(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseScrollContentsBy(KRichTextWidget* self, int dx, int dy);
void KRichTextWidget_DoSetTextCursor(KRichTextWidget* self, const QTextCursor* cursor);
void KRichTextWidget_OnDoSetTextCursor(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDoSetTextCursor(KRichTextWidget* self, const QTextCursor* cursor);
QSize* KRichTextWidget_MinimumSizeHint(const KRichTextWidget* self);
void KRichTextWidget_OnMinimumSizeHint(const KRichTextWidget* self, intptr_t slot);
QSize* KRichTextWidget_QBaseMinimumSizeHint(const KRichTextWidget* self);
QSize* KRichTextWidget_SizeHint(const KRichTextWidget* self);
void KRichTextWidget_OnSizeHint(const KRichTextWidget* self, intptr_t slot);
QSize* KRichTextWidget_QBaseSizeHint(const KRichTextWidget* self);
void KRichTextWidget_SetupViewport(KRichTextWidget* self, QWidget* viewport);
void KRichTextWidget_OnSetupViewport(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSetupViewport(KRichTextWidget* self, QWidget* viewport);
bool KRichTextWidget_EventFilter(KRichTextWidget* self, QObject* param1, QEvent* param2);
void KRichTextWidget_OnEventFilter(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseEventFilter(KRichTextWidget* self, QObject* param1, QEvent* param2);
bool KRichTextWidget_ViewportEvent(KRichTextWidget* self, QEvent* param1);
void KRichTextWidget_OnViewportEvent(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseViewportEvent(KRichTextWidget* self, QEvent* param1);
QSize* KRichTextWidget_ViewportSizeHint(const KRichTextWidget* self);
void KRichTextWidget_OnViewportSizeHint(const KRichTextWidget* self, intptr_t slot);
QSize* KRichTextWidget_QBaseViewportSizeHint(const KRichTextWidget* self);
void KRichTextWidget_InitStyleOption(const KRichTextWidget* self, QStyleOptionFrame* option);
void KRichTextWidget_OnInitStyleOption(const KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseInitStyleOption(const KRichTextWidget* self, QStyleOptionFrame* option);
int KRichTextWidget_DevType(const KRichTextWidget* self);
void KRichTextWidget_OnDevType(const KRichTextWidget* self, intptr_t slot);
int KRichTextWidget_QBaseDevType(const KRichTextWidget* self);
void KRichTextWidget_SetVisible(KRichTextWidget* self, bool visible);
void KRichTextWidget_OnSetVisible(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSetVisible(KRichTextWidget* self, bool visible);
int KRichTextWidget_HeightForWidth(const KRichTextWidget* self, int param1);
void KRichTextWidget_OnHeightForWidth(const KRichTextWidget* self, intptr_t slot);
int KRichTextWidget_QBaseHeightForWidth(const KRichTextWidget* self, int param1);
bool KRichTextWidget_HasHeightForWidth(const KRichTextWidget* self);
void KRichTextWidget_OnHasHeightForWidth(const KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseHasHeightForWidth(const KRichTextWidget* self);
QPaintEngine* KRichTextWidget_PaintEngine(const KRichTextWidget* self);
void KRichTextWidget_OnPaintEngine(const KRichTextWidget* self, intptr_t slot);
QPaintEngine* KRichTextWidget_QBasePaintEngine(const KRichTextWidget* self);
void KRichTextWidget_EnterEvent(KRichTextWidget* self, QEnterEvent* event);
void KRichTextWidget_OnEnterEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseEnterEvent(KRichTextWidget* self, QEnterEvent* event);
void KRichTextWidget_LeaveEvent(KRichTextWidget* self, QEvent* event);
void KRichTextWidget_OnLeaveEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseLeaveEvent(KRichTextWidget* self, QEvent* event);
void KRichTextWidget_MoveEvent(KRichTextWidget* self, QMoveEvent* event);
void KRichTextWidget_OnMoveEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseMoveEvent(KRichTextWidget* self, QMoveEvent* event);
void KRichTextWidget_CloseEvent(KRichTextWidget* self, QCloseEvent* event);
void KRichTextWidget_OnCloseEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseCloseEvent(KRichTextWidget* self, QCloseEvent* event);
void KRichTextWidget_TabletEvent(KRichTextWidget* self, QTabletEvent* event);
void KRichTextWidget_OnTabletEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseTabletEvent(KRichTextWidget* self, QTabletEvent* event);
void KRichTextWidget_ActionEvent(KRichTextWidget* self, QActionEvent* event);
void KRichTextWidget_OnActionEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseActionEvent(KRichTextWidget* self, QActionEvent* event);
void KRichTextWidget_HideEvent(KRichTextWidget* self, QHideEvent* event);
void KRichTextWidget_OnHideEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseHideEvent(KRichTextWidget* self, QHideEvent* event);
bool KRichTextWidget_NativeEvent(KRichTextWidget* self, const libqt_string eventType, void* message, intptr_t* result);
void KRichTextWidget_OnNativeEvent(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseNativeEvent(KRichTextWidget* self, const libqt_string eventType, void* message, intptr_t* result);
int KRichTextWidget_Metric(const KRichTextWidget* self, int param1);
void KRichTextWidget_OnMetric(const KRichTextWidget* self, intptr_t slot);
int KRichTextWidget_QBaseMetric(const KRichTextWidget* self, int param1);
void KRichTextWidget_InitPainter(const KRichTextWidget* self, QPainter* painter);
void KRichTextWidget_OnInitPainter(const KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseInitPainter(const KRichTextWidget* self, QPainter* painter);
QPaintDevice* KRichTextWidget_Redirected(const KRichTextWidget* self, QPoint* offset);
void KRichTextWidget_OnRedirected(const KRichTextWidget* self, intptr_t slot);
QPaintDevice* KRichTextWidget_QBaseRedirected(const KRichTextWidget* self, QPoint* offset);
QPainter* KRichTextWidget_SharedPainter(const KRichTextWidget* self);
void KRichTextWidget_OnSharedPainter(const KRichTextWidget* self, intptr_t slot);
QPainter* KRichTextWidget_QBaseSharedPainter(const KRichTextWidget* self);
void KRichTextWidget_ChildEvent(KRichTextWidget* self, QChildEvent* event);
void KRichTextWidget_OnChildEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseChildEvent(KRichTextWidget* self, QChildEvent* event);
void KRichTextWidget_CustomEvent(KRichTextWidget* self, QEvent* event);
void KRichTextWidget_OnCustomEvent(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseCustomEvent(KRichTextWidget* self, QEvent* event);
void KRichTextWidget_ConnectNotify(KRichTextWidget* self, const QMetaMethod* signal);
void KRichTextWidget_OnConnectNotify(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseConnectNotify(KRichTextWidget* self, const QMetaMethod* signal);
void KRichTextWidget_DisconnectNotify(KRichTextWidget* self, const QMetaMethod* signal);
void KRichTextWidget_OnDisconnectNotify(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDisconnectNotify(KRichTextWidget* self, const QMetaMethod* signal);
void KRichTextWidget_SlotDoReplace(KRichTextWidget* self);
void KRichTextWidget_OnSlotDoReplace(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotDoReplace(KRichTextWidget* self);
void KRichTextWidget_SlotReplaceNext(KRichTextWidget* self);
void KRichTextWidget_OnSlotReplaceNext(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotReplaceNext(KRichTextWidget* self);
void KRichTextWidget_SlotDoFind(KRichTextWidget* self);
void KRichTextWidget_OnSlotDoFind(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotDoFind(KRichTextWidget* self);
void KRichTextWidget_SlotFind(KRichTextWidget* self);
void KRichTextWidget_OnSlotFind(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotFind(KRichTextWidget* self);
void KRichTextWidget_SlotFindNext(KRichTextWidget* self);
void KRichTextWidget_OnSlotFindNext(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotFindNext(KRichTextWidget* self);
void KRichTextWidget_SlotFindPrevious(KRichTextWidget* self);
void KRichTextWidget_OnSlotFindPrevious(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotFindPrevious(KRichTextWidget* self);
void KRichTextWidget_SlotReplace(KRichTextWidget* self);
void KRichTextWidget_OnSlotReplace(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotReplace(KRichTextWidget* self);
void KRichTextWidget_SlotSpeakText(KRichTextWidget* self);
void KRichTextWidget_OnSlotSpeakText(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSlotSpeakText(KRichTextWidget* self);
void KRichTextWidget_ZoomInF(KRichTextWidget* self, float range);
void KRichTextWidget_OnZoomInF(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseZoomInF(KRichTextWidget* self, float range);
void KRichTextWidget_SetViewportMargins(KRichTextWidget* self, int left, int top, int right, int bottom);
void KRichTextWidget_OnSetViewportMargins(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseSetViewportMargins(KRichTextWidget* self, int left, int top, int right, int bottom);
QMargins* KRichTextWidget_ViewportMargins(const KRichTextWidget* self);
void KRichTextWidget_OnViewportMargins(const KRichTextWidget* self, intptr_t slot);
QMargins* KRichTextWidget_QBaseViewportMargins(const KRichTextWidget* self);
void KRichTextWidget_DrawFrame(KRichTextWidget* self, QPainter* param1);
void KRichTextWidget_OnDrawFrame(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDrawFrame(KRichTextWidget* self, QPainter* param1);
void KRichTextWidget_UpdateMicroFocus(KRichTextWidget* self);
void KRichTextWidget_OnUpdateMicroFocus(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseUpdateMicroFocus(KRichTextWidget* self);
void KRichTextWidget_Create(KRichTextWidget* self);
void KRichTextWidget_OnCreate(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseCreate(KRichTextWidget* self);
void KRichTextWidget_Destroy(KRichTextWidget* self);
void KRichTextWidget_OnDestroy(KRichTextWidget* self, intptr_t slot);
void KRichTextWidget_QBaseDestroy(KRichTextWidget* self);
bool KRichTextWidget_FocusNextChild(KRichTextWidget* self);
void KRichTextWidget_OnFocusNextChild(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseFocusNextChild(KRichTextWidget* self);
bool KRichTextWidget_FocusPreviousChild(KRichTextWidget* self);
void KRichTextWidget_OnFocusPreviousChild(KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseFocusPreviousChild(KRichTextWidget* self);
QObject* KRichTextWidget_Sender(const KRichTextWidget* self);
void KRichTextWidget_OnSender(const KRichTextWidget* self, intptr_t slot);
QObject* KRichTextWidget_QBaseSender(const KRichTextWidget* self);
int KRichTextWidget_SenderSignalIndex(const KRichTextWidget* self);
void KRichTextWidget_OnSenderSignalIndex(const KRichTextWidget* self, intptr_t slot);
int KRichTextWidget_QBaseSenderSignalIndex(const KRichTextWidget* self);
int KRichTextWidget_Receivers(const KRichTextWidget* self, const char* signal);
void KRichTextWidget_OnReceivers(const KRichTextWidget* self, intptr_t slot);
int KRichTextWidget_QBaseReceivers(const KRichTextWidget* self, const char* signal);
bool KRichTextWidget_IsSignalConnected(const KRichTextWidget* self, const QMetaMethod* signal);
void KRichTextWidget_OnIsSignalConnected(const KRichTextWidget* self, intptr_t slot);
bool KRichTextWidget_QBaseIsSignalConnected(const KRichTextWidget* self, const QMetaMethod* signal);
double KRichTextWidget_GetDecodedMetricF(const KRichTextWidget* self, int metricA, int metricB);
void KRichTextWidget_OnGetDecodedMetricF(const KRichTextWidget* self, intptr_t slot);
double KRichTextWidget_QBaseGetDecodedMetricF(const KRichTextWidget* self, int metricA, int metricB);
void KRichTextWidget_Delete(KRichTextWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
