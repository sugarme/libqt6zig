#pragma once
#ifndef SRC_EXTRAS_KTEXTWIDGETSC_LIBKRICHTEXTEDIT_H
#define SRC_EXTRAS_KTEXTWIDGETSC_LIBKRICHTEXTEDIT_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KRichTextEdit KRichTextEdit;
typedef struct KTextEdit KTextEdit;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QColor QColor;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMimeData QMimeData;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTextCursor QTextCursor;
typedef struct QTextEdit QTextEdit;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KRichTextEdit* KRichTextEdit_new(QWidget* parent);
KRichTextEdit* KRichTextEdit_new2(const libqt_string text);
KRichTextEdit* KRichTextEdit_new3();
KRichTextEdit* KRichTextEdit_new4(const libqt_string text, QWidget* parent);
QMetaObject* KRichTextEdit_MetaObject(const KRichTextEdit* self);
void* KRichTextEdit_Metacast(KRichTextEdit* self, const char* param1);
int KRichTextEdit_Metacall(KRichTextEdit* self, int param1, int param2, void** param3);
libqt_string KRichTextEdit_Tr(const char* s);
void KRichTextEdit_EnableRichTextMode(KRichTextEdit* self);
int KRichTextEdit_TextMode(const KRichTextEdit* self);
libqt_string KRichTextEdit_TextOrHtml(const KRichTextEdit* self);
void KRichTextEdit_SetTextOrHtml(KRichTextEdit* self, const libqt_string text);
libqt_string KRichTextEdit_CurrentLinkText(const KRichTextEdit* self);
libqt_string KRichTextEdit_CurrentLinkUrl(const KRichTextEdit* self);
void KRichTextEdit_SelectLinkText(const KRichTextEdit* self, QTextCursor* cursor);
void KRichTextEdit_SelectLinkText2(const KRichTextEdit* self);
void KRichTextEdit_UpdateLink(KRichTextEdit* self, const libqt_string linkUrl, const libqt_string linkText);
bool KRichTextEdit_CanIndentList(const KRichTextEdit* self);
bool KRichTextEdit_CanDedentList(const KRichTextEdit* self);
void KRichTextEdit_AlignLeft(KRichTextEdit* self);
void KRichTextEdit_AlignCenter(KRichTextEdit* self);
void KRichTextEdit_AlignRight(KRichTextEdit* self);
void KRichTextEdit_AlignJustify(KRichTextEdit* self);
void KRichTextEdit_MakeRightToLeft(KRichTextEdit* self);
void KRichTextEdit_MakeLeftToRight(KRichTextEdit* self);
void KRichTextEdit_SetListStyle(KRichTextEdit* self, int _styleIndex);
void KRichTextEdit_IndentListMore(KRichTextEdit* self);
void KRichTextEdit_IndentListLess(KRichTextEdit* self);
void KRichTextEdit_SetFontFamily(KRichTextEdit* self, const libqt_string fontFamily);
void KRichTextEdit_SetFontSize(KRichTextEdit* self, int size);
void KRichTextEdit_SetFont(KRichTextEdit* self, const QFont* font);
void KRichTextEdit_SetTextBold(KRichTextEdit* self, bool bold);
void KRichTextEdit_SetTextItalic(KRichTextEdit* self, bool italic);
void KRichTextEdit_SetTextUnderline(KRichTextEdit* self, bool underline);
void KRichTextEdit_SetTextStrikeOut(KRichTextEdit* self, bool strikeOut);
void KRichTextEdit_SetTextForegroundColor(KRichTextEdit* self, const QColor* color);
void KRichTextEdit_SetTextBackgroundColor(KRichTextEdit* self, const QColor* color);
void KRichTextEdit_InsertHorizontalRule(KRichTextEdit* self);
void KRichTextEdit_SwitchToPlainText(KRichTextEdit* self);
libqt_string KRichTextEdit_ToCleanHtml(const KRichTextEdit* self);
void KRichTextEdit_SetTextSuperScript(KRichTextEdit* self, bool superscript);
void KRichTextEdit_SetTextSubScript(KRichTextEdit* self, bool subscript);
void KRichTextEdit_SetHeadingLevel(KRichTextEdit* self, int level);
void KRichTextEdit_InsertPlainTextImplementation(KRichTextEdit* self);
void KRichTextEdit_TextModeChanged(KRichTextEdit* self, int mode);
void KRichTextEdit_Connect_TextModeChanged(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_KeyPressEvent(KRichTextEdit* self, QKeyEvent* event);
libqt_string KRichTextEdit_Tr2(const char* s, const char* c);
libqt_string KRichTextEdit_Tr3(const char* s, const char* c, int n);
void KRichTextEdit_OnMetacall(KRichTextEdit* self, intptr_t slot);
int KRichTextEdit_QBaseMetacall(KRichTextEdit* self, int param1, int param2, void** param3);
void KRichTextEdit_OnKeyPressEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseKeyPressEvent(KRichTextEdit* self, QKeyEvent* event);
void KRichTextEdit_SetReadOnly(KRichTextEdit* self, bool readOnly);
void KRichTextEdit_OnSetReadOnly(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSetReadOnly(KRichTextEdit* self, bool readOnly);
void KRichTextEdit_SetCheckSpellingEnabled(KRichTextEdit* self, bool check);
void KRichTextEdit_OnSetCheckSpellingEnabled(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSetCheckSpellingEnabled(KRichTextEdit* self, bool check);
bool KRichTextEdit_CheckSpellingEnabled(const KRichTextEdit* self);
void KRichTextEdit_OnCheckSpellingEnabled(const KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseCheckSpellingEnabled(const KRichTextEdit* self);
bool KRichTextEdit_ShouldBlockBeSpellChecked(const KRichTextEdit* self, const libqt_string block);
void KRichTextEdit_OnShouldBlockBeSpellChecked(const KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseShouldBlockBeSpellChecked(const KRichTextEdit* self, const libqt_string block);
void KRichTextEdit_CreateHighlighter(KRichTextEdit* self);
void KRichTextEdit_OnCreateHighlighter(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseCreateHighlighter(KRichTextEdit* self);
QMenu* KRichTextEdit_MousePopupMenu(KRichTextEdit* self);
void KRichTextEdit_OnMousePopupMenu(KRichTextEdit* self, intptr_t slot);
QMenu* KRichTextEdit_QBaseMousePopupMenu(KRichTextEdit* self);
bool KRichTextEdit_Event(KRichTextEdit* self, QEvent* param1);
void KRichTextEdit_OnEvent(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseEvent(KRichTextEdit* self, QEvent* param1);
void KRichTextEdit_FocusInEvent(KRichTextEdit* self, QFocusEvent* param1);
void KRichTextEdit_OnFocusInEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseFocusInEvent(KRichTextEdit* self, QFocusEvent* param1);
void KRichTextEdit_DeleteWordBack(KRichTextEdit* self);
void KRichTextEdit_OnDeleteWordBack(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDeleteWordBack(KRichTextEdit* self);
void KRichTextEdit_DeleteWordForward(KRichTextEdit* self);
void KRichTextEdit_OnDeleteWordForward(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDeleteWordForward(KRichTextEdit* self);
void KRichTextEdit_ContextMenuEvent(KRichTextEdit* self, QContextMenuEvent* param1);
void KRichTextEdit_OnContextMenuEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseContextMenuEvent(KRichTextEdit* self, QContextMenuEvent* param1);
QVariant* KRichTextEdit_LoadResource(KRichTextEdit* self, int typeVal, const QUrl* name);
void KRichTextEdit_OnLoadResource(KRichTextEdit* self, intptr_t slot);
QVariant* KRichTextEdit_QBaseLoadResource(KRichTextEdit* self, int typeVal, const QUrl* name);
QVariant* KRichTextEdit_InputMethodQuery(const KRichTextEdit* self, int property);
void KRichTextEdit_OnInputMethodQuery(const KRichTextEdit* self, intptr_t slot);
QVariant* KRichTextEdit_QBaseInputMethodQuery(const KRichTextEdit* self, int property);
void KRichTextEdit_TimerEvent(KRichTextEdit* self, QTimerEvent* e);
void KRichTextEdit_OnTimerEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseTimerEvent(KRichTextEdit* self, QTimerEvent* e);
void KRichTextEdit_KeyReleaseEvent(KRichTextEdit* self, QKeyEvent* e);
void KRichTextEdit_OnKeyReleaseEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseKeyReleaseEvent(KRichTextEdit* self, QKeyEvent* e);
void KRichTextEdit_ResizeEvent(KRichTextEdit* self, QResizeEvent* e);
void KRichTextEdit_OnResizeEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseResizeEvent(KRichTextEdit* self, QResizeEvent* e);
void KRichTextEdit_PaintEvent(KRichTextEdit* self, QPaintEvent* e);
void KRichTextEdit_OnPaintEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBasePaintEvent(KRichTextEdit* self, QPaintEvent* e);
void KRichTextEdit_MousePressEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_OnMousePressEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseMousePressEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_MouseMoveEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_OnMouseMoveEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseMouseMoveEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_MouseReleaseEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_OnMouseReleaseEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseMouseReleaseEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_MouseDoubleClickEvent(KRichTextEdit* self, QMouseEvent* e);
void KRichTextEdit_OnMouseDoubleClickEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseMouseDoubleClickEvent(KRichTextEdit* self, QMouseEvent* e);
bool KRichTextEdit_FocusNextPrevChild(KRichTextEdit* self, bool next);
void KRichTextEdit_OnFocusNextPrevChild(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseFocusNextPrevChild(KRichTextEdit* self, bool next);
void KRichTextEdit_DragEnterEvent(KRichTextEdit* self, QDragEnterEvent* e);
void KRichTextEdit_OnDragEnterEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDragEnterEvent(KRichTextEdit* self, QDragEnterEvent* e);
void KRichTextEdit_DragLeaveEvent(KRichTextEdit* self, QDragLeaveEvent* e);
void KRichTextEdit_OnDragLeaveEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDragLeaveEvent(KRichTextEdit* self, QDragLeaveEvent* e);
void KRichTextEdit_DragMoveEvent(KRichTextEdit* self, QDragMoveEvent* e);
void KRichTextEdit_OnDragMoveEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDragMoveEvent(KRichTextEdit* self, QDragMoveEvent* e);
void KRichTextEdit_DropEvent(KRichTextEdit* self, QDropEvent* e);
void KRichTextEdit_OnDropEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDropEvent(KRichTextEdit* self, QDropEvent* e);
void KRichTextEdit_FocusOutEvent(KRichTextEdit* self, QFocusEvent* e);
void KRichTextEdit_OnFocusOutEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseFocusOutEvent(KRichTextEdit* self, QFocusEvent* e);
void KRichTextEdit_ShowEvent(KRichTextEdit* self, QShowEvent* param1);
void KRichTextEdit_OnShowEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseShowEvent(KRichTextEdit* self, QShowEvent* param1);
void KRichTextEdit_ChangeEvent(KRichTextEdit* self, QEvent* e);
void KRichTextEdit_OnChangeEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseChangeEvent(KRichTextEdit* self, QEvent* e);
void KRichTextEdit_WheelEvent(KRichTextEdit* self, QWheelEvent* e);
void KRichTextEdit_OnWheelEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseWheelEvent(KRichTextEdit* self, QWheelEvent* e);
QMimeData* KRichTextEdit_CreateMimeDataFromSelection(const KRichTextEdit* self);
void KRichTextEdit_OnCreateMimeDataFromSelection(const KRichTextEdit* self, intptr_t slot);
QMimeData* KRichTextEdit_QBaseCreateMimeDataFromSelection(const KRichTextEdit* self);
bool KRichTextEdit_CanInsertFromMimeData(const KRichTextEdit* self, const QMimeData* source);
void KRichTextEdit_OnCanInsertFromMimeData(const KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseCanInsertFromMimeData(const KRichTextEdit* self, const QMimeData* source);
void KRichTextEdit_InsertFromMimeData(KRichTextEdit* self, const QMimeData* source);
void KRichTextEdit_OnInsertFromMimeData(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseInsertFromMimeData(KRichTextEdit* self, const QMimeData* source);
void KRichTextEdit_InputMethodEvent(KRichTextEdit* self, QInputMethodEvent* param1);
void KRichTextEdit_OnInputMethodEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseInputMethodEvent(KRichTextEdit* self, QInputMethodEvent* param1);
void KRichTextEdit_ScrollContentsBy(KRichTextEdit* self, int dx, int dy);
void KRichTextEdit_OnScrollContentsBy(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseScrollContentsBy(KRichTextEdit* self, int dx, int dy);
void KRichTextEdit_DoSetTextCursor(KRichTextEdit* self, const QTextCursor* cursor);
void KRichTextEdit_OnDoSetTextCursor(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDoSetTextCursor(KRichTextEdit* self, const QTextCursor* cursor);
QSize* KRichTextEdit_MinimumSizeHint(const KRichTextEdit* self);
void KRichTextEdit_OnMinimumSizeHint(const KRichTextEdit* self, intptr_t slot);
QSize* KRichTextEdit_QBaseMinimumSizeHint(const KRichTextEdit* self);
QSize* KRichTextEdit_SizeHint(const KRichTextEdit* self);
void KRichTextEdit_OnSizeHint(const KRichTextEdit* self, intptr_t slot);
QSize* KRichTextEdit_QBaseSizeHint(const KRichTextEdit* self);
void KRichTextEdit_SetupViewport(KRichTextEdit* self, QWidget* viewport);
void KRichTextEdit_OnSetupViewport(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSetupViewport(KRichTextEdit* self, QWidget* viewport);
bool KRichTextEdit_EventFilter(KRichTextEdit* self, QObject* param1, QEvent* param2);
void KRichTextEdit_OnEventFilter(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseEventFilter(KRichTextEdit* self, QObject* param1, QEvent* param2);
bool KRichTextEdit_ViewportEvent(KRichTextEdit* self, QEvent* param1);
void KRichTextEdit_OnViewportEvent(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseViewportEvent(KRichTextEdit* self, QEvent* param1);
QSize* KRichTextEdit_ViewportSizeHint(const KRichTextEdit* self);
void KRichTextEdit_OnViewportSizeHint(const KRichTextEdit* self, intptr_t slot);
QSize* KRichTextEdit_QBaseViewportSizeHint(const KRichTextEdit* self);
void KRichTextEdit_InitStyleOption(const KRichTextEdit* self, QStyleOptionFrame* option);
void KRichTextEdit_OnInitStyleOption(const KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseInitStyleOption(const KRichTextEdit* self, QStyleOptionFrame* option);
int KRichTextEdit_DevType(const KRichTextEdit* self);
void KRichTextEdit_OnDevType(const KRichTextEdit* self, intptr_t slot);
int KRichTextEdit_QBaseDevType(const KRichTextEdit* self);
void KRichTextEdit_SetVisible(KRichTextEdit* self, bool visible);
void KRichTextEdit_OnSetVisible(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSetVisible(KRichTextEdit* self, bool visible);
int KRichTextEdit_HeightForWidth(const KRichTextEdit* self, int param1);
void KRichTextEdit_OnHeightForWidth(const KRichTextEdit* self, intptr_t slot);
int KRichTextEdit_QBaseHeightForWidth(const KRichTextEdit* self, int param1);
bool KRichTextEdit_HasHeightForWidth(const KRichTextEdit* self);
void KRichTextEdit_OnHasHeightForWidth(const KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseHasHeightForWidth(const KRichTextEdit* self);
QPaintEngine* KRichTextEdit_PaintEngine(const KRichTextEdit* self);
void KRichTextEdit_OnPaintEngine(const KRichTextEdit* self, intptr_t slot);
QPaintEngine* KRichTextEdit_QBasePaintEngine(const KRichTextEdit* self);
void KRichTextEdit_EnterEvent(KRichTextEdit* self, QEnterEvent* event);
void KRichTextEdit_OnEnterEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseEnterEvent(KRichTextEdit* self, QEnterEvent* event);
void KRichTextEdit_LeaveEvent(KRichTextEdit* self, QEvent* event);
void KRichTextEdit_OnLeaveEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseLeaveEvent(KRichTextEdit* self, QEvent* event);
void KRichTextEdit_MoveEvent(KRichTextEdit* self, QMoveEvent* event);
void KRichTextEdit_OnMoveEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseMoveEvent(KRichTextEdit* self, QMoveEvent* event);
void KRichTextEdit_CloseEvent(KRichTextEdit* self, QCloseEvent* event);
void KRichTextEdit_OnCloseEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseCloseEvent(KRichTextEdit* self, QCloseEvent* event);
void KRichTextEdit_TabletEvent(KRichTextEdit* self, QTabletEvent* event);
void KRichTextEdit_OnTabletEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseTabletEvent(KRichTextEdit* self, QTabletEvent* event);
void KRichTextEdit_ActionEvent(KRichTextEdit* self, QActionEvent* event);
void KRichTextEdit_OnActionEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseActionEvent(KRichTextEdit* self, QActionEvent* event);
void KRichTextEdit_HideEvent(KRichTextEdit* self, QHideEvent* event);
void KRichTextEdit_OnHideEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseHideEvent(KRichTextEdit* self, QHideEvent* event);
bool KRichTextEdit_NativeEvent(KRichTextEdit* self, const libqt_string eventType, void* message, intptr_t* result);
void KRichTextEdit_OnNativeEvent(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseNativeEvent(KRichTextEdit* self, const libqt_string eventType, void* message, intptr_t* result);
int KRichTextEdit_Metric(const KRichTextEdit* self, int param1);
void KRichTextEdit_OnMetric(const KRichTextEdit* self, intptr_t slot);
int KRichTextEdit_QBaseMetric(const KRichTextEdit* self, int param1);
void KRichTextEdit_InitPainter(const KRichTextEdit* self, QPainter* painter);
void KRichTextEdit_OnInitPainter(const KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseInitPainter(const KRichTextEdit* self, QPainter* painter);
QPaintDevice* KRichTextEdit_Redirected(const KRichTextEdit* self, QPoint* offset);
void KRichTextEdit_OnRedirected(const KRichTextEdit* self, intptr_t slot);
QPaintDevice* KRichTextEdit_QBaseRedirected(const KRichTextEdit* self, QPoint* offset);
QPainter* KRichTextEdit_SharedPainter(const KRichTextEdit* self);
void KRichTextEdit_OnSharedPainter(const KRichTextEdit* self, intptr_t slot);
QPainter* KRichTextEdit_QBaseSharedPainter(const KRichTextEdit* self);
void KRichTextEdit_ChildEvent(KRichTextEdit* self, QChildEvent* event);
void KRichTextEdit_OnChildEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseChildEvent(KRichTextEdit* self, QChildEvent* event);
void KRichTextEdit_CustomEvent(KRichTextEdit* self, QEvent* event);
void KRichTextEdit_OnCustomEvent(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseCustomEvent(KRichTextEdit* self, QEvent* event);
void KRichTextEdit_ConnectNotify(KRichTextEdit* self, const QMetaMethod* signal);
void KRichTextEdit_OnConnectNotify(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseConnectNotify(KRichTextEdit* self, const QMetaMethod* signal);
void KRichTextEdit_DisconnectNotify(KRichTextEdit* self, const QMetaMethod* signal);
void KRichTextEdit_OnDisconnectNotify(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDisconnectNotify(KRichTextEdit* self, const QMetaMethod* signal);
void KRichTextEdit_SlotDoReplace(KRichTextEdit* self);
void KRichTextEdit_OnSlotDoReplace(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotDoReplace(KRichTextEdit* self);
void KRichTextEdit_SlotReplaceNext(KRichTextEdit* self);
void KRichTextEdit_OnSlotReplaceNext(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotReplaceNext(KRichTextEdit* self);
void KRichTextEdit_SlotDoFind(KRichTextEdit* self);
void KRichTextEdit_OnSlotDoFind(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotDoFind(KRichTextEdit* self);
void KRichTextEdit_SlotFind(KRichTextEdit* self);
void KRichTextEdit_OnSlotFind(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotFind(KRichTextEdit* self);
void KRichTextEdit_SlotFindNext(KRichTextEdit* self);
void KRichTextEdit_OnSlotFindNext(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotFindNext(KRichTextEdit* self);
void KRichTextEdit_SlotFindPrevious(KRichTextEdit* self);
void KRichTextEdit_OnSlotFindPrevious(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotFindPrevious(KRichTextEdit* self);
void KRichTextEdit_SlotReplace(KRichTextEdit* self);
void KRichTextEdit_OnSlotReplace(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotReplace(KRichTextEdit* self);
void KRichTextEdit_SlotSpeakText(KRichTextEdit* self);
void KRichTextEdit_OnSlotSpeakText(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSlotSpeakText(KRichTextEdit* self);
void KRichTextEdit_ZoomInF(KRichTextEdit* self, float range);
void KRichTextEdit_OnZoomInF(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseZoomInF(KRichTextEdit* self, float range);
void KRichTextEdit_SetViewportMargins(KRichTextEdit* self, int left, int top, int right, int bottom);
void KRichTextEdit_OnSetViewportMargins(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseSetViewportMargins(KRichTextEdit* self, int left, int top, int right, int bottom);
QMargins* KRichTextEdit_ViewportMargins(const KRichTextEdit* self);
void KRichTextEdit_OnViewportMargins(const KRichTextEdit* self, intptr_t slot);
QMargins* KRichTextEdit_QBaseViewportMargins(const KRichTextEdit* self);
void KRichTextEdit_DrawFrame(KRichTextEdit* self, QPainter* param1);
void KRichTextEdit_OnDrawFrame(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDrawFrame(KRichTextEdit* self, QPainter* param1);
void KRichTextEdit_UpdateMicroFocus(KRichTextEdit* self);
void KRichTextEdit_OnUpdateMicroFocus(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseUpdateMicroFocus(KRichTextEdit* self);
void KRichTextEdit_Create(KRichTextEdit* self);
void KRichTextEdit_OnCreate(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseCreate(KRichTextEdit* self);
void KRichTextEdit_Destroy(KRichTextEdit* self);
void KRichTextEdit_OnDestroy(KRichTextEdit* self, intptr_t slot);
void KRichTextEdit_QBaseDestroy(KRichTextEdit* self);
bool KRichTextEdit_FocusNextChild(KRichTextEdit* self);
void KRichTextEdit_OnFocusNextChild(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseFocusNextChild(KRichTextEdit* self);
bool KRichTextEdit_FocusPreviousChild(KRichTextEdit* self);
void KRichTextEdit_OnFocusPreviousChild(KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseFocusPreviousChild(KRichTextEdit* self);
QObject* KRichTextEdit_Sender(const KRichTextEdit* self);
void KRichTextEdit_OnSender(const KRichTextEdit* self, intptr_t slot);
QObject* KRichTextEdit_QBaseSender(const KRichTextEdit* self);
int KRichTextEdit_SenderSignalIndex(const KRichTextEdit* self);
void KRichTextEdit_OnSenderSignalIndex(const KRichTextEdit* self, intptr_t slot);
int KRichTextEdit_QBaseSenderSignalIndex(const KRichTextEdit* self);
int KRichTextEdit_Receivers(const KRichTextEdit* self, const char* signal);
void KRichTextEdit_OnReceivers(const KRichTextEdit* self, intptr_t slot);
int KRichTextEdit_QBaseReceivers(const KRichTextEdit* self, const char* signal);
bool KRichTextEdit_IsSignalConnected(const KRichTextEdit* self, const QMetaMethod* signal);
void KRichTextEdit_OnIsSignalConnected(const KRichTextEdit* self, intptr_t slot);
bool KRichTextEdit_QBaseIsSignalConnected(const KRichTextEdit* self, const QMetaMethod* signal);
double KRichTextEdit_GetDecodedMetricF(const KRichTextEdit* self, int metricA, int metricB);
void KRichTextEdit_OnGetDecodedMetricF(const KRichTextEdit* self, intptr_t slot);
double KRichTextEdit_QBaseGetDecodedMetricF(const KRichTextEdit* self, int metricA, int metricB);
void KRichTextEdit_Delete(KRichTextEdit* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
