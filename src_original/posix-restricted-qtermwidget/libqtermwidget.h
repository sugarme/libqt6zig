#pragma once
#ifndef SRC_POSIX_RESTRICTED_QTERMWIDGETC_LIBQTERMWIDGET_H
#define SRC_POSIX_RESTRICTED_QTERMWIDGETC_LIBQTERMWIDGET_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#if defined(WORKAROUND_INNER_CLASS_DEFINITION_Konsole__Filter__HotSpot)
typedef Konsole::Filter::HotSpot Konsole__Filter__HotSpot;
#endif
#else
typedef struct Konsole__Filter__HotSpot Konsole__Filter__HotSpot;
typedef struct QAction QAction;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QHideEvent QHideEvent;
typedef struct QIODevice QIODevice;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTermWidget QTermWidget;
typedef struct QTermWidgetInterface QTermWidgetInterface;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QTermWidget* QTermWidget_new(QWidget* parent);
QTermWidget* QTermWidget_new2(int startnow);
QTermWidget* QTermWidget_new3();
QTermWidget* QTermWidget_new4(int startnow, QWidget* parent);
QMetaObject* QTermWidget_MetaObject(const QTermWidget* self);
void* QTermWidget_Metacast(QTermWidget* self, const char* param1);
int QTermWidget_Metacall(QTermWidget* self, int param1, int param2, void** param3);
libqt_string QTermWidget_Tr(const char* s);
QSize* QTermWidget_SizeHint(const QTermWidget* self);
void QTermWidget_SetTerminalSizeHint(QTermWidget* self, bool enabled);
bool QTermWidget_TerminalSizeHint(QTermWidget* self);
void QTermWidget_StartShellProgram(QTermWidget* self);
void QTermWidget_StartTerminalTeletype(QTermWidget* self);
int QTermWidget_GetShellPID(QTermWidget* self);
int QTermWidget_GetForegroundProcessId(QTermWidget* self);
void QTermWidget_ChangeDir(QTermWidget* self, const libqt_string dir);
void QTermWidget_SetTerminalFont(QTermWidget* self, const QFont* font);
QFont* QTermWidget_GetTerminalFont(QTermWidget* self);
void QTermWidget_SetTerminalOpacity(QTermWidget* self, double level);
void QTermWidget_SetTerminalBackgroundImage(QTermWidget* self, const libqt_string backgroundImage);
void QTermWidget_SetTerminalBackgroundMode(QTermWidget* self, int mode);
void QTermWidget_SetEnvironment(QTermWidget* self, const libqt_list /* of libqt_string */ environment);
void QTermWidget_SetShellProgram(QTermWidget* self, const libqt_string program);
void QTermWidget_SetWorkingDirectory(QTermWidget* self, const libqt_string dir);
libqt_string QTermWidget_WorkingDirectory(QTermWidget* self);
void QTermWidget_SetArgs(QTermWidget* self, const libqt_list /* of libqt_string */ args);
void QTermWidget_SetColorScheme(QTermWidget* self, const libqt_string name);
libqt_list /* of libqt_string */ QTermWidget_GetAvailableColorSchemes(QTermWidget* self);
libqt_list /* of libqt_string */ QTermWidget_AvailableColorSchemes();
void QTermWidget_AddCustomColorSchemeDir(const libqt_string custom_dir);
void QTermWidget_SetHistorySize(QTermWidget* self, int lines);
int QTermWidget_HistorySize(const QTermWidget* self);
void QTermWidget_SetScrollBarPosition(QTermWidget* self, int scrollBarPosition);
void QTermWidget_ScrollToEnd(QTermWidget* self);
void QTermWidget_SendText(QTermWidget* self, const libqt_string text);
void QTermWidget_SendKeyEvent(QTermWidget* self, QKeyEvent* e);
void QTermWidget_SetFlowControlEnabled(QTermWidget* self, bool enabled);
bool QTermWidget_FlowControlEnabled(QTermWidget* self);
void QTermWidget_SetFlowControlWarningEnabled(QTermWidget* self, bool enabled);
libqt_list /* of libqt_string */ QTermWidget_AvailableKeyBindings();
libqt_string QTermWidget_KeyBindings(QTermWidget* self);
void QTermWidget_SetMotionAfterPasting(QTermWidget* self, int motionAfterPasting);
int QTermWidget_HistoryLinesCount(QTermWidget* self);
int QTermWidget_ScreenColumnsCount(QTermWidget* self);
int QTermWidget_ScreenLinesCount(QTermWidget* self);
void QTermWidget_SetSelectionStart(QTermWidget* self, int row, int column);
void QTermWidget_SetSelectionEnd(QTermWidget* self, int row, int column);
void QTermWidget_GetSelectionStart(QTermWidget* self, int* row, int* column);
void QTermWidget_GetSelectionEnd(QTermWidget* self, int* row, int* column);
libqt_string QTermWidget_SelectedText(QTermWidget* self, bool preserveLineBreaks);
void QTermWidget_SetMonitorActivity(QTermWidget* self, bool monitorActivity);
void QTermWidget_SetMonitorSilence(QTermWidget* self, bool monitorSilence);
void QTermWidget_SetSilenceTimeout(QTermWidget* self, int seconds);
Konsole__Filter__HotSpot* QTermWidget_GetHotSpotAt(const QTermWidget* self, const QPoint* pos);
Konsole__Filter__HotSpot* QTermWidget_GetHotSpotAt2(const QTermWidget* self, int row, int column);
libqt_list /* of QAction* */ QTermWidget_FilterActions(QTermWidget* self, const QPoint* position);
int QTermWidget_GetPtySlaveFd(const QTermWidget* self);
void QTermWidget_SetKeyboardCursorShape(QTermWidget* self, int shape);
void QTermWidget_SetBlinkingCursor(QTermWidget* self, bool blink);
void QTermWidget_SetBidiEnabled(QTermWidget* self, bool enabled);
bool QTermWidget_IsBidiEnabled(QTermWidget* self);
void QTermWidget_SetAutoClose(QTermWidget* self, bool autoClose);
libqt_string QTermWidget_Title(const QTermWidget* self);
libqt_string QTermWidget_Icon(const QTermWidget* self);
bool QTermWidget_IsTitleChanged(const QTermWidget* self);
void QTermWidget_BracketText(QTermWidget* self, libqt_string text);
void QTermWidget_DisableBracketedPasteMode(QTermWidget* self, bool disable);
bool QTermWidget_BracketedPasteModeIsDisabled(const QTermWidget* self);
void QTermWidget_SetMargin(QTermWidget* self, int margin);
int QTermWidget_GetMargin(const QTermWidget* self);
void QTermWidget_SetDrawLineChars(QTermWidget* self, bool drawLineChars);
void QTermWidget_SetBoldIntense(QTermWidget* self, bool boldIntense);
void QTermWidget_SetConfirmMultilinePaste(QTermWidget* self, bool confirmMultilinePaste);
void QTermWidget_SetTrimPastedTrailingNewlines(QTermWidget* self, bool trimPastedTrailingNewlines);
libqt_string QTermWidget_WordCharacters(const QTermWidget* self);
void QTermWidget_SetWordCharacters(QTermWidget* self, const libqt_string chars);
QTermWidgetInterface* QTermWidget_CreateWidget(const QTermWidget* self, int startnow);
void QTermWidget_Finished(QTermWidget* self);
void QTermWidget_Connect_Finished(QTermWidget* self, intptr_t slot);
void QTermWidget_CopyAvailable(QTermWidget* self, bool param1);
void QTermWidget_Connect_CopyAvailable(QTermWidget* self, intptr_t slot);
void QTermWidget_TermGetFocus(QTermWidget* self);
void QTermWidget_Connect_TermGetFocus(QTermWidget* self, intptr_t slot);
void QTermWidget_TermLostFocus(QTermWidget* self);
void QTermWidget_Connect_TermLostFocus(QTermWidget* self, intptr_t slot);
void QTermWidget_TermKeyPressed(QTermWidget* self, QKeyEvent* param1);
void QTermWidget_Connect_TermKeyPressed(QTermWidget* self, intptr_t slot);
void QTermWidget_UrlActivated(QTermWidget* self, const QUrl* param1, bool fromContextMenu);
void QTermWidget_Connect_UrlActivated(QTermWidget* self, intptr_t slot);
void QTermWidget_Bell(QTermWidget* self, const libqt_string message);
void QTermWidget_Connect_Bell(QTermWidget* self, intptr_t slot);
void QTermWidget_Activity(QTermWidget* self);
void QTermWidget_Connect_Activity(QTermWidget* self, intptr_t slot);
void QTermWidget_Silence(QTermWidget* self);
void QTermWidget_Connect_Silence(QTermWidget* self, intptr_t slot);
void QTermWidget_SendData(QTermWidget* self, const char* param1, int param2);
void QTermWidget_Connect_SendData(QTermWidget* self, intptr_t slot);
void QTermWidget_ProfileChanged(QTermWidget* self, const libqt_string profile);
void QTermWidget_Connect_ProfileChanged(QTermWidget* self, intptr_t slot);
void QTermWidget_TitleChanged(QTermWidget* self);
void QTermWidget_Connect_TitleChanged(QTermWidget* self, intptr_t slot);
void QTermWidget_ReceivedData(QTermWidget* self, const libqt_string text);
void QTermWidget_Connect_ReceivedData(QTermWidget* self, intptr_t slot);
void QTermWidget_CopyClipboard(QTermWidget* self);
void QTermWidget_PasteClipboard(QTermWidget* self);
void QTermWidget_PasteSelection(QTermWidget* self);
void QTermWidget_ZoomIn(QTermWidget* self);
void QTermWidget_ZoomOut(QTermWidget* self);
void QTermWidget_SetSize(QTermWidget* self, const QSize* size);
void QTermWidget_SetKeyBindings(QTermWidget* self, const libqt_string kb);
void QTermWidget_Clear(QTermWidget* self);
void QTermWidget_ToggleShowSearchBar(QTermWidget* self);
void QTermWidget_SaveHistory(QTermWidget* self, QIODevice* device);
void QTermWidget_ResizeEvent(QTermWidget* self, QResizeEvent* param1);
libqt_string QTermWidget_Tr2(const char* s, const char* c);
libqt_string QTermWidget_Tr3(const char* s, const char* c, int n);
void QTermWidget_OnMetacall(QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseMetacall(QTermWidget* self, int param1, int param2, void** param3);
void QTermWidget_OnSizeHint(const QTermWidget* self, intptr_t slot);
QSize* QTermWidget_QBaseSizeHint(const QTermWidget* self);
void QTermWidget_OnSetTerminalSizeHint(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetTerminalSizeHint(QTermWidget* self, bool enabled);
void QTermWidget_OnTerminalSizeHint(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseTerminalSizeHint(QTermWidget* self);
void QTermWidget_OnStartShellProgram(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseStartShellProgram(QTermWidget* self);
void QTermWidget_OnStartTerminalTeletype(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseStartTerminalTeletype(QTermWidget* self);
void QTermWidget_OnGetShellPID(QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseGetShellPID(QTermWidget* self);
void QTermWidget_OnGetForegroundProcessId(QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseGetForegroundProcessId(QTermWidget* self);
void QTermWidget_OnChangeDir(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseChangeDir(QTermWidget* self, const libqt_string dir);
void QTermWidget_OnSetTerminalFont(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetTerminalFont(QTermWidget* self, const QFont* font);
void QTermWidget_OnGetTerminalFont(QTermWidget* self, intptr_t slot);
QFont* QTermWidget_QBaseGetTerminalFont(QTermWidget* self);
void QTermWidget_OnSetTerminalOpacity(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetTerminalOpacity(QTermWidget* self, double level);
void QTermWidget_OnSetTerminalBackgroundImage(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetTerminalBackgroundImage(QTermWidget* self, const libqt_string backgroundImage);
void QTermWidget_OnSetTerminalBackgroundMode(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetTerminalBackgroundMode(QTermWidget* self, int mode);
void QTermWidget_OnSetEnvironment(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetEnvironment(QTermWidget* self, const libqt_list /* of libqt_string */ environment);
void QTermWidget_OnSetShellProgram(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetShellProgram(QTermWidget* self, const libqt_string program);
void QTermWidget_OnSetWorkingDirectory(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetWorkingDirectory(QTermWidget* self, const libqt_string dir);
void QTermWidget_OnWorkingDirectory(QTermWidget* self, intptr_t slot);
libqt_string QTermWidget_QBaseWorkingDirectory(QTermWidget* self);
void QTermWidget_OnSetArgs(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetArgs(QTermWidget* self, const libqt_list /* of libqt_string */ args);
void QTermWidget_OnSetColorScheme(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetColorScheme(QTermWidget* self, const libqt_string name);
void QTermWidget_OnGetAvailableColorSchemes(QTermWidget* self, intptr_t slot);
libqt_list /* of libqt_string */ QTermWidget_QBaseGetAvailableColorSchemes(QTermWidget* self);
void QTermWidget_OnSetHistorySize(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetHistorySize(QTermWidget* self, int lines);
void QTermWidget_OnHistorySize(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseHistorySize(const QTermWidget* self);
void QTermWidget_OnSetScrollBarPosition(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetScrollBarPosition(QTermWidget* self, int scrollBarPosition);
void QTermWidget_OnScrollToEnd(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseScrollToEnd(QTermWidget* self);
void QTermWidget_OnSendText(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSendText(QTermWidget* self, const libqt_string text);
void QTermWidget_OnSendKeyEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSendKeyEvent(QTermWidget* self, QKeyEvent* e);
void QTermWidget_OnSetFlowControlEnabled(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetFlowControlEnabled(QTermWidget* self, bool enabled);
void QTermWidget_OnFlowControlEnabled(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseFlowControlEnabled(QTermWidget* self);
void QTermWidget_OnSetFlowControlWarningEnabled(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetFlowControlWarningEnabled(QTermWidget* self, bool enabled);
void QTermWidget_OnKeyBindings(QTermWidget* self, intptr_t slot);
libqt_string QTermWidget_QBaseKeyBindings(QTermWidget* self);
void QTermWidget_OnSetMotionAfterPasting(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetMotionAfterPasting(QTermWidget* self, int motionAfterPasting);
void QTermWidget_OnHistoryLinesCount(QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseHistoryLinesCount(QTermWidget* self);
void QTermWidget_OnScreenColumnsCount(QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseScreenColumnsCount(QTermWidget* self);
void QTermWidget_OnScreenLinesCount(QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseScreenLinesCount(QTermWidget* self);
void QTermWidget_OnSetSelectionStart(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetSelectionStart(QTermWidget* self, int row, int column);
void QTermWidget_OnSetSelectionEnd(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetSelectionEnd(QTermWidget* self, int row, int column);
void QTermWidget_OnGetSelectionStart(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseGetSelectionStart(QTermWidget* self, int* row, int* column);
void QTermWidget_OnGetSelectionEnd(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseGetSelectionEnd(QTermWidget* self, int* row, int* column);
void QTermWidget_OnSelectedText(QTermWidget* self, intptr_t slot);
libqt_string QTermWidget_QBaseSelectedText(QTermWidget* self, bool preserveLineBreaks);
void QTermWidget_OnSetMonitorActivity(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetMonitorActivity(QTermWidget* self, bool monitorActivity);
void QTermWidget_OnSetMonitorSilence(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetMonitorSilence(QTermWidget* self, bool monitorSilence);
void QTermWidget_OnSetSilenceTimeout(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetSilenceTimeout(QTermWidget* self, int seconds);
void QTermWidget_OnFilterActions(QTermWidget* self, intptr_t slot);
libqt_list /* of QAction* */ QTermWidget_QBaseFilterActions(QTermWidget* self, const QPoint* position);
void QTermWidget_OnGetPtySlaveFd(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseGetPtySlaveFd(const QTermWidget* self);
void QTermWidget_OnSetBlinkingCursor(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetBlinkingCursor(QTermWidget* self, bool blink);
void QTermWidget_OnSetBidiEnabled(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetBidiEnabled(QTermWidget* self, bool enabled);
void QTermWidget_OnIsBidiEnabled(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseIsBidiEnabled(QTermWidget* self);
void QTermWidget_OnSetAutoClose(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetAutoClose(QTermWidget* self, bool autoClose);
void QTermWidget_OnTitle(const QTermWidget* self, intptr_t slot);
libqt_string QTermWidget_QBaseTitle(const QTermWidget* self);
void QTermWidget_OnIcon(const QTermWidget* self, intptr_t slot);
libqt_string QTermWidget_QBaseIcon(const QTermWidget* self);
void QTermWidget_OnIsTitleChanged(const QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseIsTitleChanged(const QTermWidget* self);
void QTermWidget_OnBracketText(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseBracketText(QTermWidget* self, libqt_string text);
void QTermWidget_OnDisableBracketedPasteMode(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDisableBracketedPasteMode(QTermWidget* self, bool disable);
void QTermWidget_OnBracketedPasteModeIsDisabled(const QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseBracketedPasteModeIsDisabled(const QTermWidget* self);
void QTermWidget_OnSetMargin(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetMargin(QTermWidget* self, int margin);
void QTermWidget_OnGetMargin(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseGetMargin(const QTermWidget* self);
void QTermWidget_OnSetDrawLineChars(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetDrawLineChars(QTermWidget* self, bool drawLineChars);
void QTermWidget_OnSetBoldIntense(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetBoldIntense(QTermWidget* self, bool boldIntense);
void QTermWidget_OnSetConfirmMultilinePaste(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetConfirmMultilinePaste(QTermWidget* self, bool confirmMultilinePaste);
void QTermWidget_OnSetTrimPastedTrailingNewlines(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetTrimPastedTrailingNewlines(QTermWidget* self, bool trimPastedTrailingNewlines);
void QTermWidget_OnWordCharacters(const QTermWidget* self, intptr_t slot);
libqt_string QTermWidget_QBaseWordCharacters(const QTermWidget* self);
void QTermWidget_OnSetWordCharacters(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetWordCharacters(QTermWidget* self, const libqt_string chars);
void QTermWidget_OnCreateWidget(const QTermWidget* self, intptr_t slot);
QTermWidgetInterface* QTermWidget_QBaseCreateWidget(const QTermWidget* self, int startnow);
void QTermWidget_OnResizeEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseResizeEvent(QTermWidget* self, QResizeEvent* param1);
int QTermWidget_DevType(const QTermWidget* self);
void QTermWidget_OnDevType(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseDevType(const QTermWidget* self);
void QTermWidget_SetVisible(QTermWidget* self, bool visible);
void QTermWidget_OnSetVisible(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSetVisible(QTermWidget* self, bool visible);
QSize* QTermWidget_MinimumSizeHint(const QTermWidget* self);
void QTermWidget_OnMinimumSizeHint(const QTermWidget* self, intptr_t slot);
QSize* QTermWidget_QBaseMinimumSizeHint(const QTermWidget* self);
int QTermWidget_HeightForWidth(const QTermWidget* self, int param1);
void QTermWidget_OnHeightForWidth(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseHeightForWidth(const QTermWidget* self, int param1);
bool QTermWidget_HasHeightForWidth(const QTermWidget* self);
void QTermWidget_OnHasHeightForWidth(const QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseHasHeightForWidth(const QTermWidget* self);
QPaintEngine* QTermWidget_PaintEngine(const QTermWidget* self);
void QTermWidget_OnPaintEngine(const QTermWidget* self, intptr_t slot);
QPaintEngine* QTermWidget_QBasePaintEngine(const QTermWidget* self);
bool QTermWidget_Event(QTermWidget* self, QEvent* event);
void QTermWidget_OnEvent(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseEvent(QTermWidget* self, QEvent* event);
void QTermWidget_MousePressEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_OnMousePressEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseMousePressEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_MouseReleaseEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_OnMouseReleaseEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseMouseReleaseEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_MouseDoubleClickEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_OnMouseDoubleClickEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseMouseDoubleClickEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_MouseMoveEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_OnMouseMoveEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseMouseMoveEvent(QTermWidget* self, QMouseEvent* event);
void QTermWidget_WheelEvent(QTermWidget* self, QWheelEvent* event);
void QTermWidget_OnWheelEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseWheelEvent(QTermWidget* self, QWheelEvent* event);
void QTermWidget_KeyPressEvent(QTermWidget* self, QKeyEvent* event);
void QTermWidget_OnKeyPressEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseKeyPressEvent(QTermWidget* self, QKeyEvent* event);
void QTermWidget_KeyReleaseEvent(QTermWidget* self, QKeyEvent* event);
void QTermWidget_OnKeyReleaseEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseKeyReleaseEvent(QTermWidget* self, QKeyEvent* event);
void QTermWidget_FocusInEvent(QTermWidget* self, QFocusEvent* event);
void QTermWidget_OnFocusInEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseFocusInEvent(QTermWidget* self, QFocusEvent* event);
void QTermWidget_FocusOutEvent(QTermWidget* self, QFocusEvent* event);
void QTermWidget_OnFocusOutEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseFocusOutEvent(QTermWidget* self, QFocusEvent* event);
void QTermWidget_EnterEvent(QTermWidget* self, QEnterEvent* event);
void QTermWidget_OnEnterEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseEnterEvent(QTermWidget* self, QEnterEvent* event);
void QTermWidget_LeaveEvent(QTermWidget* self, QEvent* event);
void QTermWidget_OnLeaveEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseLeaveEvent(QTermWidget* self, QEvent* event);
void QTermWidget_PaintEvent(QTermWidget* self, QPaintEvent* event);
void QTermWidget_OnPaintEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBasePaintEvent(QTermWidget* self, QPaintEvent* event);
void QTermWidget_MoveEvent(QTermWidget* self, QMoveEvent* event);
void QTermWidget_OnMoveEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseMoveEvent(QTermWidget* self, QMoveEvent* event);
void QTermWidget_CloseEvent(QTermWidget* self, QCloseEvent* event);
void QTermWidget_OnCloseEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseCloseEvent(QTermWidget* self, QCloseEvent* event);
void QTermWidget_ContextMenuEvent(QTermWidget* self, QContextMenuEvent* event);
void QTermWidget_OnContextMenuEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseContextMenuEvent(QTermWidget* self, QContextMenuEvent* event);
void QTermWidget_TabletEvent(QTermWidget* self, QTabletEvent* event);
void QTermWidget_OnTabletEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseTabletEvent(QTermWidget* self, QTabletEvent* event);
void QTermWidget_ActionEvent(QTermWidget* self, QActionEvent* event);
void QTermWidget_OnActionEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseActionEvent(QTermWidget* self, QActionEvent* event);
void QTermWidget_DragEnterEvent(QTermWidget* self, QDragEnterEvent* event);
void QTermWidget_OnDragEnterEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDragEnterEvent(QTermWidget* self, QDragEnterEvent* event);
void QTermWidget_DragMoveEvent(QTermWidget* self, QDragMoveEvent* event);
void QTermWidget_OnDragMoveEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDragMoveEvent(QTermWidget* self, QDragMoveEvent* event);
void QTermWidget_DragLeaveEvent(QTermWidget* self, QDragLeaveEvent* event);
void QTermWidget_OnDragLeaveEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDragLeaveEvent(QTermWidget* self, QDragLeaveEvent* event);
void QTermWidget_DropEvent(QTermWidget* self, QDropEvent* event);
void QTermWidget_OnDropEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDropEvent(QTermWidget* self, QDropEvent* event);
void QTermWidget_ShowEvent(QTermWidget* self, QShowEvent* event);
void QTermWidget_OnShowEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseShowEvent(QTermWidget* self, QShowEvent* event);
void QTermWidget_HideEvent(QTermWidget* self, QHideEvent* event);
void QTermWidget_OnHideEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseHideEvent(QTermWidget* self, QHideEvent* event);
bool QTermWidget_NativeEvent(QTermWidget* self, const libqt_string eventType, void* message, intptr_t* result);
void QTermWidget_OnNativeEvent(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseNativeEvent(QTermWidget* self, const libqt_string eventType, void* message, intptr_t* result);
void QTermWidget_ChangeEvent(QTermWidget* self, QEvent* param1);
void QTermWidget_OnChangeEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseChangeEvent(QTermWidget* self, QEvent* param1);
int QTermWidget_Metric(const QTermWidget* self, int param1);
void QTermWidget_OnMetric(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseMetric(const QTermWidget* self, int param1);
void QTermWidget_InitPainter(const QTermWidget* self, QPainter* painter);
void QTermWidget_OnInitPainter(const QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseInitPainter(const QTermWidget* self, QPainter* painter);
QPaintDevice* QTermWidget_Redirected(const QTermWidget* self, QPoint* offset);
void QTermWidget_OnRedirected(const QTermWidget* self, intptr_t slot);
QPaintDevice* QTermWidget_QBaseRedirected(const QTermWidget* self, QPoint* offset);
QPainter* QTermWidget_SharedPainter(const QTermWidget* self);
void QTermWidget_OnSharedPainter(const QTermWidget* self, intptr_t slot);
QPainter* QTermWidget_QBaseSharedPainter(const QTermWidget* self);
void QTermWidget_InputMethodEvent(QTermWidget* self, QInputMethodEvent* param1);
void QTermWidget_OnInputMethodEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseInputMethodEvent(QTermWidget* self, QInputMethodEvent* param1);
QVariant* QTermWidget_InputMethodQuery(const QTermWidget* self, int param1);
void QTermWidget_OnInputMethodQuery(const QTermWidget* self, intptr_t slot);
QVariant* QTermWidget_QBaseInputMethodQuery(const QTermWidget* self, int param1);
bool QTermWidget_FocusNextPrevChild(QTermWidget* self, bool next);
void QTermWidget_OnFocusNextPrevChild(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseFocusNextPrevChild(QTermWidget* self, bool next);
bool QTermWidget_EventFilter(QTermWidget* self, QObject* watched, QEvent* event);
void QTermWidget_OnEventFilter(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseEventFilter(QTermWidget* self, QObject* watched, QEvent* event);
void QTermWidget_TimerEvent(QTermWidget* self, QTimerEvent* event);
void QTermWidget_OnTimerEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseTimerEvent(QTermWidget* self, QTimerEvent* event);
void QTermWidget_ChildEvent(QTermWidget* self, QChildEvent* event);
void QTermWidget_OnChildEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseChildEvent(QTermWidget* self, QChildEvent* event);
void QTermWidget_CustomEvent(QTermWidget* self, QEvent* event);
void QTermWidget_OnCustomEvent(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseCustomEvent(QTermWidget* self, QEvent* event);
void QTermWidget_ConnectNotify(QTermWidget* self, const QMetaMethod* signal);
void QTermWidget_OnConnectNotify(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseConnectNotify(QTermWidget* self, const QMetaMethod* signal);
void QTermWidget_DisconnectNotify(QTermWidget* self, const QMetaMethod* signal);
void QTermWidget_OnDisconnectNotify(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDisconnectNotify(QTermWidget* self, const QMetaMethod* signal);
void QTermWidget_SessionFinished(QTermWidget* self);
void QTermWidget_OnSessionFinished(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSessionFinished(QTermWidget* self);
void QTermWidget_SelectionChanged(QTermWidget* self, bool textSelected);
void QTermWidget_OnSelectionChanged(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseSelectionChanged(QTermWidget* self, bool textSelected);
void QTermWidget_UpdateMicroFocus(QTermWidget* self);
void QTermWidget_OnUpdateMicroFocus(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseUpdateMicroFocus(QTermWidget* self);
void QTermWidget_Create(QTermWidget* self);
void QTermWidget_OnCreate(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseCreate(QTermWidget* self);
void QTermWidget_Destroy(QTermWidget* self);
void QTermWidget_OnDestroy(QTermWidget* self, intptr_t slot);
void QTermWidget_QBaseDestroy(QTermWidget* self);
bool QTermWidget_FocusNextChild(QTermWidget* self);
void QTermWidget_OnFocusNextChild(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseFocusNextChild(QTermWidget* self);
bool QTermWidget_FocusPreviousChild(QTermWidget* self);
void QTermWidget_OnFocusPreviousChild(QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseFocusPreviousChild(QTermWidget* self);
QObject* QTermWidget_Sender(const QTermWidget* self);
void QTermWidget_OnSender(const QTermWidget* self, intptr_t slot);
QObject* QTermWidget_QBaseSender(const QTermWidget* self);
int QTermWidget_SenderSignalIndex(const QTermWidget* self);
void QTermWidget_OnSenderSignalIndex(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseSenderSignalIndex(const QTermWidget* self);
int QTermWidget_Receivers(const QTermWidget* self, const char* signal);
void QTermWidget_OnReceivers(const QTermWidget* self, intptr_t slot);
int QTermWidget_QBaseReceivers(const QTermWidget* self, const char* signal);
bool QTermWidget_IsSignalConnected(const QTermWidget* self, const QMetaMethod* signal);
void QTermWidget_OnIsSignalConnected(const QTermWidget* self, intptr_t slot);
bool QTermWidget_QBaseIsSignalConnected(const QTermWidget* self, const QMetaMethod* signal);
double QTermWidget_GetDecodedMetricF(const QTermWidget* self, int metricA, int metricB);
void QTermWidget_OnGetDecodedMetricF(const QTermWidget* self, intptr_t slot);
double QTermWidget_QBaseGetDecodedMetricF(const QTermWidget* self, int metricA, int metricB);
void QTermWidget_Delete(QTermWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
