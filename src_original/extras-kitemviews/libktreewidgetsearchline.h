#pragma once
#ifndef SRC_EXTRAS_KITEMVIEWSC_LIBKTREEWIDGETSEARCHLINE_H
#define SRC_EXTRAS_KITEMVIEWSC_LIBKTREEWIDGETSEARCHLINE_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KTreeWidgetSearchLine KTreeWidgetSearchLine;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QLineEdit QLineEdit;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QTreeWidget QTreeWidget;
typedef struct QTreeWidgetItem QTreeWidgetItem;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KTreeWidgetSearchLine* KTreeWidgetSearchLine_new(QWidget* parent);
KTreeWidgetSearchLine* KTreeWidgetSearchLine_new2();
KTreeWidgetSearchLine* KTreeWidgetSearchLine_new3(QWidget* parent, const libqt_list /* of QTreeWidget* */ treeWidgets);
KTreeWidgetSearchLine* KTreeWidgetSearchLine_new4(QWidget* parent, QTreeWidget* treeWidget);
QMetaObject* KTreeWidgetSearchLine_MetaObject(const KTreeWidgetSearchLine* self);
void* KTreeWidgetSearchLine_Metacast(KTreeWidgetSearchLine* self, const char* param1);
int KTreeWidgetSearchLine_Metacall(KTreeWidgetSearchLine* self, int param1, int param2, void** param3);
libqt_string KTreeWidgetSearchLine_Tr(const char* s);
int KTreeWidgetSearchLine_CaseSensitivity(const KTreeWidgetSearchLine* self);
libqt_list /* of int */ KTreeWidgetSearchLine_SearchColumns(const KTreeWidgetSearchLine* self);
bool KTreeWidgetSearchLine_KeepParentsVisible(const KTreeWidgetSearchLine* self);
QTreeWidget* KTreeWidgetSearchLine_TreeWidget(const KTreeWidgetSearchLine* self);
libqt_list /* of QTreeWidget* */ KTreeWidgetSearchLine_TreeWidgets(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_HiddenChanged(KTreeWidgetSearchLine* self, QTreeWidgetItem* param1, bool param2);
void KTreeWidgetSearchLine_Connect_HiddenChanged(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_SearchUpdated(KTreeWidgetSearchLine* self, const libqt_string searchString);
void KTreeWidgetSearchLine_Connect_SearchUpdated(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_CaseSensitivityChanged(KTreeWidgetSearchLine* self, int caseSensitivity);
void KTreeWidgetSearchLine_Connect_CaseSensitivityChanged(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_KeepParentsVisibleChanged(KTreeWidgetSearchLine* self, bool keepParentsVisible);
void KTreeWidgetSearchLine_Connect_KeepParentsVisibleChanged(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_AddTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* treeWidget);
void KTreeWidgetSearchLine_RemoveTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* treeWidget);
void KTreeWidgetSearchLine_UpdateSearch(KTreeWidgetSearchLine* self, const libqt_string pattern);
void KTreeWidgetSearchLine_SetCaseSensitivity(KTreeWidgetSearchLine* self, int caseSensitivity);
void KTreeWidgetSearchLine_SetKeepParentsVisible(KTreeWidgetSearchLine* self, bool value);
void KTreeWidgetSearchLine_SetSearchColumns(KTreeWidgetSearchLine* self, const libqt_list /* of int */ columns);
void KTreeWidgetSearchLine_SetTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* treeWidget);
void KTreeWidgetSearchLine_SetTreeWidgets(KTreeWidgetSearchLine* self, const libqt_list /* of QTreeWidget* */ treeWidgets);
bool KTreeWidgetSearchLine_ItemMatches(const KTreeWidgetSearchLine* self, const QTreeWidgetItem* item, const libqt_string pattern);
void KTreeWidgetSearchLine_ContextMenuEvent(KTreeWidgetSearchLine* self, QContextMenuEvent* param1);
void KTreeWidgetSearchLine_UpdateSearch2(KTreeWidgetSearchLine* self, QTreeWidget* treeWidget);
void KTreeWidgetSearchLine_ConnectTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* param1);
void KTreeWidgetSearchLine_DisconnectTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* param1);
bool KTreeWidgetSearchLine_CanChooseColumnsCheck(KTreeWidgetSearchLine* self);
bool KTreeWidgetSearchLine_Event(KTreeWidgetSearchLine* self, QEvent* event);
libqt_string KTreeWidgetSearchLine_Tr2(const char* s, const char* c);
libqt_string KTreeWidgetSearchLine_Tr3(const char* s, const char* c, int n);
void KTreeWidgetSearchLine_OnMetacall(KTreeWidgetSearchLine* self, intptr_t slot);
int KTreeWidgetSearchLine_QBaseMetacall(KTreeWidgetSearchLine* self, int param1, int param2, void** param3);
void KTreeWidgetSearchLine_OnUpdateSearch(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseUpdateSearch(KTreeWidgetSearchLine* self, const libqt_string pattern);
void KTreeWidgetSearchLine_OnItemMatches(const KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseItemMatches(const KTreeWidgetSearchLine* self, const QTreeWidgetItem* item, const libqt_string pattern);
void KTreeWidgetSearchLine_OnContextMenuEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseContextMenuEvent(KTreeWidgetSearchLine* self, QContextMenuEvent* param1);
void KTreeWidgetSearchLine_OnUpdateSearch2(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseUpdateSearch2(KTreeWidgetSearchLine* self, QTreeWidget* treeWidget);
void KTreeWidgetSearchLine_OnConnectTreeWidget(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseConnectTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* param1);
void KTreeWidgetSearchLine_OnDisconnectTreeWidget(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDisconnectTreeWidget(KTreeWidgetSearchLine* self, QTreeWidget* param1);
void KTreeWidgetSearchLine_OnCanChooseColumnsCheck(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseCanChooseColumnsCheck(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnEvent(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseEvent(KTreeWidgetSearchLine* self, QEvent* event);
QSize* KTreeWidgetSearchLine_SizeHint(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnSizeHint(const KTreeWidgetSearchLine* self, intptr_t slot);
QSize* KTreeWidgetSearchLine_QBaseSizeHint(const KTreeWidgetSearchLine* self);
QSize* KTreeWidgetSearchLine_MinimumSizeHint(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnMinimumSizeHint(const KTreeWidgetSearchLine* self, intptr_t slot);
QSize* KTreeWidgetSearchLine_QBaseMinimumSizeHint(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_MousePressEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_OnMousePressEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseMousePressEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_MouseMoveEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_OnMouseMoveEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseMouseMoveEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_MouseReleaseEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_OnMouseReleaseEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseMouseReleaseEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_MouseDoubleClickEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_OnMouseDoubleClickEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseMouseDoubleClickEvent(KTreeWidgetSearchLine* self, QMouseEvent* param1);
void KTreeWidgetSearchLine_KeyPressEvent(KTreeWidgetSearchLine* self, QKeyEvent* param1);
void KTreeWidgetSearchLine_OnKeyPressEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseKeyPressEvent(KTreeWidgetSearchLine* self, QKeyEvent* param1);
void KTreeWidgetSearchLine_KeyReleaseEvent(KTreeWidgetSearchLine* self, QKeyEvent* param1);
void KTreeWidgetSearchLine_OnKeyReleaseEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseKeyReleaseEvent(KTreeWidgetSearchLine* self, QKeyEvent* param1);
void KTreeWidgetSearchLine_FocusInEvent(KTreeWidgetSearchLine* self, QFocusEvent* param1);
void KTreeWidgetSearchLine_OnFocusInEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseFocusInEvent(KTreeWidgetSearchLine* self, QFocusEvent* param1);
void KTreeWidgetSearchLine_FocusOutEvent(KTreeWidgetSearchLine* self, QFocusEvent* param1);
void KTreeWidgetSearchLine_OnFocusOutEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseFocusOutEvent(KTreeWidgetSearchLine* self, QFocusEvent* param1);
void KTreeWidgetSearchLine_PaintEvent(KTreeWidgetSearchLine* self, QPaintEvent* param1);
void KTreeWidgetSearchLine_OnPaintEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBasePaintEvent(KTreeWidgetSearchLine* self, QPaintEvent* param1);
void KTreeWidgetSearchLine_DragEnterEvent(KTreeWidgetSearchLine* self, QDragEnterEvent* param1);
void KTreeWidgetSearchLine_OnDragEnterEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDragEnterEvent(KTreeWidgetSearchLine* self, QDragEnterEvent* param1);
void KTreeWidgetSearchLine_DragMoveEvent(KTreeWidgetSearchLine* self, QDragMoveEvent* e);
void KTreeWidgetSearchLine_OnDragMoveEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDragMoveEvent(KTreeWidgetSearchLine* self, QDragMoveEvent* e);
void KTreeWidgetSearchLine_DragLeaveEvent(KTreeWidgetSearchLine* self, QDragLeaveEvent* e);
void KTreeWidgetSearchLine_OnDragLeaveEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDragLeaveEvent(KTreeWidgetSearchLine* self, QDragLeaveEvent* e);
void KTreeWidgetSearchLine_DropEvent(KTreeWidgetSearchLine* self, QDropEvent* param1);
void KTreeWidgetSearchLine_OnDropEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDropEvent(KTreeWidgetSearchLine* self, QDropEvent* param1);
void KTreeWidgetSearchLine_ChangeEvent(KTreeWidgetSearchLine* self, QEvent* param1);
void KTreeWidgetSearchLine_OnChangeEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseChangeEvent(KTreeWidgetSearchLine* self, QEvent* param1);
void KTreeWidgetSearchLine_InputMethodEvent(KTreeWidgetSearchLine* self, QInputMethodEvent* param1);
void KTreeWidgetSearchLine_OnInputMethodEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseInputMethodEvent(KTreeWidgetSearchLine* self, QInputMethodEvent* param1);
void KTreeWidgetSearchLine_InitStyleOption(const KTreeWidgetSearchLine* self, QStyleOptionFrame* option);
void KTreeWidgetSearchLine_OnInitStyleOption(const KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseInitStyleOption(const KTreeWidgetSearchLine* self, QStyleOptionFrame* option);
QVariant* KTreeWidgetSearchLine_InputMethodQuery(const KTreeWidgetSearchLine* self, int param1);
void KTreeWidgetSearchLine_OnInputMethodQuery(const KTreeWidgetSearchLine* self, intptr_t slot);
QVariant* KTreeWidgetSearchLine_QBaseInputMethodQuery(const KTreeWidgetSearchLine* self, int param1);
void KTreeWidgetSearchLine_TimerEvent(KTreeWidgetSearchLine* self, QTimerEvent* param1);
void KTreeWidgetSearchLine_OnTimerEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseTimerEvent(KTreeWidgetSearchLine* self, QTimerEvent* param1);
int KTreeWidgetSearchLine_DevType(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnDevType(const KTreeWidgetSearchLine* self, intptr_t slot);
int KTreeWidgetSearchLine_QBaseDevType(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_SetVisible(KTreeWidgetSearchLine* self, bool visible);
void KTreeWidgetSearchLine_OnSetVisible(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseSetVisible(KTreeWidgetSearchLine* self, bool visible);
int KTreeWidgetSearchLine_HeightForWidth(const KTreeWidgetSearchLine* self, int param1);
void KTreeWidgetSearchLine_OnHeightForWidth(const KTreeWidgetSearchLine* self, intptr_t slot);
int KTreeWidgetSearchLine_QBaseHeightForWidth(const KTreeWidgetSearchLine* self, int param1);
bool KTreeWidgetSearchLine_HasHeightForWidth(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnHasHeightForWidth(const KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseHasHeightForWidth(const KTreeWidgetSearchLine* self);
QPaintEngine* KTreeWidgetSearchLine_PaintEngine(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnPaintEngine(const KTreeWidgetSearchLine* self, intptr_t slot);
QPaintEngine* KTreeWidgetSearchLine_QBasePaintEngine(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_WheelEvent(KTreeWidgetSearchLine* self, QWheelEvent* event);
void KTreeWidgetSearchLine_OnWheelEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseWheelEvent(KTreeWidgetSearchLine* self, QWheelEvent* event);
void KTreeWidgetSearchLine_EnterEvent(KTreeWidgetSearchLine* self, QEnterEvent* event);
void KTreeWidgetSearchLine_OnEnterEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseEnterEvent(KTreeWidgetSearchLine* self, QEnterEvent* event);
void KTreeWidgetSearchLine_LeaveEvent(KTreeWidgetSearchLine* self, QEvent* event);
void KTreeWidgetSearchLine_OnLeaveEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseLeaveEvent(KTreeWidgetSearchLine* self, QEvent* event);
void KTreeWidgetSearchLine_MoveEvent(KTreeWidgetSearchLine* self, QMoveEvent* event);
void KTreeWidgetSearchLine_OnMoveEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseMoveEvent(KTreeWidgetSearchLine* self, QMoveEvent* event);
void KTreeWidgetSearchLine_ResizeEvent(KTreeWidgetSearchLine* self, QResizeEvent* event);
void KTreeWidgetSearchLine_OnResizeEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseResizeEvent(KTreeWidgetSearchLine* self, QResizeEvent* event);
void KTreeWidgetSearchLine_CloseEvent(KTreeWidgetSearchLine* self, QCloseEvent* event);
void KTreeWidgetSearchLine_OnCloseEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseCloseEvent(KTreeWidgetSearchLine* self, QCloseEvent* event);
void KTreeWidgetSearchLine_TabletEvent(KTreeWidgetSearchLine* self, QTabletEvent* event);
void KTreeWidgetSearchLine_OnTabletEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseTabletEvent(KTreeWidgetSearchLine* self, QTabletEvent* event);
void KTreeWidgetSearchLine_ActionEvent(KTreeWidgetSearchLine* self, QActionEvent* event);
void KTreeWidgetSearchLine_OnActionEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseActionEvent(KTreeWidgetSearchLine* self, QActionEvent* event);
void KTreeWidgetSearchLine_ShowEvent(KTreeWidgetSearchLine* self, QShowEvent* event);
void KTreeWidgetSearchLine_OnShowEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseShowEvent(KTreeWidgetSearchLine* self, QShowEvent* event);
void KTreeWidgetSearchLine_HideEvent(KTreeWidgetSearchLine* self, QHideEvent* event);
void KTreeWidgetSearchLine_OnHideEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseHideEvent(KTreeWidgetSearchLine* self, QHideEvent* event);
bool KTreeWidgetSearchLine_NativeEvent(KTreeWidgetSearchLine* self, const libqt_string eventType, void* message, intptr_t* result);
void KTreeWidgetSearchLine_OnNativeEvent(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseNativeEvent(KTreeWidgetSearchLine* self, const libqt_string eventType, void* message, intptr_t* result);
int KTreeWidgetSearchLine_Metric(const KTreeWidgetSearchLine* self, int param1);
void KTreeWidgetSearchLine_OnMetric(const KTreeWidgetSearchLine* self, intptr_t slot);
int KTreeWidgetSearchLine_QBaseMetric(const KTreeWidgetSearchLine* self, int param1);
void KTreeWidgetSearchLine_InitPainter(const KTreeWidgetSearchLine* self, QPainter* painter);
void KTreeWidgetSearchLine_OnInitPainter(const KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseInitPainter(const KTreeWidgetSearchLine* self, QPainter* painter);
QPaintDevice* KTreeWidgetSearchLine_Redirected(const KTreeWidgetSearchLine* self, QPoint* offset);
void KTreeWidgetSearchLine_OnRedirected(const KTreeWidgetSearchLine* self, intptr_t slot);
QPaintDevice* KTreeWidgetSearchLine_QBaseRedirected(const KTreeWidgetSearchLine* self, QPoint* offset);
QPainter* KTreeWidgetSearchLine_SharedPainter(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnSharedPainter(const KTreeWidgetSearchLine* self, intptr_t slot);
QPainter* KTreeWidgetSearchLine_QBaseSharedPainter(const KTreeWidgetSearchLine* self);
bool KTreeWidgetSearchLine_FocusNextPrevChild(KTreeWidgetSearchLine* self, bool next);
void KTreeWidgetSearchLine_OnFocusNextPrevChild(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseFocusNextPrevChild(KTreeWidgetSearchLine* self, bool next);
bool KTreeWidgetSearchLine_EventFilter(KTreeWidgetSearchLine* self, QObject* watched, QEvent* event);
void KTreeWidgetSearchLine_OnEventFilter(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseEventFilter(KTreeWidgetSearchLine* self, QObject* watched, QEvent* event);
void KTreeWidgetSearchLine_ChildEvent(KTreeWidgetSearchLine* self, QChildEvent* event);
void KTreeWidgetSearchLine_OnChildEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseChildEvent(KTreeWidgetSearchLine* self, QChildEvent* event);
void KTreeWidgetSearchLine_CustomEvent(KTreeWidgetSearchLine* self, QEvent* event);
void KTreeWidgetSearchLine_OnCustomEvent(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseCustomEvent(KTreeWidgetSearchLine* self, QEvent* event);
void KTreeWidgetSearchLine_ConnectNotify(KTreeWidgetSearchLine* self, const QMetaMethod* signal);
void KTreeWidgetSearchLine_OnConnectNotify(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseConnectNotify(KTreeWidgetSearchLine* self, const QMetaMethod* signal);
void KTreeWidgetSearchLine_DisconnectNotify(KTreeWidgetSearchLine* self, const QMetaMethod* signal);
void KTreeWidgetSearchLine_OnDisconnectNotify(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDisconnectNotify(KTreeWidgetSearchLine* self, const QMetaMethod* signal);
QRect* KTreeWidgetSearchLine_CursorRect(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnCursorRect(const KTreeWidgetSearchLine* self, intptr_t slot);
QRect* KTreeWidgetSearchLine_QBaseCursorRect(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_UpdateMicroFocus(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnUpdateMicroFocus(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseUpdateMicroFocus(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_Create(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnCreate(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseCreate(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_Destroy(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnDestroy(KTreeWidgetSearchLine* self, intptr_t slot);
void KTreeWidgetSearchLine_QBaseDestroy(KTreeWidgetSearchLine* self);
bool KTreeWidgetSearchLine_FocusNextChild(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnFocusNextChild(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseFocusNextChild(KTreeWidgetSearchLine* self);
bool KTreeWidgetSearchLine_FocusPreviousChild(KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnFocusPreviousChild(KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseFocusPreviousChild(KTreeWidgetSearchLine* self);
QObject* KTreeWidgetSearchLine_Sender(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnSender(const KTreeWidgetSearchLine* self, intptr_t slot);
QObject* KTreeWidgetSearchLine_QBaseSender(const KTreeWidgetSearchLine* self);
int KTreeWidgetSearchLine_SenderSignalIndex(const KTreeWidgetSearchLine* self);
void KTreeWidgetSearchLine_OnSenderSignalIndex(const KTreeWidgetSearchLine* self, intptr_t slot);
int KTreeWidgetSearchLine_QBaseSenderSignalIndex(const KTreeWidgetSearchLine* self);
int KTreeWidgetSearchLine_Receivers(const KTreeWidgetSearchLine* self, const char* signal);
void KTreeWidgetSearchLine_OnReceivers(const KTreeWidgetSearchLine* self, intptr_t slot);
int KTreeWidgetSearchLine_QBaseReceivers(const KTreeWidgetSearchLine* self, const char* signal);
bool KTreeWidgetSearchLine_IsSignalConnected(const KTreeWidgetSearchLine* self, const QMetaMethod* signal);
void KTreeWidgetSearchLine_OnIsSignalConnected(const KTreeWidgetSearchLine* self, intptr_t slot);
bool KTreeWidgetSearchLine_QBaseIsSignalConnected(const KTreeWidgetSearchLine* self, const QMetaMethod* signal);
double KTreeWidgetSearchLine_GetDecodedMetricF(const KTreeWidgetSearchLine* self, int metricA, int metricB);
void KTreeWidgetSearchLine_OnGetDecodedMetricF(const KTreeWidgetSearchLine* self, intptr_t slot);
double KTreeWidgetSearchLine_QBaseGetDecodedMetricF(const KTreeWidgetSearchLine* self, int metricA, int metricB);
void KTreeWidgetSearchLine_Delete(KTreeWidgetSearchLine* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
