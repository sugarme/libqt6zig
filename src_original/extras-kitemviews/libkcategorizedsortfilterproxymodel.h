#pragma once
#ifndef SRC_EXTRAS_KITEMVIEWSC_LIBKCATEGORIZEDSORTFILTERPROXYMODEL_H
#define SRC_EXTRAS_KITEMVIEWSC_LIBKCATEGORIZEDSORTFILTERPROXYMODEL_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KCategorizedSortFilterProxyModel KCategorizedSortFilterProxyModel;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractProxyModel QAbstractProxyModel;
typedef struct QChildEvent QChildEvent;
typedef struct QDataStream QDataStream;
typedef struct QEvent QEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMimeData QMimeData;
typedef struct QModelIndex QModelIndex;
typedef struct QModelRoleDataSpan QModelRoleDataSpan;
typedef struct QObject QObject;
typedef struct QSize QSize;
typedef struct QSortFilterProxyModel QSortFilterProxyModel;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
#endif

KCategorizedSortFilterProxyModel* KCategorizedSortFilterProxyModel_new();
KCategorizedSortFilterProxyModel* KCategorizedSortFilterProxyModel_new2(QObject* parent);
QMetaObject* KCategorizedSortFilterProxyModel_MetaObject(const KCategorizedSortFilterProxyModel* self);
void* KCategorizedSortFilterProxyModel_Metacast(KCategorizedSortFilterProxyModel* self, const char* param1);
int KCategorizedSortFilterProxyModel_Metacall(KCategorizedSortFilterProxyModel* self, int param1, int param2, void** param3);
libqt_string KCategorizedSortFilterProxyModel_Tr(const char* s);
void KCategorizedSortFilterProxyModel_Sort(KCategorizedSortFilterProxyModel* self, int column, int order);
bool KCategorizedSortFilterProxyModel_IsCategorizedModel(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_SetCategorizedModel(KCategorizedSortFilterProxyModel* self, bool categorizedModel);
int KCategorizedSortFilterProxyModel_SortColumn(const KCategorizedSortFilterProxyModel* self);
int KCategorizedSortFilterProxyModel_SortOrder(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_SetSortCategoriesByNaturalComparison(KCategorizedSortFilterProxyModel* self, bool sortCategoriesByNaturalComparison);
bool KCategorizedSortFilterProxyModel_SortCategoriesByNaturalComparison(const KCategorizedSortFilterProxyModel* self);
bool KCategorizedSortFilterProxyModel_LessThan(const KCategorizedSortFilterProxyModel* self, const QModelIndex* left, const QModelIndex* right);
bool KCategorizedSortFilterProxyModel_SubSortLessThan(const KCategorizedSortFilterProxyModel* self, const QModelIndex* left, const QModelIndex* right);
int KCategorizedSortFilterProxyModel_CompareCategories(const KCategorizedSortFilterProxyModel* self, const QModelIndex* left, const QModelIndex* right);
libqt_string KCategorizedSortFilterProxyModel_Tr2(const char* s, const char* c);
libqt_string KCategorizedSortFilterProxyModel_Tr3(const char* s, const char* c, int n);
void KCategorizedSortFilterProxyModel_OnMetacall(KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseMetacall(KCategorizedSortFilterProxyModel* self, int param1, int param2, void** param3);
void KCategorizedSortFilterProxyModel_OnSort(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseSort(KCategorizedSortFilterProxyModel* self, int column, int order);
void KCategorizedSortFilterProxyModel_OnLessThan(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseLessThan(const KCategorizedSortFilterProxyModel* self, const QModelIndex* left, const QModelIndex* right);
void KCategorizedSortFilterProxyModel_OnSubSortLessThan(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseSubSortLessThan(const KCategorizedSortFilterProxyModel* self, const QModelIndex* left, const QModelIndex* right);
void KCategorizedSortFilterProxyModel_OnCompareCategories(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseCompareCategories(const KCategorizedSortFilterProxyModel* self, const QModelIndex* left, const QModelIndex* right);
void KCategorizedSortFilterProxyModel_SetSourceModel(KCategorizedSortFilterProxyModel* self, QAbstractItemModel* sourceModel);
void KCategorizedSortFilterProxyModel_OnSetSourceModel(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseSetSourceModel(KCategorizedSortFilterProxyModel* self, QAbstractItemModel* sourceModel);
QModelIndex* KCategorizedSortFilterProxyModel_MapToSource(const KCategorizedSortFilterProxyModel* self, const QModelIndex* proxyIndex);
void KCategorizedSortFilterProxyModel_OnMapToSource(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseMapToSource(const KCategorizedSortFilterProxyModel* self, const QModelIndex* proxyIndex);
QModelIndex* KCategorizedSortFilterProxyModel_MapFromSource(const KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceIndex);
void KCategorizedSortFilterProxyModel_OnMapFromSource(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseMapFromSource(const KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceIndex);
QItemSelection* KCategorizedSortFilterProxyModel_MapSelectionToSource(const KCategorizedSortFilterProxyModel* self, const QItemSelection* proxySelection);
void KCategorizedSortFilterProxyModel_OnMapSelectionToSource(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QItemSelection* KCategorizedSortFilterProxyModel_QBaseMapSelectionToSource(const KCategorizedSortFilterProxyModel* self, const QItemSelection* proxySelection);
QItemSelection* KCategorizedSortFilterProxyModel_MapSelectionFromSource(const KCategorizedSortFilterProxyModel* self, const QItemSelection* sourceSelection);
void KCategorizedSortFilterProxyModel_OnMapSelectionFromSource(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QItemSelection* KCategorizedSortFilterProxyModel_QBaseMapSelectionFromSource(const KCategorizedSortFilterProxyModel* self, const QItemSelection* sourceSelection);
bool KCategorizedSortFilterProxyModel_FilterAcceptsRow(const KCategorizedSortFilterProxyModel* self, int source_row, const QModelIndex* source_parent);
void KCategorizedSortFilterProxyModel_OnFilterAcceptsRow(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseFilterAcceptsRow(const KCategorizedSortFilterProxyModel* self, int source_row, const QModelIndex* source_parent);
bool KCategorizedSortFilterProxyModel_FilterAcceptsColumn(const KCategorizedSortFilterProxyModel* self, int source_column, const QModelIndex* source_parent);
void KCategorizedSortFilterProxyModel_OnFilterAcceptsColumn(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseFilterAcceptsColumn(const KCategorizedSortFilterProxyModel* self, int source_column, const QModelIndex* source_parent);
QModelIndex* KCategorizedSortFilterProxyModel_Index(const KCategorizedSortFilterProxyModel* self, int row, int column, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnIndex(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseIndex(const KCategorizedSortFilterProxyModel* self, int row, int column, const QModelIndex* parent);
QModelIndex* KCategorizedSortFilterProxyModel_Parent(const KCategorizedSortFilterProxyModel* self, const QModelIndex* child);
void KCategorizedSortFilterProxyModel_OnParent(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseParent(const KCategorizedSortFilterProxyModel* self, const QModelIndex* child);
QModelIndex* KCategorizedSortFilterProxyModel_Sibling(const KCategorizedSortFilterProxyModel* self, int row, int column, const QModelIndex* idx);
void KCategorizedSortFilterProxyModel_OnSibling(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseSibling(const KCategorizedSortFilterProxyModel* self, int row, int column, const QModelIndex* idx);
int KCategorizedSortFilterProxyModel_RowCount(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnRowCount(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseRowCount(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
int KCategorizedSortFilterProxyModel_ColumnCount(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnColumnCount(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseColumnCount(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
bool KCategorizedSortFilterProxyModel_HasChildren(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnHasChildren(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseHasChildren(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
QVariant* KCategorizedSortFilterProxyModel_Data(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index, int role);
void KCategorizedSortFilterProxyModel_OnData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QVariant* KCategorizedSortFilterProxyModel_QBaseData(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index, int role);
bool KCategorizedSortFilterProxyModel_SetData(KCategorizedSortFilterProxyModel* self, const QModelIndex* index, const QVariant* value, int role);
void KCategorizedSortFilterProxyModel_OnSetData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseSetData(KCategorizedSortFilterProxyModel* self, const QModelIndex* index, const QVariant* value, int role);
QVariant* KCategorizedSortFilterProxyModel_HeaderData(const KCategorizedSortFilterProxyModel* self, int section, int orientation, int role);
void KCategorizedSortFilterProxyModel_OnHeaderData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QVariant* KCategorizedSortFilterProxyModel_QBaseHeaderData(const KCategorizedSortFilterProxyModel* self, int section, int orientation, int role);
bool KCategorizedSortFilterProxyModel_SetHeaderData(KCategorizedSortFilterProxyModel* self, int section, int orientation, const QVariant* value, int role);
void KCategorizedSortFilterProxyModel_OnSetHeaderData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseSetHeaderData(KCategorizedSortFilterProxyModel* self, int section, int orientation, const QVariant* value, int role);
QMimeData* KCategorizedSortFilterProxyModel_MimeData(const KCategorizedSortFilterProxyModel* self, const libqt_list /* of QModelIndex* */ indexes);
void KCategorizedSortFilterProxyModel_OnMimeData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QMimeData* KCategorizedSortFilterProxyModel_QBaseMimeData(const KCategorizedSortFilterProxyModel* self, const libqt_list /* of QModelIndex* */ indexes);
bool KCategorizedSortFilterProxyModel_DropMimeData(KCategorizedSortFilterProxyModel* self, const QMimeData* data, int action, int row, int column, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnDropMimeData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseDropMimeData(KCategorizedSortFilterProxyModel* self, const QMimeData* data, int action, int row, int column, const QModelIndex* parent);
bool KCategorizedSortFilterProxyModel_InsertRows(KCategorizedSortFilterProxyModel* self, int row, int count, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnInsertRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseInsertRows(KCategorizedSortFilterProxyModel* self, int row, int count, const QModelIndex* parent);
bool KCategorizedSortFilterProxyModel_InsertColumns(KCategorizedSortFilterProxyModel* self, int column, int count, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnInsertColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseInsertColumns(KCategorizedSortFilterProxyModel* self, int column, int count, const QModelIndex* parent);
bool KCategorizedSortFilterProxyModel_RemoveRows(KCategorizedSortFilterProxyModel* self, int row, int count, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnRemoveRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseRemoveRows(KCategorizedSortFilterProxyModel* self, int row, int count, const QModelIndex* parent);
bool KCategorizedSortFilterProxyModel_RemoveColumns(KCategorizedSortFilterProxyModel* self, int column, int count, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnRemoveColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseRemoveColumns(KCategorizedSortFilterProxyModel* self, int column, int count, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_FetchMore(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnFetchMore(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseFetchMore(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
bool KCategorizedSortFilterProxyModel_CanFetchMore(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnCanFetchMore(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseCanFetchMore(const KCategorizedSortFilterProxyModel* self, const QModelIndex* parent);
int KCategorizedSortFilterProxyModel_Flags(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
void KCategorizedSortFilterProxyModel_OnFlags(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseFlags(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
QModelIndex* KCategorizedSortFilterProxyModel_Buddy(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
void KCategorizedSortFilterProxyModel_OnBuddy(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseBuddy(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
libqt_list /* of QModelIndex* */ KCategorizedSortFilterProxyModel_Match(const KCategorizedSortFilterProxyModel* self, const QModelIndex* start, int role, const QVariant* value, int hits, int flags);
void KCategorizedSortFilterProxyModel_OnMatch(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
libqt_list /* of QModelIndex* */ KCategorizedSortFilterProxyModel_QBaseMatch(const KCategorizedSortFilterProxyModel* self, const QModelIndex* start, int role, const QVariant* value, int hits, int flags);
QSize* KCategorizedSortFilterProxyModel_Span(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
void KCategorizedSortFilterProxyModel_OnSpan(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QSize* KCategorizedSortFilterProxyModel_QBaseSpan(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
libqt_list /* of libqt_string */ KCategorizedSortFilterProxyModel_MimeTypes(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnMimeTypes(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
libqt_list /* of libqt_string */ KCategorizedSortFilterProxyModel_QBaseMimeTypes(const KCategorizedSortFilterProxyModel* self);
int KCategorizedSortFilterProxyModel_SupportedDropActions(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnSupportedDropActions(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseSupportedDropActions(const KCategorizedSortFilterProxyModel* self);
bool KCategorizedSortFilterProxyModel_Submit(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnSubmit(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseSubmit(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_Revert(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnRevert(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseRevert(KCategorizedSortFilterProxyModel* self);
libqt_map /* of int to QVariant* */ KCategorizedSortFilterProxyModel_ItemData(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
void KCategorizedSortFilterProxyModel_OnItemData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
libqt_map /* of int to QVariant* */ KCategorizedSortFilterProxyModel_QBaseItemData(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
bool KCategorizedSortFilterProxyModel_SetItemData(KCategorizedSortFilterProxyModel* self, const QModelIndex* index, const libqt_map /* of int to QVariant* */ roles);
void KCategorizedSortFilterProxyModel_OnSetItemData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseSetItemData(KCategorizedSortFilterProxyModel* self, const QModelIndex* index, const libqt_map /* of int to QVariant* */ roles);
bool KCategorizedSortFilterProxyModel_ClearItemData(KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
void KCategorizedSortFilterProxyModel_OnClearItemData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseClearItemData(KCategorizedSortFilterProxyModel* self, const QModelIndex* index);
bool KCategorizedSortFilterProxyModel_CanDropMimeData(const KCategorizedSortFilterProxyModel* self, const QMimeData* data, int action, int row, int column, const QModelIndex* parent);
void KCategorizedSortFilterProxyModel_OnCanDropMimeData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseCanDropMimeData(const KCategorizedSortFilterProxyModel* self, const QMimeData* data, int action, int row, int column, const QModelIndex* parent);
int KCategorizedSortFilterProxyModel_SupportedDragActions(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnSupportedDragActions(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseSupportedDragActions(const KCategorizedSortFilterProxyModel* self);
libqt_map /* of int to libqt_string */ KCategorizedSortFilterProxyModel_RoleNames(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnRoleNames(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
libqt_map /* of int to libqt_string */ KCategorizedSortFilterProxyModel_QBaseRoleNames(const KCategorizedSortFilterProxyModel* self);
bool KCategorizedSortFilterProxyModel_MoveRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceRow, int count, const QModelIndex* destinationParent, int destinationChild);
void KCategorizedSortFilterProxyModel_OnMoveRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseMoveRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceRow, int count, const QModelIndex* destinationParent, int destinationChild);
bool KCategorizedSortFilterProxyModel_MoveColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceColumn, int count, const QModelIndex* destinationParent, int destinationChild);
void KCategorizedSortFilterProxyModel_OnMoveColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseMoveColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceColumn, int count, const QModelIndex* destinationParent, int destinationChild);
void KCategorizedSortFilterProxyModel_MultiData(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
void KCategorizedSortFilterProxyModel_OnMultiData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseMultiData(const KCategorizedSortFilterProxyModel* self, const QModelIndex* index, QModelRoleDataSpan* roleDataSpan);
void KCategorizedSortFilterProxyModel_ResetInternalData(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnResetInternalData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseResetInternalData(KCategorizedSortFilterProxyModel* self);
bool KCategorizedSortFilterProxyModel_Event(KCategorizedSortFilterProxyModel* self, QEvent* event);
void KCategorizedSortFilterProxyModel_OnEvent(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseEvent(KCategorizedSortFilterProxyModel* self, QEvent* event);
bool KCategorizedSortFilterProxyModel_EventFilter(KCategorizedSortFilterProxyModel* self, QObject* watched, QEvent* event);
void KCategorizedSortFilterProxyModel_OnEventFilter(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseEventFilter(KCategorizedSortFilterProxyModel* self, QObject* watched, QEvent* event);
void KCategorizedSortFilterProxyModel_TimerEvent(KCategorizedSortFilterProxyModel* self, QTimerEvent* event);
void KCategorizedSortFilterProxyModel_OnTimerEvent(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseTimerEvent(KCategorizedSortFilterProxyModel* self, QTimerEvent* event);
void KCategorizedSortFilterProxyModel_ChildEvent(KCategorizedSortFilterProxyModel* self, QChildEvent* event);
void KCategorizedSortFilterProxyModel_OnChildEvent(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseChildEvent(KCategorizedSortFilterProxyModel* self, QChildEvent* event);
void KCategorizedSortFilterProxyModel_CustomEvent(KCategorizedSortFilterProxyModel* self, QEvent* event);
void KCategorizedSortFilterProxyModel_OnCustomEvent(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseCustomEvent(KCategorizedSortFilterProxyModel* self, QEvent* event);
void KCategorizedSortFilterProxyModel_ConnectNotify(KCategorizedSortFilterProxyModel* self, const QMetaMethod* signal);
void KCategorizedSortFilterProxyModel_OnConnectNotify(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseConnectNotify(KCategorizedSortFilterProxyModel* self, const QMetaMethod* signal);
void KCategorizedSortFilterProxyModel_DisconnectNotify(KCategorizedSortFilterProxyModel* self, const QMetaMethod* signal);
void KCategorizedSortFilterProxyModel_OnDisconnectNotify(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseDisconnectNotify(KCategorizedSortFilterProxyModel* self, const QMetaMethod* signal);
void KCategorizedSortFilterProxyModel_InvalidateFilter(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnInvalidateFilter(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseInvalidateFilter(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_InvalidateRowsFilter(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnInvalidateRowsFilter(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseInvalidateRowsFilter(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_InvalidateColumnsFilter(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnInvalidateColumnsFilter(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseInvalidateColumnsFilter(KCategorizedSortFilterProxyModel* self);
QModelIndex* KCategorizedSortFilterProxyModel_CreateSourceIndex(const KCategorizedSortFilterProxyModel* self, int row, int col, void* internalPtr);
void KCategorizedSortFilterProxyModel_OnCreateSourceIndex(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseCreateSourceIndex(const KCategorizedSortFilterProxyModel* self, int row, int col, void* internalPtr);
QModelIndex* KCategorizedSortFilterProxyModel_CreateIndex(const KCategorizedSortFilterProxyModel* self, int row, int column);
void KCategorizedSortFilterProxyModel_OnCreateIndex(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QModelIndex* KCategorizedSortFilterProxyModel_QBaseCreateIndex(const KCategorizedSortFilterProxyModel* self, int row, int column);
void KCategorizedSortFilterProxyModel_EncodeData(const KCategorizedSortFilterProxyModel* self, const libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
void KCategorizedSortFilterProxyModel_OnEncodeData(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEncodeData(const KCategorizedSortFilterProxyModel* self, const libqt_list /* of QModelIndex* */ indexes, QDataStream* stream);
bool KCategorizedSortFilterProxyModel_DecodeData(KCategorizedSortFilterProxyModel* self, int row, int column, const QModelIndex* parent, QDataStream* stream);
void KCategorizedSortFilterProxyModel_OnDecodeData(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseDecodeData(KCategorizedSortFilterProxyModel* self, int row, int column, const QModelIndex* parent, QDataStream* stream);
void KCategorizedSortFilterProxyModel_BeginInsertRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_OnBeginInsertRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseBeginInsertRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_EndInsertRows(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndInsertRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndInsertRows(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_BeginRemoveRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_OnBeginRemoveRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseBeginRemoveRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_EndRemoveRows(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndRemoveRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndRemoveRows(KCategorizedSortFilterProxyModel* self);
bool KCategorizedSortFilterProxyModel_BeginMoveRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceFirst, int sourceLast, const QModelIndex* destinationParent, int destinationRow);
void KCategorizedSortFilterProxyModel_OnBeginMoveRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseBeginMoveRows(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceFirst, int sourceLast, const QModelIndex* destinationParent, int destinationRow);
void KCategorizedSortFilterProxyModel_EndMoveRows(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndMoveRows(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndMoveRows(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_BeginInsertColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_OnBeginInsertColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseBeginInsertColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_EndInsertColumns(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndInsertColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndInsertColumns(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_BeginRemoveColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_OnBeginRemoveColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseBeginRemoveColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* parent, int first, int last);
void KCategorizedSortFilterProxyModel_EndRemoveColumns(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndRemoveColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndRemoveColumns(KCategorizedSortFilterProxyModel* self);
bool KCategorizedSortFilterProxyModel_BeginMoveColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceFirst, int sourceLast, const QModelIndex* destinationParent, int destinationColumn);
void KCategorizedSortFilterProxyModel_OnBeginMoveColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseBeginMoveColumns(KCategorizedSortFilterProxyModel* self, const QModelIndex* sourceParent, int sourceFirst, int sourceLast, const QModelIndex* destinationParent, int destinationColumn);
void KCategorizedSortFilterProxyModel_EndMoveColumns(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndMoveColumns(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndMoveColumns(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_BeginResetModel(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnBeginResetModel(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseBeginResetModel(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_EndResetModel(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnEndResetModel(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseEndResetModel(KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_ChangePersistentIndex(KCategorizedSortFilterProxyModel* self, const QModelIndex* from, const QModelIndex* to);
void KCategorizedSortFilterProxyModel_OnChangePersistentIndex(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseChangePersistentIndex(KCategorizedSortFilterProxyModel* self, const QModelIndex* from, const QModelIndex* to);
void KCategorizedSortFilterProxyModel_ChangePersistentIndexList(KCategorizedSortFilterProxyModel* self, const libqt_list /* of QModelIndex* */ from, const libqt_list /* of QModelIndex* */ to);
void KCategorizedSortFilterProxyModel_OnChangePersistentIndexList(KCategorizedSortFilterProxyModel* self, intptr_t slot);
void KCategorizedSortFilterProxyModel_QBaseChangePersistentIndexList(KCategorizedSortFilterProxyModel* self, const libqt_list /* of QModelIndex* */ from, const libqt_list /* of QModelIndex* */ to);
libqt_list /* of QModelIndex* */ KCategorizedSortFilterProxyModel_PersistentIndexList(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnPersistentIndexList(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
libqt_list /* of QModelIndex* */ KCategorizedSortFilterProxyModel_QBasePersistentIndexList(const KCategorizedSortFilterProxyModel* self);
QObject* KCategorizedSortFilterProxyModel_Sender(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnSender(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
QObject* KCategorizedSortFilterProxyModel_QBaseSender(const KCategorizedSortFilterProxyModel* self);
int KCategorizedSortFilterProxyModel_SenderSignalIndex(const KCategorizedSortFilterProxyModel* self);
void KCategorizedSortFilterProxyModel_OnSenderSignalIndex(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseSenderSignalIndex(const KCategorizedSortFilterProxyModel* self);
int KCategorizedSortFilterProxyModel_Receivers(const KCategorizedSortFilterProxyModel* self, const char* signal);
void KCategorizedSortFilterProxyModel_OnReceivers(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
int KCategorizedSortFilterProxyModel_QBaseReceivers(const KCategorizedSortFilterProxyModel* self, const char* signal);
bool KCategorizedSortFilterProxyModel_IsSignalConnected(const KCategorizedSortFilterProxyModel* self, const QMetaMethod* signal);
void KCategorizedSortFilterProxyModel_OnIsSignalConnected(const KCategorizedSortFilterProxyModel* self, intptr_t slot);
bool KCategorizedSortFilterProxyModel_QBaseIsSignalConnected(const KCategorizedSortFilterProxyModel* self, const QMetaMethod* signal);
void KCategorizedSortFilterProxyModel_Delete(KCategorizedSortFilterProxyModel* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
