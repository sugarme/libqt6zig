#pragma once
#ifndef SRCC_LIBQTABLEVIEW_H
#define SRCC_LIBQTABLEVIEW_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHeaderView QHeaderView;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTableView QTableView;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

QTableView* QTableView_new(QWidget* parent);
QTableView* QTableView_new2();
QMetaObject* QTableView_MetaObject(const QTableView* self);
void* QTableView_Metacast(QTableView* self, const char* param1);
int QTableView_Metacall(QTableView* self, int param1, int param2, void** param3);
libqt_string QTableView_Tr(const char* s);
void QTableView_SetModel(QTableView* self, QAbstractItemModel* model);
void QTableView_SetRootIndex(QTableView* self, const QModelIndex* index);
void QTableView_SetSelectionModel(QTableView* self, QItemSelectionModel* selectionModel);
void QTableView_DoItemsLayout(QTableView* self);
QHeaderView* QTableView_HorizontalHeader(const QTableView* self);
QHeaderView* QTableView_VerticalHeader(const QTableView* self);
void QTableView_SetHorizontalHeader(QTableView* self, QHeaderView* header);
void QTableView_SetVerticalHeader(QTableView* self, QHeaderView* header);
int QTableView_RowViewportPosition(const QTableView* self, int row);
int QTableView_RowAt(const QTableView* self, int y);
void QTableView_SetRowHeight(QTableView* self, int row, int height);
int QTableView_RowHeight(const QTableView* self, int row);
int QTableView_ColumnViewportPosition(const QTableView* self, int column);
int QTableView_ColumnAt(const QTableView* self, int x);
void QTableView_SetColumnWidth(QTableView* self, int column, int width);
int QTableView_ColumnWidth(const QTableView* self, int column);
bool QTableView_IsRowHidden(const QTableView* self, int row);
void QTableView_SetRowHidden(QTableView* self, int row, bool hide);
bool QTableView_IsColumnHidden(const QTableView* self, int column);
void QTableView_SetColumnHidden(QTableView* self, int column, bool hide);
void QTableView_SetSortingEnabled(QTableView* self, bool enable);
bool QTableView_IsSortingEnabled(const QTableView* self);
bool QTableView_ShowGrid(const QTableView* self);
int QTableView_GridStyle(const QTableView* self);
void QTableView_SetGridStyle(QTableView* self, int style);
void QTableView_SetWordWrap(QTableView* self, bool on);
bool QTableView_WordWrap(const QTableView* self);
void QTableView_SetCornerButtonEnabled(QTableView* self, bool enable);
bool QTableView_IsCornerButtonEnabled(const QTableView* self);
QRect* QTableView_VisualRect(const QTableView* self, const QModelIndex* index);
void QTableView_ScrollTo(QTableView* self, const QModelIndex* index, int hint);
QModelIndex* QTableView_IndexAt(const QTableView* self, const QPoint* p);
void QTableView_SetSpan(QTableView* self, int row, int column, int rowSpan, int columnSpan);
int QTableView_RowSpan(const QTableView* self, int row, int column);
int QTableView_ColumnSpan(const QTableView* self, int row, int column);
void QTableView_ClearSpans(QTableView* self);
void QTableView_SelectRow(QTableView* self, int row);
void QTableView_SelectColumn(QTableView* self, int column);
void QTableView_HideRow(QTableView* self, int row);
void QTableView_HideColumn(QTableView* self, int column);
void QTableView_ShowRow(QTableView* self, int row);
void QTableView_ShowColumn(QTableView* self, int column);
void QTableView_ResizeRowToContents(QTableView* self, int row);
void QTableView_ResizeRowsToContents(QTableView* self);
void QTableView_ResizeColumnToContents(QTableView* self, int column);
void QTableView_ResizeColumnsToContents(QTableView* self);
void QTableView_SortByColumn(QTableView* self, int column, int order);
void QTableView_SetShowGrid(QTableView* self, bool show);
void QTableView_ScrollContentsBy(QTableView* self, int dx, int dy);
void QTableView_InitViewItemOption(const QTableView* self, QStyleOptionViewItem* option);
void QTableView_PaintEvent(QTableView* self, QPaintEvent* e);
void QTableView_TimerEvent(QTableView* self, QTimerEvent* event);
void QTableView_DropEvent(QTableView* self, QDropEvent* event);
int QTableView_HorizontalOffset(const QTableView* self);
int QTableView_VerticalOffset(const QTableView* self);
QModelIndex* QTableView_MoveCursor(QTableView* self, int cursorAction, int modifiers);
void QTableView_SetSelection(QTableView* self, const QRect* rect, int command);
QRegion* QTableView_VisualRegionForSelection(const QTableView* self, const QItemSelection* selection);
libqt_list /* of QModelIndex* */ QTableView_SelectedIndexes(const QTableView* self);
void QTableView_UpdateGeometries(QTableView* self);
QSize* QTableView_ViewportSizeHint(const QTableView* self);
int QTableView_SizeHintForRow(const QTableView* self, int row);
int QTableView_SizeHintForColumn(const QTableView* self, int column);
void QTableView_VerticalScrollbarAction(QTableView* self, int action);
void QTableView_HorizontalScrollbarAction(QTableView* self, int action);
bool QTableView_IsIndexHidden(const QTableView* self, const QModelIndex* index);
void QTableView_SelectionChanged(QTableView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QTableView_CurrentChanged(QTableView* self, const QModelIndex* current, const QModelIndex* previous);
libqt_string QTableView_Tr2(const char* s, const char* c);
libqt_string QTableView_Tr3(const char* s, const char* c, int n);
void QTableView_OnMetacall(QTableView* self, intptr_t slot);
int QTableView_QBaseMetacall(QTableView* self, int param1, int param2, void** param3);
void QTableView_OnSetModel(QTableView* self, intptr_t slot);
void QTableView_QBaseSetModel(QTableView* self, QAbstractItemModel* model);
void QTableView_OnSetRootIndex(QTableView* self, intptr_t slot);
void QTableView_QBaseSetRootIndex(QTableView* self, const QModelIndex* index);
void QTableView_OnSetSelectionModel(QTableView* self, intptr_t slot);
void QTableView_QBaseSetSelectionModel(QTableView* self, QItemSelectionModel* selectionModel);
void QTableView_OnDoItemsLayout(QTableView* self, intptr_t slot);
void QTableView_QBaseDoItemsLayout(QTableView* self);
void QTableView_OnVisualRect(const QTableView* self, intptr_t slot);
QRect* QTableView_QBaseVisualRect(const QTableView* self, const QModelIndex* index);
void QTableView_OnScrollTo(QTableView* self, intptr_t slot);
void QTableView_QBaseScrollTo(QTableView* self, const QModelIndex* index, int hint);
void QTableView_OnIndexAt(const QTableView* self, intptr_t slot);
QModelIndex* QTableView_QBaseIndexAt(const QTableView* self, const QPoint* p);
void QTableView_OnScrollContentsBy(QTableView* self, intptr_t slot);
void QTableView_QBaseScrollContentsBy(QTableView* self, int dx, int dy);
void QTableView_OnInitViewItemOption(const QTableView* self, intptr_t slot);
void QTableView_QBaseInitViewItemOption(const QTableView* self, QStyleOptionViewItem* option);
void QTableView_OnPaintEvent(QTableView* self, intptr_t slot);
void QTableView_QBasePaintEvent(QTableView* self, QPaintEvent* e);
void QTableView_OnTimerEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseTimerEvent(QTableView* self, QTimerEvent* event);
void QTableView_OnDropEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseDropEvent(QTableView* self, QDropEvent* event);
void QTableView_OnHorizontalOffset(const QTableView* self, intptr_t slot);
int QTableView_QBaseHorizontalOffset(const QTableView* self);
void QTableView_OnVerticalOffset(const QTableView* self, intptr_t slot);
int QTableView_QBaseVerticalOffset(const QTableView* self);
void QTableView_OnMoveCursor(QTableView* self, intptr_t slot);
QModelIndex* QTableView_QBaseMoveCursor(QTableView* self, int cursorAction, int modifiers);
void QTableView_OnSetSelection(QTableView* self, intptr_t slot);
void QTableView_QBaseSetSelection(QTableView* self, const QRect* rect, int command);
void QTableView_OnVisualRegionForSelection(const QTableView* self, intptr_t slot);
QRegion* QTableView_QBaseVisualRegionForSelection(const QTableView* self, const QItemSelection* selection);
void QTableView_OnSelectedIndexes(const QTableView* self, intptr_t slot);
libqt_list /* of QModelIndex* */ QTableView_QBaseSelectedIndexes(const QTableView* self);
void QTableView_OnUpdateGeometries(QTableView* self, intptr_t slot);
void QTableView_QBaseUpdateGeometries(QTableView* self);
void QTableView_OnViewportSizeHint(const QTableView* self, intptr_t slot);
QSize* QTableView_QBaseViewportSizeHint(const QTableView* self);
void QTableView_OnSizeHintForRow(const QTableView* self, intptr_t slot);
int QTableView_QBaseSizeHintForRow(const QTableView* self, int row);
void QTableView_OnSizeHintForColumn(const QTableView* self, intptr_t slot);
int QTableView_QBaseSizeHintForColumn(const QTableView* self, int column);
void QTableView_OnVerticalScrollbarAction(QTableView* self, intptr_t slot);
void QTableView_QBaseVerticalScrollbarAction(QTableView* self, int action);
void QTableView_OnHorizontalScrollbarAction(QTableView* self, intptr_t slot);
void QTableView_QBaseHorizontalScrollbarAction(QTableView* self, int action);
void QTableView_OnIsIndexHidden(const QTableView* self, intptr_t slot);
bool QTableView_QBaseIsIndexHidden(const QTableView* self, const QModelIndex* index);
void QTableView_OnSelectionChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseSelectionChanged(QTableView* self, const QItemSelection* selected, const QItemSelection* deselected);
void QTableView_OnCurrentChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseCurrentChanged(QTableView* self, const QModelIndex* current, const QModelIndex* previous);
void QTableView_KeyboardSearch(QTableView* self, const libqt_string search);
void QTableView_OnKeyboardSearch(QTableView* self, intptr_t slot);
void QTableView_QBaseKeyboardSearch(QTableView* self, const libqt_string search);
QAbstractItemDelegate* QTableView_ItemDelegateForIndex(const QTableView* self, const QModelIndex* index);
void QTableView_OnItemDelegateForIndex(const QTableView* self, intptr_t slot);
QAbstractItemDelegate* QTableView_QBaseItemDelegateForIndex(const QTableView* self, const QModelIndex* index);
QVariant* QTableView_InputMethodQuery(const QTableView* self, int query);
void QTableView_OnInputMethodQuery(const QTableView* self, intptr_t slot);
QVariant* QTableView_QBaseInputMethodQuery(const QTableView* self, int query);
void QTableView_Reset(QTableView* self);
void QTableView_OnReset(QTableView* self, intptr_t slot);
void QTableView_QBaseReset(QTableView* self);
void QTableView_SelectAll(QTableView* self);
void QTableView_OnSelectAll(QTableView* self, intptr_t slot);
void QTableView_QBaseSelectAll(QTableView* self);
void QTableView_DataChanged(QTableView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QTableView_OnDataChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseDataChanged(QTableView* self, const QModelIndex* topLeft, const QModelIndex* bottomRight, const libqt_list /* of int */ roles);
void QTableView_RowsInserted(QTableView* self, const QModelIndex* parent, int start, int end);
void QTableView_OnRowsInserted(QTableView* self, intptr_t slot);
void QTableView_QBaseRowsInserted(QTableView* self, const QModelIndex* parent, int start, int end);
void QTableView_RowsAboutToBeRemoved(QTableView* self, const QModelIndex* parent, int start, int end);
void QTableView_OnRowsAboutToBeRemoved(QTableView* self, intptr_t slot);
void QTableView_QBaseRowsAboutToBeRemoved(QTableView* self, const QModelIndex* parent, int start, int end);
void QTableView_UpdateEditorData(QTableView* self);
void QTableView_OnUpdateEditorData(QTableView* self, intptr_t slot);
void QTableView_QBaseUpdateEditorData(QTableView* self);
void QTableView_UpdateEditorGeometries(QTableView* self);
void QTableView_OnUpdateEditorGeometries(QTableView* self, intptr_t slot);
void QTableView_QBaseUpdateEditorGeometries(QTableView* self);
void QTableView_VerticalScrollbarValueChanged(QTableView* self, int value);
void QTableView_OnVerticalScrollbarValueChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseVerticalScrollbarValueChanged(QTableView* self, int value);
void QTableView_HorizontalScrollbarValueChanged(QTableView* self, int value);
void QTableView_OnHorizontalScrollbarValueChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseHorizontalScrollbarValueChanged(QTableView* self, int value);
void QTableView_CloseEditor(QTableView* self, QWidget* editor, int hint);
void QTableView_OnCloseEditor(QTableView* self, intptr_t slot);
void QTableView_QBaseCloseEditor(QTableView* self, QWidget* editor, int hint);
void QTableView_CommitData(QTableView* self, QWidget* editor);
void QTableView_OnCommitData(QTableView* self, intptr_t slot);
void QTableView_QBaseCommitData(QTableView* self, QWidget* editor);
void QTableView_EditorDestroyed(QTableView* self, QObject* editor);
void QTableView_OnEditorDestroyed(QTableView* self, intptr_t slot);
void QTableView_QBaseEditorDestroyed(QTableView* self, QObject* editor);
bool QTableView_Edit2(QTableView* self, const QModelIndex* index, int trigger, QEvent* event);
void QTableView_OnEdit2(QTableView* self, intptr_t slot);
bool QTableView_QBaseEdit2(QTableView* self, const QModelIndex* index, int trigger, QEvent* event);
int QTableView_SelectionCommand(const QTableView* self, const QModelIndex* index, const QEvent* event);
void QTableView_OnSelectionCommand(const QTableView* self, intptr_t slot);
int QTableView_QBaseSelectionCommand(const QTableView* self, const QModelIndex* index, const QEvent* event);
void QTableView_StartDrag(QTableView* self, int supportedActions);
void QTableView_OnStartDrag(QTableView* self, intptr_t slot);
void QTableView_QBaseStartDrag(QTableView* self, int supportedActions);
bool QTableView_FocusNextPrevChild(QTableView* self, bool next);
void QTableView_OnFocusNextPrevChild(QTableView* self, intptr_t slot);
bool QTableView_QBaseFocusNextPrevChild(QTableView* self, bool next);
bool QTableView_Event(QTableView* self, QEvent* event);
void QTableView_OnEvent(QTableView* self, intptr_t slot);
bool QTableView_QBaseEvent(QTableView* self, QEvent* event);
bool QTableView_ViewportEvent(QTableView* self, QEvent* event);
void QTableView_OnViewportEvent(QTableView* self, intptr_t slot);
bool QTableView_QBaseViewportEvent(QTableView* self, QEvent* event);
void QTableView_MousePressEvent(QTableView* self, QMouseEvent* event);
void QTableView_OnMousePressEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseMousePressEvent(QTableView* self, QMouseEvent* event);
void QTableView_MouseMoveEvent(QTableView* self, QMouseEvent* event);
void QTableView_OnMouseMoveEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseMouseMoveEvent(QTableView* self, QMouseEvent* event);
void QTableView_MouseReleaseEvent(QTableView* self, QMouseEvent* event);
void QTableView_OnMouseReleaseEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseMouseReleaseEvent(QTableView* self, QMouseEvent* event);
void QTableView_MouseDoubleClickEvent(QTableView* self, QMouseEvent* event);
void QTableView_OnMouseDoubleClickEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseMouseDoubleClickEvent(QTableView* self, QMouseEvent* event);
void QTableView_DragEnterEvent(QTableView* self, QDragEnterEvent* event);
void QTableView_OnDragEnterEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseDragEnterEvent(QTableView* self, QDragEnterEvent* event);
void QTableView_DragMoveEvent(QTableView* self, QDragMoveEvent* event);
void QTableView_OnDragMoveEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseDragMoveEvent(QTableView* self, QDragMoveEvent* event);
void QTableView_DragLeaveEvent(QTableView* self, QDragLeaveEvent* event);
void QTableView_OnDragLeaveEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseDragLeaveEvent(QTableView* self, QDragLeaveEvent* event);
void QTableView_FocusInEvent(QTableView* self, QFocusEvent* event);
void QTableView_OnFocusInEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseFocusInEvent(QTableView* self, QFocusEvent* event);
void QTableView_FocusOutEvent(QTableView* self, QFocusEvent* event);
void QTableView_OnFocusOutEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseFocusOutEvent(QTableView* self, QFocusEvent* event);
void QTableView_KeyPressEvent(QTableView* self, QKeyEvent* event);
void QTableView_OnKeyPressEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseKeyPressEvent(QTableView* self, QKeyEvent* event);
void QTableView_ResizeEvent(QTableView* self, QResizeEvent* event);
void QTableView_OnResizeEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseResizeEvent(QTableView* self, QResizeEvent* event);
void QTableView_InputMethodEvent(QTableView* self, QInputMethodEvent* event);
void QTableView_OnInputMethodEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseInputMethodEvent(QTableView* self, QInputMethodEvent* event);
bool QTableView_EventFilter(QTableView* self, QObject* object, QEvent* event);
void QTableView_OnEventFilter(QTableView* self, intptr_t slot);
bool QTableView_QBaseEventFilter(QTableView* self, QObject* object, QEvent* event);
QSize* QTableView_MinimumSizeHint(const QTableView* self);
void QTableView_OnMinimumSizeHint(const QTableView* self, intptr_t slot);
QSize* QTableView_QBaseMinimumSizeHint(const QTableView* self);
QSize* QTableView_SizeHint(const QTableView* self);
void QTableView_OnSizeHint(const QTableView* self, intptr_t slot);
QSize* QTableView_QBaseSizeHint(const QTableView* self);
void QTableView_SetupViewport(QTableView* self, QWidget* viewport);
void QTableView_OnSetupViewport(QTableView* self, intptr_t slot);
void QTableView_QBaseSetupViewport(QTableView* self, QWidget* viewport);
void QTableView_WheelEvent(QTableView* self, QWheelEvent* param1);
void QTableView_OnWheelEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseWheelEvent(QTableView* self, QWheelEvent* param1);
void QTableView_ContextMenuEvent(QTableView* self, QContextMenuEvent* param1);
void QTableView_OnContextMenuEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseContextMenuEvent(QTableView* self, QContextMenuEvent* param1);
void QTableView_ChangeEvent(QTableView* self, QEvent* param1);
void QTableView_OnChangeEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseChangeEvent(QTableView* self, QEvent* param1);
void QTableView_InitStyleOption(const QTableView* self, QStyleOptionFrame* option);
void QTableView_OnInitStyleOption(const QTableView* self, intptr_t slot);
void QTableView_QBaseInitStyleOption(const QTableView* self, QStyleOptionFrame* option);
int QTableView_DevType(const QTableView* self);
void QTableView_OnDevType(const QTableView* self, intptr_t slot);
int QTableView_QBaseDevType(const QTableView* self);
void QTableView_SetVisible(QTableView* self, bool visible);
void QTableView_OnSetVisible(QTableView* self, intptr_t slot);
void QTableView_QBaseSetVisible(QTableView* self, bool visible);
int QTableView_HeightForWidth(const QTableView* self, int param1);
void QTableView_OnHeightForWidth(const QTableView* self, intptr_t slot);
int QTableView_QBaseHeightForWidth(const QTableView* self, int param1);
bool QTableView_HasHeightForWidth(const QTableView* self);
void QTableView_OnHasHeightForWidth(const QTableView* self, intptr_t slot);
bool QTableView_QBaseHasHeightForWidth(const QTableView* self);
QPaintEngine* QTableView_PaintEngine(const QTableView* self);
void QTableView_OnPaintEngine(const QTableView* self, intptr_t slot);
QPaintEngine* QTableView_QBasePaintEngine(const QTableView* self);
void QTableView_KeyReleaseEvent(QTableView* self, QKeyEvent* event);
void QTableView_OnKeyReleaseEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseKeyReleaseEvent(QTableView* self, QKeyEvent* event);
void QTableView_EnterEvent(QTableView* self, QEnterEvent* event);
void QTableView_OnEnterEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseEnterEvent(QTableView* self, QEnterEvent* event);
void QTableView_LeaveEvent(QTableView* self, QEvent* event);
void QTableView_OnLeaveEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseLeaveEvent(QTableView* self, QEvent* event);
void QTableView_MoveEvent(QTableView* self, QMoveEvent* event);
void QTableView_OnMoveEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseMoveEvent(QTableView* self, QMoveEvent* event);
void QTableView_CloseEvent(QTableView* self, QCloseEvent* event);
void QTableView_OnCloseEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseCloseEvent(QTableView* self, QCloseEvent* event);
void QTableView_TabletEvent(QTableView* self, QTabletEvent* event);
void QTableView_OnTabletEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseTabletEvent(QTableView* self, QTabletEvent* event);
void QTableView_ActionEvent(QTableView* self, QActionEvent* event);
void QTableView_OnActionEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseActionEvent(QTableView* self, QActionEvent* event);
void QTableView_ShowEvent(QTableView* self, QShowEvent* event);
void QTableView_OnShowEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseShowEvent(QTableView* self, QShowEvent* event);
void QTableView_HideEvent(QTableView* self, QHideEvent* event);
void QTableView_OnHideEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseHideEvent(QTableView* self, QHideEvent* event);
bool QTableView_NativeEvent(QTableView* self, const libqt_string eventType, void* message, intptr_t* result);
void QTableView_OnNativeEvent(QTableView* self, intptr_t slot);
bool QTableView_QBaseNativeEvent(QTableView* self, const libqt_string eventType, void* message, intptr_t* result);
int QTableView_Metric(const QTableView* self, int param1);
void QTableView_OnMetric(const QTableView* self, intptr_t slot);
int QTableView_QBaseMetric(const QTableView* self, int param1);
void QTableView_InitPainter(const QTableView* self, QPainter* painter);
void QTableView_OnInitPainter(const QTableView* self, intptr_t slot);
void QTableView_QBaseInitPainter(const QTableView* self, QPainter* painter);
QPaintDevice* QTableView_Redirected(const QTableView* self, QPoint* offset);
void QTableView_OnRedirected(const QTableView* self, intptr_t slot);
QPaintDevice* QTableView_QBaseRedirected(const QTableView* self, QPoint* offset);
QPainter* QTableView_SharedPainter(const QTableView* self);
void QTableView_OnSharedPainter(const QTableView* self, intptr_t slot);
QPainter* QTableView_QBaseSharedPainter(const QTableView* self);
void QTableView_ChildEvent(QTableView* self, QChildEvent* event);
void QTableView_OnChildEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseChildEvent(QTableView* self, QChildEvent* event);
void QTableView_CustomEvent(QTableView* self, QEvent* event);
void QTableView_OnCustomEvent(QTableView* self, intptr_t slot);
void QTableView_QBaseCustomEvent(QTableView* self, QEvent* event);
void QTableView_ConnectNotify(QTableView* self, const QMetaMethod* signal);
void QTableView_OnConnectNotify(QTableView* self, intptr_t slot);
void QTableView_QBaseConnectNotify(QTableView* self, const QMetaMethod* signal);
void QTableView_DisconnectNotify(QTableView* self, const QMetaMethod* signal);
void QTableView_OnDisconnectNotify(QTableView* self, intptr_t slot);
void QTableView_QBaseDisconnectNotify(QTableView* self, const QMetaMethod* signal);
void QTableView_RowMoved(QTableView* self, int row, int oldIndex, int newIndex);
void QTableView_OnRowMoved(QTableView* self, intptr_t slot);
void QTableView_QBaseRowMoved(QTableView* self, int row, int oldIndex, int newIndex);
void QTableView_ColumnMoved(QTableView* self, int column, int oldIndex, int newIndex);
void QTableView_OnColumnMoved(QTableView* self, intptr_t slot);
void QTableView_QBaseColumnMoved(QTableView* self, int column, int oldIndex, int newIndex);
void QTableView_RowResized(QTableView* self, int row, int oldHeight, int newHeight);
void QTableView_OnRowResized(QTableView* self, intptr_t slot);
void QTableView_QBaseRowResized(QTableView* self, int row, int oldHeight, int newHeight);
void QTableView_ColumnResized(QTableView* self, int column, int oldWidth, int newWidth);
void QTableView_OnColumnResized(QTableView* self, intptr_t slot);
void QTableView_QBaseColumnResized(QTableView* self, int column, int oldWidth, int newWidth);
void QTableView_RowCountChanged(QTableView* self, int oldCount, int newCount);
void QTableView_OnRowCountChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseRowCountChanged(QTableView* self, int oldCount, int newCount);
void QTableView_ColumnCountChanged(QTableView* self, int oldCount, int newCount);
void QTableView_OnColumnCountChanged(QTableView* self, intptr_t slot);
void QTableView_QBaseColumnCountChanged(QTableView* self, int oldCount, int newCount);
int QTableView_State(const QTableView* self);
void QTableView_OnState(const QTableView* self, intptr_t slot);
int QTableView_QBaseState(const QTableView* self);
void QTableView_SetState(QTableView* self, int state);
void QTableView_OnSetState(QTableView* self, intptr_t slot);
void QTableView_QBaseSetState(QTableView* self, int state);
void QTableView_ScheduleDelayedItemsLayout(QTableView* self);
void QTableView_OnScheduleDelayedItemsLayout(QTableView* self, intptr_t slot);
void QTableView_QBaseScheduleDelayedItemsLayout(QTableView* self);
void QTableView_ExecuteDelayedItemsLayout(QTableView* self);
void QTableView_OnExecuteDelayedItemsLayout(QTableView* self, intptr_t slot);
void QTableView_QBaseExecuteDelayedItemsLayout(QTableView* self);
void QTableView_SetDirtyRegion(QTableView* self, const QRegion* region);
void QTableView_OnSetDirtyRegion(QTableView* self, intptr_t slot);
void QTableView_QBaseSetDirtyRegion(QTableView* self, const QRegion* region);
void QTableView_ScrollDirtyRegion(QTableView* self, int dx, int dy);
void QTableView_OnScrollDirtyRegion(QTableView* self, intptr_t slot);
void QTableView_QBaseScrollDirtyRegion(QTableView* self, int dx, int dy);
QPoint* QTableView_DirtyRegionOffset(const QTableView* self);
void QTableView_OnDirtyRegionOffset(const QTableView* self, intptr_t slot);
QPoint* QTableView_QBaseDirtyRegionOffset(const QTableView* self);
void QTableView_StartAutoScroll(QTableView* self);
void QTableView_OnStartAutoScroll(QTableView* self, intptr_t slot);
void QTableView_QBaseStartAutoScroll(QTableView* self);
void QTableView_StopAutoScroll(QTableView* self);
void QTableView_OnStopAutoScroll(QTableView* self, intptr_t slot);
void QTableView_QBaseStopAutoScroll(QTableView* self);
void QTableView_DoAutoScroll(QTableView* self);
void QTableView_OnDoAutoScroll(QTableView* self, intptr_t slot);
void QTableView_QBaseDoAutoScroll(QTableView* self);
int QTableView_DropIndicatorPosition(const QTableView* self);
void QTableView_OnDropIndicatorPosition(const QTableView* self, intptr_t slot);
int QTableView_QBaseDropIndicatorPosition(const QTableView* self);
void QTableView_SetViewportMargins(QTableView* self, int left, int top, int right, int bottom);
void QTableView_OnSetViewportMargins(QTableView* self, intptr_t slot);
void QTableView_QBaseSetViewportMargins(QTableView* self, int left, int top, int right, int bottom);
QMargins* QTableView_ViewportMargins(const QTableView* self);
void QTableView_OnViewportMargins(const QTableView* self, intptr_t slot);
QMargins* QTableView_QBaseViewportMargins(const QTableView* self);
void QTableView_DrawFrame(QTableView* self, QPainter* param1);
void QTableView_OnDrawFrame(QTableView* self, intptr_t slot);
void QTableView_QBaseDrawFrame(QTableView* self, QPainter* param1);
void QTableView_UpdateMicroFocus(QTableView* self);
void QTableView_OnUpdateMicroFocus(QTableView* self, intptr_t slot);
void QTableView_QBaseUpdateMicroFocus(QTableView* self);
void QTableView_Create(QTableView* self);
void QTableView_OnCreate(QTableView* self, intptr_t slot);
void QTableView_QBaseCreate(QTableView* self);
void QTableView_Destroy(QTableView* self);
void QTableView_OnDestroy(QTableView* self, intptr_t slot);
void QTableView_QBaseDestroy(QTableView* self);
bool QTableView_FocusNextChild(QTableView* self);
void QTableView_OnFocusNextChild(QTableView* self, intptr_t slot);
bool QTableView_QBaseFocusNextChild(QTableView* self);
bool QTableView_FocusPreviousChild(QTableView* self);
void QTableView_OnFocusPreviousChild(QTableView* self, intptr_t slot);
bool QTableView_QBaseFocusPreviousChild(QTableView* self);
QObject* QTableView_Sender(const QTableView* self);
void QTableView_OnSender(const QTableView* self, intptr_t slot);
QObject* QTableView_QBaseSender(const QTableView* self);
int QTableView_SenderSignalIndex(const QTableView* self);
void QTableView_OnSenderSignalIndex(const QTableView* self, intptr_t slot);
int QTableView_QBaseSenderSignalIndex(const QTableView* self);
int QTableView_Receivers(const QTableView* self, const char* signal);
void QTableView_OnReceivers(const QTableView* self, intptr_t slot);
int QTableView_QBaseReceivers(const QTableView* self, const char* signal);
bool QTableView_IsSignalConnected(const QTableView* self, const QMetaMethod* signal);
void QTableView_OnIsSignalConnected(const QTableView* self, intptr_t slot);
bool QTableView_QBaseIsSignalConnected(const QTableView* self, const QMetaMethod* signal);
double QTableView_GetDecodedMetricF(const QTableView* self, int metricA, int metricB);
void QTableView_OnGetDecodedMetricF(const QTableView* self, intptr_t slot);
double QTableView_QBaseGetDecodedMetricF(const QTableView* self, int metricA, int metricB);
void QTableView_Delete(QTableView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
