#pragma once
#ifndef SRC_EXTRAS_KXMLGUIC_LIBKMAINWINDOW_H
#define SRC_EXTRAS_KXMLGUIC_LIBKMAINWINDOW_H

#include <stdbool.h>
#include <stddef.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../qtlibc.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
#else
typedef struct KConfig KConfig;
typedef struct KConfigGroup KConfigGroup;
typedef struct KMainWindow KMainWindow;
typedef struct KToolBar KToolBar;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMainWindow QMainWindow;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

KMainWindow* KMainWindow_new(QWidget* parent);
KMainWindow* KMainWindow_new2();
KMainWindow* KMainWindow_new3(QWidget* parent, int flags);
QMetaObject* KMainWindow_MetaObject(const KMainWindow* self);
void* KMainWindow_Metacast(KMainWindow* self, const char* param1);
int KMainWindow_Metacall(KMainWindow* self, int param1, int param2, void** param3);
libqt_string KMainWindow_Tr(const char* s);
bool KMainWindow_CanBeRestored(int numberOfInstances);
libqt_string KMainWindow_ClassNameOfToplevel(int instanceNumber);
bool KMainWindow_Restore(KMainWindow* self, int numberOfInstances);
bool KMainWindow_HasMenuBar(KMainWindow* self);
libqt_list /* of KMainWindow* */ KMainWindow_MemberList();
KToolBar* KMainWindow_ToolBar(KMainWindow* self);
libqt_list /* of KToolBar* */ KMainWindow_ToolBars(const KMainWindow* self);
void KMainWindow_SetAutoSaveSettings(KMainWindow* self);
void KMainWindow_SetAutoSaveSettings2(KMainWindow* self, const KConfigGroup* group);
void KMainWindow_ResetAutoSaveSettings(KMainWindow* self);
bool KMainWindow_AutoSaveSettings(const KMainWindow* self);
libqt_string KMainWindow_AutoSaveGroup(const KMainWindow* self);
KConfigGroup* KMainWindow_AutoSaveConfigGroup(const KMainWindow* self);
void KMainWindow_SetStateConfigGroup(KMainWindow* self, const libqt_string configGroup);
KConfigGroup* KMainWindow_StateConfigGroup(const KMainWindow* self);
void KMainWindow_ApplyMainWindowSettings(KMainWindow* self, const KConfigGroup* config);
void KMainWindow_SaveMainWindowSettings(KMainWindow* self, KConfigGroup* config);
libqt_string KMainWindow_DbusName(const KMainWindow* self);
void KMainWindow_SetCaption(KMainWindow* self, const libqt_string caption);
void KMainWindow_SetCaption2(KMainWindow* self, const libqt_string caption, bool modified);
void KMainWindow_SetPlainCaption(KMainWindow* self, const libqt_string caption);
void KMainWindow_AppHelpActivated(KMainWindow* self);
void KMainWindow_SetSettingsDirty(KMainWindow* self);
bool KMainWindow_Event(KMainWindow* self, QEvent* event);
void KMainWindow_KeyPressEvent(KMainWindow* self, QKeyEvent* keyEvent);
void KMainWindow_CloseEvent(KMainWindow* self, QCloseEvent* param1);
bool KMainWindow_QueryClose(KMainWindow* self);
void KMainWindow_SaveProperties(KMainWindow* self, KConfigGroup* param1);
void KMainWindow_ReadProperties(KMainWindow* self, const KConfigGroup* param1);
void KMainWindow_SaveGlobalProperties(KMainWindow* self, KConfig* sessionConfig);
void KMainWindow_ReadGlobalProperties(KMainWindow* self, KConfig* sessionConfig);
libqt_string KMainWindow_Tr2(const char* s, const char* c);
libqt_string KMainWindow_Tr3(const char* s, const char* c, int n);
bool KMainWindow_Restore2(KMainWindow* self, int numberOfInstances, bool show);
KToolBar* KMainWindow_ToolBar1(KMainWindow* self, const libqt_string name);
void KMainWindow_SetAutoSaveSettings1(KMainWindow* self, const libqt_string groupName);
void KMainWindow_SetAutoSaveSettings22(KMainWindow* self, const libqt_string groupName, bool saveWindowSize);
void KMainWindow_SetAutoSaveSettings23(KMainWindow* self, const KConfigGroup* group, bool saveWindowSize);
void KMainWindow_OnMetacall(KMainWindow* self, intptr_t slot);
int KMainWindow_QBaseMetacall(KMainWindow* self, int param1, int param2, void** param3);
void KMainWindow_OnApplyMainWindowSettings(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseApplyMainWindowSettings(KMainWindow* self, const KConfigGroup* config);
void KMainWindow_OnSetCaption(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSetCaption(KMainWindow* self, const libqt_string caption);
void KMainWindow_OnSetCaption2(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSetCaption2(KMainWindow* self, const libqt_string caption, bool modified);
void KMainWindow_OnSetPlainCaption(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSetPlainCaption(KMainWindow* self, const libqt_string caption);
void KMainWindow_OnEvent(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseEvent(KMainWindow* self, QEvent* event);
void KMainWindow_OnKeyPressEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseKeyPressEvent(KMainWindow* self, QKeyEvent* keyEvent);
void KMainWindow_OnCloseEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseCloseEvent(KMainWindow* self, QCloseEvent* param1);
void KMainWindow_OnQueryClose(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseQueryClose(KMainWindow* self);
void KMainWindow_OnSaveProperties(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSaveProperties(KMainWindow* self, KConfigGroup* param1);
void KMainWindow_OnReadProperties(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseReadProperties(KMainWindow* self, const KConfigGroup* param1);
void KMainWindow_OnSaveGlobalProperties(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSaveGlobalProperties(KMainWindow* self, KConfig* sessionConfig);
void KMainWindow_OnReadGlobalProperties(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseReadGlobalProperties(KMainWindow* self, KConfig* sessionConfig);
QMenu* KMainWindow_CreatePopupMenu(KMainWindow* self);
void KMainWindow_OnCreatePopupMenu(KMainWindow* self, intptr_t slot);
QMenu* KMainWindow_QBaseCreatePopupMenu(KMainWindow* self);
void KMainWindow_ContextMenuEvent(KMainWindow* self, QContextMenuEvent* event);
void KMainWindow_OnContextMenuEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseContextMenuEvent(KMainWindow* self, QContextMenuEvent* event);
int KMainWindow_DevType(const KMainWindow* self);
void KMainWindow_OnDevType(const KMainWindow* self, intptr_t slot);
int KMainWindow_QBaseDevType(const KMainWindow* self);
void KMainWindow_SetVisible(KMainWindow* self, bool visible);
void KMainWindow_OnSetVisible(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSetVisible(KMainWindow* self, bool visible);
QSize* KMainWindow_SizeHint(const KMainWindow* self);
void KMainWindow_OnSizeHint(const KMainWindow* self, intptr_t slot);
QSize* KMainWindow_QBaseSizeHint(const KMainWindow* self);
QSize* KMainWindow_MinimumSizeHint(const KMainWindow* self);
void KMainWindow_OnMinimumSizeHint(const KMainWindow* self, intptr_t slot);
QSize* KMainWindow_QBaseMinimumSizeHint(const KMainWindow* self);
int KMainWindow_HeightForWidth(const KMainWindow* self, int param1);
void KMainWindow_OnHeightForWidth(const KMainWindow* self, intptr_t slot);
int KMainWindow_QBaseHeightForWidth(const KMainWindow* self, int param1);
bool KMainWindow_HasHeightForWidth(const KMainWindow* self);
void KMainWindow_OnHasHeightForWidth(const KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseHasHeightForWidth(const KMainWindow* self);
QPaintEngine* KMainWindow_PaintEngine(const KMainWindow* self);
void KMainWindow_OnPaintEngine(const KMainWindow* self, intptr_t slot);
QPaintEngine* KMainWindow_QBasePaintEngine(const KMainWindow* self);
void KMainWindow_MousePressEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_OnMousePressEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseMousePressEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_MouseReleaseEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_OnMouseReleaseEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseMouseReleaseEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_MouseDoubleClickEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_OnMouseDoubleClickEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseMouseDoubleClickEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_MouseMoveEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_OnMouseMoveEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseMouseMoveEvent(KMainWindow* self, QMouseEvent* event);
void KMainWindow_WheelEvent(KMainWindow* self, QWheelEvent* event);
void KMainWindow_OnWheelEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseWheelEvent(KMainWindow* self, QWheelEvent* event);
void KMainWindow_KeyReleaseEvent(KMainWindow* self, QKeyEvent* event);
void KMainWindow_OnKeyReleaseEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseKeyReleaseEvent(KMainWindow* self, QKeyEvent* event);
void KMainWindow_FocusInEvent(KMainWindow* self, QFocusEvent* event);
void KMainWindow_OnFocusInEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseFocusInEvent(KMainWindow* self, QFocusEvent* event);
void KMainWindow_FocusOutEvent(KMainWindow* self, QFocusEvent* event);
void KMainWindow_OnFocusOutEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseFocusOutEvent(KMainWindow* self, QFocusEvent* event);
void KMainWindow_EnterEvent(KMainWindow* self, QEnterEvent* event);
void KMainWindow_OnEnterEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseEnterEvent(KMainWindow* self, QEnterEvent* event);
void KMainWindow_LeaveEvent(KMainWindow* self, QEvent* event);
void KMainWindow_OnLeaveEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseLeaveEvent(KMainWindow* self, QEvent* event);
void KMainWindow_PaintEvent(KMainWindow* self, QPaintEvent* event);
void KMainWindow_OnPaintEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBasePaintEvent(KMainWindow* self, QPaintEvent* event);
void KMainWindow_MoveEvent(KMainWindow* self, QMoveEvent* event);
void KMainWindow_OnMoveEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseMoveEvent(KMainWindow* self, QMoveEvent* event);
void KMainWindow_ResizeEvent(KMainWindow* self, QResizeEvent* event);
void KMainWindow_OnResizeEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseResizeEvent(KMainWindow* self, QResizeEvent* event);
void KMainWindow_TabletEvent(KMainWindow* self, QTabletEvent* event);
void KMainWindow_OnTabletEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseTabletEvent(KMainWindow* self, QTabletEvent* event);
void KMainWindow_ActionEvent(KMainWindow* self, QActionEvent* event);
void KMainWindow_OnActionEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseActionEvent(KMainWindow* self, QActionEvent* event);
void KMainWindow_DragEnterEvent(KMainWindow* self, QDragEnterEvent* event);
void KMainWindow_OnDragEnterEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseDragEnterEvent(KMainWindow* self, QDragEnterEvent* event);
void KMainWindow_DragMoveEvent(KMainWindow* self, QDragMoveEvent* event);
void KMainWindow_OnDragMoveEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseDragMoveEvent(KMainWindow* self, QDragMoveEvent* event);
void KMainWindow_DragLeaveEvent(KMainWindow* self, QDragLeaveEvent* event);
void KMainWindow_OnDragLeaveEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseDragLeaveEvent(KMainWindow* self, QDragLeaveEvent* event);
void KMainWindow_DropEvent(KMainWindow* self, QDropEvent* event);
void KMainWindow_OnDropEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseDropEvent(KMainWindow* self, QDropEvent* event);
void KMainWindow_ShowEvent(KMainWindow* self, QShowEvent* event);
void KMainWindow_OnShowEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseShowEvent(KMainWindow* self, QShowEvent* event);
void KMainWindow_HideEvent(KMainWindow* self, QHideEvent* event);
void KMainWindow_OnHideEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseHideEvent(KMainWindow* self, QHideEvent* event);
bool KMainWindow_NativeEvent(KMainWindow* self, const libqt_string eventType, void* message, intptr_t* result);
void KMainWindow_OnNativeEvent(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseNativeEvent(KMainWindow* self, const libqt_string eventType, void* message, intptr_t* result);
void KMainWindow_ChangeEvent(KMainWindow* self, QEvent* param1);
void KMainWindow_OnChangeEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseChangeEvent(KMainWindow* self, QEvent* param1);
int KMainWindow_Metric(const KMainWindow* self, int param1);
void KMainWindow_OnMetric(const KMainWindow* self, intptr_t slot);
int KMainWindow_QBaseMetric(const KMainWindow* self, int param1);
void KMainWindow_InitPainter(const KMainWindow* self, QPainter* painter);
void KMainWindow_OnInitPainter(const KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseInitPainter(const KMainWindow* self, QPainter* painter);
QPaintDevice* KMainWindow_Redirected(const KMainWindow* self, QPoint* offset);
void KMainWindow_OnRedirected(const KMainWindow* self, intptr_t slot);
QPaintDevice* KMainWindow_QBaseRedirected(const KMainWindow* self, QPoint* offset);
QPainter* KMainWindow_SharedPainter(const KMainWindow* self);
void KMainWindow_OnSharedPainter(const KMainWindow* self, intptr_t slot);
QPainter* KMainWindow_QBaseSharedPainter(const KMainWindow* self);
void KMainWindow_InputMethodEvent(KMainWindow* self, QInputMethodEvent* param1);
void KMainWindow_OnInputMethodEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseInputMethodEvent(KMainWindow* self, QInputMethodEvent* param1);
QVariant* KMainWindow_InputMethodQuery(const KMainWindow* self, int param1);
void KMainWindow_OnInputMethodQuery(const KMainWindow* self, intptr_t slot);
QVariant* KMainWindow_QBaseInputMethodQuery(const KMainWindow* self, int param1);
bool KMainWindow_FocusNextPrevChild(KMainWindow* self, bool next);
void KMainWindow_OnFocusNextPrevChild(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseFocusNextPrevChild(KMainWindow* self, bool next);
bool KMainWindow_EventFilter(KMainWindow* self, QObject* watched, QEvent* event);
void KMainWindow_OnEventFilter(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseEventFilter(KMainWindow* self, QObject* watched, QEvent* event);
void KMainWindow_TimerEvent(KMainWindow* self, QTimerEvent* event);
void KMainWindow_OnTimerEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseTimerEvent(KMainWindow* self, QTimerEvent* event);
void KMainWindow_ChildEvent(KMainWindow* self, QChildEvent* event);
void KMainWindow_OnChildEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseChildEvent(KMainWindow* self, QChildEvent* event);
void KMainWindow_CustomEvent(KMainWindow* self, QEvent* event);
void KMainWindow_OnCustomEvent(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseCustomEvent(KMainWindow* self, QEvent* event);
void KMainWindow_ConnectNotify(KMainWindow* self, const QMetaMethod* signal);
void KMainWindow_OnConnectNotify(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseConnectNotify(KMainWindow* self, const QMetaMethod* signal);
void KMainWindow_DisconnectNotify(KMainWindow* self, const QMetaMethod* signal);
void KMainWindow_OnDisconnectNotify(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseDisconnectNotify(KMainWindow* self, const QMetaMethod* signal);
void KMainWindow_SavePropertiesInternal(KMainWindow* self, KConfig* param1, int param2);
void KMainWindow_OnSavePropertiesInternal(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSavePropertiesInternal(KMainWindow* self, KConfig* param1, int param2);
bool KMainWindow_ReadPropertiesInternal(KMainWindow* self, KConfig* param1, int param2);
void KMainWindow_OnReadPropertiesInternal(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseReadPropertiesInternal(KMainWindow* self, KConfig* param1, int param2);
bool KMainWindow_SettingsDirty(const KMainWindow* self);
void KMainWindow_OnSettingsDirty(const KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseSettingsDirty(const KMainWindow* self);
void KMainWindow_SaveAutoSaveSettings(KMainWindow* self);
void KMainWindow_OnSaveAutoSaveSettings(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseSaveAutoSaveSettings(KMainWindow* self);
void KMainWindow_UpdateMicroFocus(KMainWindow* self);
void KMainWindow_OnUpdateMicroFocus(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseUpdateMicroFocus(KMainWindow* self);
void KMainWindow_Create(KMainWindow* self);
void KMainWindow_OnCreate(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseCreate(KMainWindow* self);
void KMainWindow_Destroy(KMainWindow* self);
void KMainWindow_OnDestroy(KMainWindow* self, intptr_t slot);
void KMainWindow_QBaseDestroy(KMainWindow* self);
bool KMainWindow_FocusNextChild(KMainWindow* self);
void KMainWindow_OnFocusNextChild(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseFocusNextChild(KMainWindow* self);
bool KMainWindow_FocusPreviousChild(KMainWindow* self);
void KMainWindow_OnFocusPreviousChild(KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseFocusPreviousChild(KMainWindow* self);
QObject* KMainWindow_Sender(const KMainWindow* self);
void KMainWindow_OnSender(const KMainWindow* self, intptr_t slot);
QObject* KMainWindow_QBaseSender(const KMainWindow* self);
int KMainWindow_SenderSignalIndex(const KMainWindow* self);
void KMainWindow_OnSenderSignalIndex(const KMainWindow* self, intptr_t slot);
int KMainWindow_QBaseSenderSignalIndex(const KMainWindow* self);
int KMainWindow_Receivers(const KMainWindow* self, const char* signal);
void KMainWindow_OnReceivers(const KMainWindow* self, intptr_t slot);
int KMainWindow_QBaseReceivers(const KMainWindow* self, const char* signal);
bool KMainWindow_IsSignalConnected(const KMainWindow* self, const QMetaMethod* signal);
void KMainWindow_OnIsSignalConnected(const KMainWindow* self, intptr_t slot);
bool KMainWindow_QBaseIsSignalConnected(const KMainWindow* self, const QMetaMethod* signal);
double KMainWindow_GetDecodedMetricF(const KMainWindow* self, int metricA, int metricB);
void KMainWindow_OnGetDecodedMetricF(const KMainWindow* self, intptr_t slot);
double KMainWindow_QBaseGetDecodedMetricF(const KMainWindow* self, int metricA, int metricB);
void KMainWindow_Delete(KMainWindow* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
